<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Adam8enの8log</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-10-12T07:14:46.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Adam Ben</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Go修炼手册——接口</title>
    <link href="http://example.com/posts/3eaf2f8154b3/"/>
    <id>http://example.com/posts/3eaf2f8154b3/</id>
    <published>2024-10-12T07:14:46.000Z</published>
    <updated>2024-10-12T07:14:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>本章我们来学习Go语言中接口的概念。单论接口的使用来说，学习它并不困难。但更重要的是理解Go语言中接口的设计哲学，即“面向接口编程”和“面向对象编程”背后的底层逻辑。倘若不好好弄清楚接口的设计理念，那么在实际业务中也难以派上用场。</p><p>首先我们来介绍接口的定义，之后单独抽一小节来阐述接口的设计理念，最后详细介绍Go语言中接口的使用方法。</p><h2 id="接口约定"><a class="markdownIt-Anchor" href="#接口约定"></a> 接口约定</h2><p>接口类型是一种抽象的类型。它不会暴露出它所代表的对象的内部值的结构和这个对象支持的基础操作的集合；它们只会表现出它们自己的方法。</p><p>要定义一个接口，使用<code>type</code>关键字即可。我们以中的io.Writer接口为例：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> io</span><br><span class="line"></span><br><span class="line"><span class="comment">// Writer is the interface that wraps the basic Write method.</span></span><br><span class="line"><span class="keyword">type</span> Writer <span class="keyword">interface</span> &#123;</span><br><span class="line">    <span class="comment">// Write writes len(p) bytes from p to the underlying data stream.</span></span><br><span class="line">    <span class="comment">// It returns the number of bytes written from p (0 &lt;= n &lt;= len(p))</span></span><br><span class="line">    <span class="comment">// and any error encountered that caused the write to stop early.</span></span><br><span class="line">    <span class="comment">// Write must return a non-nil error if it returns n &lt; len(p).</span></span><br><span class="line">    <span class="comment">// Write must not modify the slice data, even temporarily.</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// Implementations must not retain p.</span></span><br><span class="line">Write(p []<span class="type">byte</span>) (n <span class="type">int</span>, err <span class="type">error</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，声明一个接口的方法很简单，只需要<code>type</code>+接口名+<code>interface</code>即可。</p><p>同时展示接口的使用方法，我们给出Fprintf函数的定义，它调用了io.Writer接口。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> fmt</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Fprintf</span><span class="params">(w io.Writer, format <span class="type">string</span>, args ...<span class="keyword">interface</span>&#123;&#125;)</span></span> (<span class="type">int</span>, <span class="type">error</span>)</span><br></pre></td></tr></table></figure><p>io.Writer类型定义了函数Fprintf和这个函数调用者之间的约定。一方面这个约定需要调用者提供具体类型的值就像<code>*os.File</code>和<code>*bytes.Buffer</code>，这些类型都有一个特定签名和行为的Write的函数；另一方面这个约定保证了Fprintf接受任何满足io.Writer接口的值都可以工作。Fprintf函数没有假定写入的是一个文件或是一段内存，而是写入一个可以调用Write函数的值。</p><p>我们可以定义一个新的类型进行校验，下面<code>*ByteCounter</code>类型的Write方法，仅仅在丢弃写向它的字节前统计它的长度。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> ByteCounter <span class="type">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *ByteCounter)</span></span> Write(p []<span class="type">byte</span>) (<span class="type">int</span>, <span class="type">error</span>) &#123;</span><br><span class="line">    *c += ByteCounter(<span class="built_in">len</span>(p)) <span class="comment">// convert int to ByteCounter</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(p), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是由于<code>*ByteCounter</code>满足io.Writer的约定，我们可以把它传入Fprintf函数中；Fprintf函数执行字符串格式化的过程不会去关注ByteCounter正确的累加结果的长度。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> c ByteCounter</span><br><span class="line">c.Write([]<span class="type">byte</span>(<span class="string">&quot;hello&quot;</span>))</span><br><span class="line">fmt.Println(c) <span class="comment">// &quot;5&quot;, = len(&quot;hello&quot;)</span></span><br><span class="line">c = <span class="number">0</span> <span class="comment">// reset the counter</span></span><br><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;Dolly&quot;</span></span><br><span class="line">fmt.Fprintf(&amp;c, <span class="string">&quot;hello, %s&quot;</span>, name)</span><br><span class="line">fmt.Println(c) <span class="comment">// &quot;12&quot;, = len(&quot;hello, Dolly&quot;)</span></span><br></pre></td></tr></table></figure><p>通过以上的例子，我们已经掌握了接口的基本用法。接着我们来说说接口为什么要这么做，或者说，这么做是为了什么。</p><h2 id="接口的设计哲学"><a class="markdownIt-Anchor" href="#接口的设计哲学"></a> 接口的设计哲学</h2><p>已单独整理成一篇文章：<a href="https://adamben.top/posts/7a99acb03ff0/">番外：Go 接口的设计哲学 | Adam8en の 8log (adamben.top)</a></p><h2 id="接口类型"><a class="markdownIt-Anchor" href="#接口类型"></a> 接口类型</h2><p>接口类型具体描述了一系列方法的集合，一个实现了这些方法的具体类型是这个接口类型的实例。也就是说，实现接口是隐式的，并不需要“implement”关键字来显示实现。</p><p>接口类型可以直接在定义中写明方法，也可以通过组合已有的接口来定义新的接口类型：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> io</span><br><span class="line"><span class="keyword">type</span> Reader <span class="keyword">interface</span>&#123;</span><br><span class="line">    Read(p []<span class="type">byte</span>) (n <span class="type">int</span>, err <span class="type">error</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Closer <span class="keyword">interface</span>&#123;</span><br><span class="line">    Close() <span class="type">error</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ReadWriter <span class="keyword">interface</span>&#123;</span><br><span class="line">    Reader</span><br><span class="line">    Writer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ReadWriteCloser <span class="keyword">interface</span>&#123;</span><br><span class="line">    Reader</span><br><span class="line">    Writer</span><br><span class="line">    Closer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面用到的语法和结构内嵌相似，我们可以用这种方式以一个简写命名一个接口，而不用声明它所有的方法。这种方式称为<strong>接口内嵌</strong>。当然，在接口里不使用内嵌而重写定义也是可以的，甚至使用混合风格都没有问题。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> ReadWriter <span class="keyword">interface</span> &#123;</span><br><span class="line">    Read(p []<span class="type">byte</span>) (n <span class="type">int</span>, err <span class="type">error</span>)</span><br><span class="line">    Write(p []<span class="type">byte</span>) (n <span class="type">int</span>, err <span class="type">error</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ReadWriter <span class="keyword">interface</span> &#123;</span><br><span class="line">    Read(p []<span class="type">byte</span>) (n <span class="type">int</span>, err <span class="type">error</span>)</span><br><span class="line">    Writer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现接口的条件"><a class="markdownIt-Anchor" href="#实现接口的条件"></a> 实现接口的条件</h2><p>接口指定的规则非常简单：表达一个类型属于某个接口只要这个类型实现这个接口。这个规则甚至适用于等式右边本身也是一个接口类型。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> w io.Writer</span><br><span class="line">w = os.Stdout <span class="comment">// OK: *os.File has Write method</span></span><br><span class="line">w = <span class="built_in">new</span>(bytes.Buffer) <span class="comment">// OK: *bytes.Buffer has Write method</span></span><br><span class="line">w = time.Second <span class="comment">// compile error: time.Duration lacks Write method</span></span><br><span class="line"></span><br><span class="line">w = rwc <span class="comment">// OK: io.ReadWriteCloser has Write method</span></span><br><span class="line">rwc = w <span class="comment">// compile error: io.Writer lacks Close method</span></span><br></pre></td></tr></table></figure><p>接下来讲解几个细节：</p><h3 id="指针的接口与语法糖"><a class="markdownIt-Anchor" href="#指针的接口与语法糖"></a> 指针的接口与语法糖</h3><p>在介绍结构体的章节中，对于每一个命名过的具体类型T；它的一些方法的接收者是类型T本身，另一些方法的接受者则是一个 *T 的指针。然而，在T类型的参数上调用一个 *T 的方法是合法的，这是一个语法糖：只要这个参数是一个变量，编译器就会隐式的获取它的地址，然后调用接受者为 *T 的方法。这也意味着另一件事：T类型的值不拥有所有 *T 指针的方法，它可能只实现了更少的接口。</p><p>举例来说，IntSet类型的String方法的接收者是一个指针类型，我们可以在一个IntSet变量上调用这个方法，但我们不能在一个不能寻址的IntSet值上调用这个方法。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> IntSet <span class="keyword">struct</span> &#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*IntSet)</span></span> String() <span class="type">string</span></span><br><span class="line"><span class="keyword">var</span> _ = IntSet&#123;&#125;.String() <span class="comment">// compile error: String requires *IntSet receiver</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> s IntSet</span><br><span class="line"><span class="keyword">var</span> _ = s.String() <span class="comment">// OK: s is a variable and &amp;s has a String method</span></span><br></pre></td></tr></table></figure><p>因此，由于只有<code>*IntSet</code>类型有String方法，所以也只有<code>*IntSet</code>类型实现了fmt.Stringer接口。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _ fmt.Stringer = &amp;s <span class="comment">// OK</span></span><br><span class="line"><span class="keyword">var</span> _ fmt.Stringer = s <span class="comment">// compile error: IntSet lacks String method</span></span><br></pre></td></tr></table></figure><p>这个小细节只要平时注意使用变量，不调用无地址的方法，基本不会遇到bug。</p><h3 id="接口类型封装"><a class="markdownIt-Anchor" href="#接口类型封装"></a> 接口类型封装</h3><p>就像信封封装和隐藏起信件来一样，接口类型封装和隐藏具体类型和它的值。即使具体类型有其它的方法，也只有接口类型暴露出来的方法会被调用到。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">os.Stdout.Write([]<span class="type">byte</span>(<span class="string">&quot;hello&quot;</span>)) <span class="comment">// OK: *os.File has Write method</span></span><br><span class="line">os.Stdout.Close() <span class="comment">// OK: *os.File has Close method</span></span><br><span class="line"><span class="keyword">var</span> w io.Writer</span><br><span class="line">w = os.Stdout</span><br><span class="line">w.Write([]<span class="type">byte</span>(<span class="string">&quot;hello&quot;</span>)) <span class="comment">// OK: io.Writer has Write method</span></span><br><span class="line">w.Close() <span class="comment">// compile error: io.Writer lacks Close method</span></span><br></pre></td></tr></table></figure><p>也就是说，要表达接口必须要实现接口定义的所有方法，是<strong>一个大于或等于的关系</strong>。接口只强求你实现它规定的方法，至于数据类型如果还拥有其他接口未定义的方法，也依然不会报错。只是在调用接口时，你只能调用接口暴露的方法，而不能调用接口隐藏而数据类型持有的其他方法。</p><p>换句话来说，我们可以用接口来实现对数据类型的封装。</p><h3 id="空接口的妙用"><a class="markdownIt-Anchor" href="#空接口的妙用"></a> 空接口的妙用</h3><p>一个有更多方法的接口类型，比如io.ReadWriter，和少一些方法的接口类型例如io.Reader，进行对比；更多方法的接口类型会告诉我们更多关于它的值持有的信息，并且对实现它的类型要求更加严格。那么关于interface{}类型，它没有任何方法，请讲出哪些具体的类型实现了它？</p><p>这看上去好像没有用，但实际上interface{}被称为空接口类型是不可或缺的。因为空接口类型对实现它的类型没有要求，所以我们可以将任意一个值赋给空接口类型。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> any <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">any = <span class="literal">true</span></span><br><span class="line">any = <span class="number">12.34</span></span><br><span class="line">any = <span class="string">&quot;hello&quot;</span></span><br><span class="line">any = <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>&#123;<span class="string">&quot;one&quot;</span>: <span class="number">1</span>&#125;</span><br><span class="line">any = <span class="built_in">new</span>(bytes.Buffer)</span><br></pre></td></tr></table></figure><p>对于创建的一个interface{}值持有一个boolean，float，string，map，pointer，或者任意其它的类型；我们当然不能直接对它持有的值做操作，因为interface{}没有任何方法。后续我们会学习用类型断言来获取取interface{}中值的方法。</p><h3 id="接口类型实现的不同情况"><a class="markdownIt-Anchor" href="#接口类型实现的不同情况"></a> 接口类型实现的不同情况</h3><p>非空的接口类型比如io.Writer经常被指针类型实现，尤其当一个或多个接口方法像Write方法那样隐式的给接收者带来变化的时候。一个结构体的指针是非常常见的承载方法的类型，毕竟传递结构体的指针比传递结构体本身要有效率得多。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Counter <span class="keyword">struct</span> &#123;</span><br><span class="line">    count <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Counter)</span></span> Write(p []<span class="type">byte</span>) (n <span class="type">int</span>, err <span class="type">error</span>) &#123;</span><br><span class="line">    c.count += <span class="built_in">len</span>(p)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(p), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> w io.Writer = &amp;Counter&#123;&#125;</span><br></pre></td></tr></table></figure><p>尽管指针类型是常见的实现方式，但并不是唯一的，其他引用类型（如切片和映射）也可以实现接口。从本质上来说，引用类型实现接口和指针实现接口是一样的。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 切片实现</span></span><br><span class="line"><span class="keyword">type</span> Counter <span class="keyword">struct</span> &#123;</span><br><span class="line">    count <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Counter)</span></span> Write(p []<span class="type">byte</span>) (n <span class="type">int</span>, err <span class="type">error</span>) &#123;</span><br><span class="line">    c.count += <span class="built_in">len</span>(p)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(p), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> w io.Writer = &amp;Counter&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 映射实现</span></span><br><span class="line"><span class="keyword">type</span> Values <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Values)</span></span> Write(b []<span class="type">byte</span>) (n <span class="type">int</span>, err <span class="type">error</span>) &#123;</span><br><span class="line">    <span class="comment">// 自定义实现</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(b), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> w io.Writer = Values&#123;&#125;</span><br></pre></td></tr></table></figure><p>此外，基本类型（如<code>time.Duration</code>）也可以实现某些接口。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> MyDuration time.Duration</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d MyDuration)</span></span> String() <span class="type">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> time.Duration(d).String()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> s fmt.Stringer = MyDuration(<span class="number">10</span> * time.Second)</span><br></pre></td></tr></table></figure><h2 id="flagvalue接口"><a class="markdownIt-Anchor" href="#flagvalue接口"></a> flag.Value接口</h2><p>学习掌握了一些关于接口的知识，接下来我们来学习Go语言的flag标准库是如何借助接口来帮助命令行标记定义新的符号的。</p><p>首先我们来学习<code>flag.value</code>接口的用法，他有两个方法：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> flag</span><br><span class="line"><span class="comment">// Value is the interface to the value stored in a flag.</span></span><br><span class="line"><span class="keyword">type</span> Value <span class="keyword">interface</span> &#123;</span><br><span class="line">    Set(<span class="type">string</span>) <span class="type">error</span></span><br><span class="line">    String() <span class="type">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><code>Set(string) error</code>：将标志的值解析为相应的类型。传入参数就是我们从命令行输入的数据，所以接口规定传入参数必须是字符串类型。</li><li><code>String() string</code>：返回该标志的当前值，作为字符串表示。即将当前标志的值回显出来，由于回显到命令行给用户查看，所以返回值必须是字符串形式。</li></ol><p>稍微细心一点的读者可能就注意到了，<code>flag.value</code>接口定义的两个方法是相反的。<code>Set()</code>方法要求将传入的字符串进行处理内化为标志的值，而<code>String()</code>方法则要求返回标志的值，并将其重新回显为字符串。</p><p>下面是一个示例，展示如何自定义一个 <code>flag.Value</code> 类型来处理复杂类型（例如，一个以逗号为标志分隔的列表）：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;flag&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个类型，用于存储逗号分隔的字符串列表</span></span><br><span class="line"><span class="keyword">type</span> CSV []<span class="type">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现 flag.Value 接口中的 Set 方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *CSV)</span></span> Set(value <span class="type">string</span>) <span class="type">error</span> &#123;</span><br><span class="line">*c = strings.Split(value, <span class="string">&quot;,&quot;</span>) <span class="comment">// 将输入的字符串按逗号分割，并存入 CSV 类型</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现 flag.Value 接口中的 String 方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *CSV)</span></span> String() <span class="type">string</span> &#123;</span><br><span class="line"><span class="keyword">return</span> strings.Join(*c, <span class="string">&quot;,&quot;</span>) <span class="comment">// 将列表转为逗号分隔的字符串</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> csvFlag CSV</span><br><span class="line"><span class="comment">// 使用 flag.Var 函数，传入自定义类型的指针，并定义标志</span></span><br><span class="line">flag.Var(&amp;csvFlag, <span class="string">&quot;csv&quot;</span>, <span class="string">&quot;Comma-separated list&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析命令行标志</span></span><br><span class="line">flag.Parse()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出解析后的值</span></span><br><span class="line">fmt.Println(<span class="string">&quot;Parsed CSV flag:&quot;</span>, csvFlag)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个例子中：</p><ul><li><p>首先定义了一个类型 <code>CSV</code>，用来存储解析后的字符串列表。</p></li><li><p>通过实现 <code>Set</code> 和 <code>String</code> 方法，让 <code>CSV</code> 满足 <code>flag.Value</code> 接口的要求。</p></li><li><p>使用 <code>flag.Var</code> 函数将 <code>CSV</code> 类型与命令行标志 <code>-csv</code> 绑定，这样可以通过命令行输入类似 <code>-csv=a,b,c</code> 的参数，它会自动解析成一个字符串切片 <code>[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]</code>。</p><p><code>&quot;Comma-separated list&quot;</code>是这个标志的描述，告诉用户该标志接受一个用逗号分隔的字符串列表。当用户在命令行输入 <code>go run main.go -h</code> 时，程序会输出类似如下的信息：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage of ./main:</span><br><span class="line">  -csv Comma-separated list</span><br><span class="line">    Comma-separated list</span><br></pre></td></tr></table></figure></li><li><p><code>flag.Parse()</code>: 这行代码会解析命令行输入的标志。如果用户在命令行中使用了 <code>-csv</code>，这个函数会根据用户输入的值对标志进行解析和赋值。在对flag变量进行定义后，必须调用一次<code>flag.Parse()</code>来解析标志。</p></li></ul><p>执行程序时，如果输入如下命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go run main.go -csv=a,b,c</span><br></pre></td></tr></table></figure><p>将输出：</p><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">Parsed</span> <span class="selector-tag">CSV</span> <span class="selector-tag">flag</span>: <span class="selector-attr">[a b c]</span></span><br></pre></td></tr></table></figure><p>通过这种方式，我们可以自定义更复杂的命令行标志解析逻辑。</p><h2 id="接口值"><a class="markdownIt-Anchor" href="#接口值"></a> 接口值</h2><p>一个接口的值，接口值，由两个部分组成，一个具体的类型和那个类型的值。它们被称为接口的动态类型和动态值。</p><p>下面4个语句中，变量w得到了3个不同的值。（开始和最后的值是相同的）</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> w io.Writer</span><br><span class="line">w = os.Stdout</span><br><span class="line">w = <span class="built_in">new</span>(bytes.Buffer)</span><br><span class="line">w = <span class="literal">nil</span></span><br></pre></td></tr></table></figure><p>第一个语句<code>var w io.Writer</code>定义了变量w。</p><p>在Go语言中，变量总是被一个定义明确的值初始化，即使接口类型也不例外。对于一个接口的零值就是它的类型和值的部分都是nil。</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20241011171355457.png" alt="image-20241011171355457" /></p><p>一个接口值基于<span class="bubble-content">它的动态类型被描述为空或非空</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">即当且仅当动态类型为空才会被判定为空接口。若动态值为空而动态类型不为空，该接口仍不为空 </span></span>，所以这是一个空的接口值。你可以通过使用 w==nil或者w!=nil来判断接口值是否为空。调用一个空接口值上的任意方法都会产生<span class="bubble-content">panic</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">w.Write([]byte(hello")) // panic: nil pointer dereference" </span></span>。</p><p>第二个语句<code>w = os.Stdout</code>将一个 <code>*os.File</code> 类型的值赋给变量w。这个接口值的动态类型被设为 *os.File 指针的类型描述符，它的动态值持有os.Stdout的拷贝。</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20241011171553532.png" alt="image-20241011171553532" /></p><p>调用一个包含 <code>*os.File</code> 类型指针的接口值的<code>Write</code>方法，使得 <code>(*os.File).Write</code> 方法被调用。这个调用输出“hello”。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">w.Write([]<span class="type">byte</span>(<span class="string">&quot;hello&quot;</span>)) <span class="comment">// &quot;hello&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>通常在编译期，我们不知道接口值的动态类型是什么，所以一个接口上的调用必须使用动态分配。因为不是直接进行调用，所以编译器必须把代码生成在类型描述符的方法Write上，然后间接调用那个地址。这个调用的接收者是一个接口动态值的拷贝，os.Stdout。效果和下面这个直接调用一样：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">os.Stdout.Write([]<span class="type">byte</span>(<span class="string">&quot;hello&quot;</span>)) <span class="comment">// &quot;hello&quot;</span></span><br></pre></td></tr></table></figure></blockquote><p>第三个语句<code>w = new(bytes.Buffer)</code>给接口值赋了一个<code>*bytes.Buffer</code>类型的值。现在动态类型是*bytes.Buffer并且动态值是一个指向新分配的缓冲区的指针。</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20241011172349067.png" alt="image-20241011172349067" /></p><p>最后，第四个语句<code>w = nil</code>将nil赋给了接口值。这个重置将它所有的部分都设为nil值，把变量w恢复到和它之前定义时相同的状态。</p><p>接口值可以使用<code>==</code>和<code>!＝</code>来进行比较。两个接口值相等仅当它们都是nil值，或者它们的动态类型相同并且动态值也根据这个动态类型的<code>==</code>操作相等。因为接口值是可比较的，所以它们可以用在 map的键或者作为switch语句的操作数。</p><p>然而，如果两个接口值的动态类型相同，但是这个动态类型是不可比较的（比如切片），将它们 行比较就会失败并且panic。</p><p>考虑到这点，接口类型是非常与众不同的。其它类型要么是安全的可比较类型（如基本类型和指针）要么是完全不可比较的类型（如切片，映射类型，和函数），但是在比较接口值或者包含了接口值的聚合类型时，我们必须要意识到潜在的panic。同样的风险也存在于使用接口作为map的键或者switch的操作数。只能比较你非常确定它们的动态值是可比较类型的接口值。</p><span class='p red'>再次强调！！！</span><p><strong>一个不包含任何值的nil接口值和一个刚好包含nil指针的接口值是不同的</strong>。</p><p>思考下面的程序。当debug变量设置为true时，main函数会将f函数的输出收集到一个bytes.Buffer类型中。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> debug = <span class="literal">true</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> buf *bytes.Buffer</span><br><span class="line">    <span class="keyword">if</span> debug &#123;</span><br><span class="line">    buf = <span class="built_in">new</span>(bytes.Buffer) <span class="comment">// enable collection of output</span></span><br><span class="line">    &#125;</span><br><span class="line">    f(buf) <span class="comment">// <span class="doctag">NOTE:</span> subtly incorrect!</span></span><br><span class="line">    <span class="keyword">if</span> debug &#123;</span><br><span class="line">    <span class="comment">// ...use buf...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// If out is non-nil, output will be written to it.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">(out io.Writer)</span></span> &#123;</span><br><span class="line">    <span class="comment">// ...do something...</span></span><br><span class="line">    <span class="keyword">if</span> out != <span class="literal">nil</span> &#123;</span><br><span class="line">    out.Write([]<span class="type">byte</span>(<span class="string">&quot;done!\n&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可能会预计当把变量debug设置为false时可以禁止对输出的收集，但是实际上在out.Write方法调用时程序发生了panic：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> out != <span class="literal">nil</span> &#123;</span><br><span class="line">     out.Write([]<span class="type">byte</span>(<span class="string">&quot;done!\n&quot;</span>)) <span class="comment">// panic: nil pointer dereference</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当main函数调用函数f时，它给f函数的out参数赋了一个<code>*bytes.Buffer</code>的空指针，所以out的动态 值是nil。然而，它的动态类型是<code>*bytes.Buffer</code>，意思就是out变量是一个包含空指针值的<strong>非空接口</strong>。所以防御性检查<code>out!=nil</code>的结果依然是true。</p><h2 id="error接口"><a class="markdownIt-Anchor" href="#error接口"></a> error接口</h2><p>我们继续介绍error类型。很早开始我们就已经在使用error类型，其实他就是interface类型，这个类型有一个返回错误信息的单一方法：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="type">error</span> <span class="keyword">interface</span> &#123;</span><br><span class="line">    Error() <span class="type">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建一个error最简单的方法就是调用errors.New函数，它会根据传入的错误信息返回一个新的error。整个errors包仅只有4行：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> errors</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">New</span><span class="params">(text <span class="type">string</span>)</span></span> <span class="type">error</span> &#123; <span class="keyword">return</span> &amp;errorString&#123;text&#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> errorString <span class="keyword">struct</span> &#123; text <span class="type">string</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *errorString)</span></span> Error() <span class="type">string</span> &#123; <span class="keyword">return</span> e.text &#125;</span><br></pre></td></tr></table></figure><p>承载errorString的类型是一个结构体而非一个字符串，这是为了保护它表示的错误。我们也不想要重要的error例如 io.EOF和一个刚好有相同错误消息的error比较后相等。</p><p>调用errors.New函数是非常稀少的，因为有一个方便的封装函数fmt.Errorf，它还会处理字符串格式化。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> fmt</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;errors&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Errorf</span><span class="params">(format <span class="type">string</span>, args ...<span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">error</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> errors.New(Sprintf(format, args...))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类型断言"><a class="markdownIt-Anchor" href="#类型断言"></a> 类型断言</h2><p>类型断言是一个使用在接口值上的操作。语法是 <code>x.(T)</code>，其中 <code>x</code> 是接口类型，<code>T</code> 是要检查的目标类型。如果 <code>x</code> 的实际类型与 <code>T</code> 匹配，断言成功，返回 <code>x</code> 的值，类型为 <code>T</code>；如果不匹配，程序会抛出 <code>panic</code>。简而言之，类型断言用于确保接口的值可以安全地转换为某种具体类型。如果断言操作的对象是一个nil接口值，那么不论被断言的类型是什么这个类型断言都会失败。</p><p>第二个结果通常赋值给一个命名为ok的变量。如果这个操作失败了，那么ok就是false值，第一个结果等于被断言类型的零值。这个ok结果经常立即用于决定程序下面做什么。if语句的扩展格式让这个变的很简洁：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> f, ok := w.(*os.File); ok &#123;</span><br><span class="line">    <span class="comment">// ...use f...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="基于类型断言区别错误类型"><a class="markdownIt-Anchor" href="#基于类型断言区别错误类型"></a> 基于类型断言区别错误类型</h3><p>有了类型断言这个强力的工具，我们就可以轻松的判断错误类型。</p><p>对于给定的三个错误原因：文件已经存在（对于创建操作），找不到文件（对于读取操作），和权限拒绝。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> os</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsExist</span><span class="params">(err <span class="type">error</span>)</span></span> <span class="type">bool</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsNotExist</span><span class="params">(err <span class="type">error</span>)</span></span> <span class="type">bool</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsPermission</span><span class="params">(err <span class="type">error</span>)</span></span> <span class="type">bool</span></span><br></pre></td></tr></table></figure><p>对这些判断的一个缺乏经验的实现可能会去检查错误消息是否包含了特定的子字符串：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsNotExist</span><span class="params">(err <span class="type">error</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">NOTE:</span> not robust!</span></span><br><span class="line">    <span class="keyword">return</span> strings.Contains(err.Error(), <span class="string">&quot;file does not exist&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是处理I/O的逻辑在不同的平台上并不一定一样，所以这种方案缺乏健壮性。一个更可靠的方式是使用一个专门的类型来描述结构化的错误。实际上os标准库里也是这么实现的。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> os</span><br><span class="line"><span class="comment">// PathError records an error and the operation and file path that caused it.</span></span><br><span class="line"><span class="keyword">type</span> PathError <span class="keyword">struct</span> &#123;</span><br><span class="line">    Op <span class="type">string</span></span><br><span class="line">    Path <span class="type">string</span></span><br><span class="line">    Err <span class="type">error</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *PathError)</span></span> Error() <span class="type">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> e.Op + <span class="string">&quot; &quot;</span> + e.Path + <span class="string">&quot;: &quot;</span> + e.Err.Error()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面展示的IsNotExist，它会报出是否一个错误和 syscall.ENOENT或者和os.ErrNotExist相等，用于判断文件或目录是否不存在。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;errors&quot;</span></span><br><span class="line">    <span class="string">&quot;syscall&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">var</span> ErrNotExist = errors.New(<span class="string">&quot;file does not exist&quot;</span>)</span><br><span class="line"><span class="comment">// IsNotExist returns a boolean indicating whether the error is known to</span></span><br><span class="line"><span class="comment">// report that a file or directory does not exist. It is satisfied by</span></span><br><span class="line"><span class="comment">// ErrNotExist as well as some syscall errors.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsNotExist</span><span class="params">(err <span class="type">error</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> pe, ok := err.(*PathError); ok &#123;</span><br><span class="line">    err = pe.Err <span class="comment">//提取内部的真实错误原因</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> err == syscall.ENOENT || err == ErrNotExist</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实际调用如下：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">_, err := os.Open(<span class="string">&quot;/no/such/file&quot;</span>)</span><br><span class="line">fmt.Println(os.IsNotExist(err)) <span class="comment">// &quot;true&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>Q：为什么不直接比较 err 是否等于 syscall.ENOENT 或 ErrNotExist？</p><p>A：在 Go 中，错误经常被“包装”起来。例如，<code>PathError</code> 就是一种错误包装，它不仅包含了底层的系统错误，还附带了文件路径和操作类型的信息。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">&amp;os.PathError&#123;</span><br><span class="line">    Op:   <span class="string">&quot;open&quot;</span>,</span><br><span class="line">    Path: <span class="string">&quot;/invalid/path&quot;</span>,</span><br><span class="line">    Err:  syscall.ENOENT,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这种情况下，err 是 *PathError，而不是 syscall.ENOENT。直接比较 err == syscall.ENOENT 是不会成功的，因为 err 包装了更多的上下文信息，而不是简单的 syscall.ENOENT。<br />通过类型断言，IsNotExist 函数可以提取 PathError 内部的真正错误 (pe.Err)，然后再比较底层的错误。这就是为什么需要先检查 err 是否是 *PathError 类型，并提取内部的 Err 进行判断的原因。</p></blockquote><h3 id="基于类型断言询问行为"><a class="markdownIt-Anchor" href="#基于类型断言询问行为"></a> 基于类型断言询问行为</h3><p>有了类型断言，我们可以判断传入的变量是否满足特定类型的要求，从而实施不同的操作。</p><p>假设一个情形：我们需要向web服务器写入HTTP头字段。io.Writer接口类型的变量w代表HTTP响应；写入它的字节最终被发送到某个人的web浏览器上。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">writeHeader</span><span class="params">(w io.Writer, contentType <span class="type">string</span>)</span></span> <span class="type">error</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> _, err := w.Write([]<span class="type">byte</span>(<span class="string">&quot;Content-Type: &quot;</span>)); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> _, err := w.Write([]<span class="type">byte</span>(contentType)); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为Write方法需要传入一个byte切片而我们希望写入的值是一个字符串，所以我们需要使用<code>[]byte(...)</code>进行转换。这个转换会消耗额外的性能，并且会使得服务器的速度变慢。能否优化掉这个类型转换呢？</p><p>如果我们回顾net/http包中的内幕，我们知道在这个程序中的w变量持有的动态类型也有一个允许字符串高效写入的<code>WriteString</code>方法；这个方法会避免去分配一个临时的拷贝。所以我们可以直接调用<code>WriteString</code>方法来优化掉原先的方法。</p><p>但是这里存在一个问题，我们不能对任意io.Writer类型的变量w，假设它也拥有<code>WriteString</code>方法。但是我们可以定义一个只有这个方法的新接口并且使用类型断言来检测是否w的动态类型满足这个新接口。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// writeString writes s to w.</span></span><br><span class="line"><span class="comment">// If w has a WriteString method, it is invoked instead of w.Write.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">writeString</span><span class="params">(w io.Writer, s <span class="type">string</span>)</span></span> (n <span class="type">int</span>, err <span class="type">error</span>) &#123;</span><br><span class="line">    <span class="keyword">type</span> stringWriter <span class="keyword">interface</span> &#123;</span><br><span class="line">    WriteString(<span class="type">string</span>) (n <span class="type">int</span>, err <span class="type">error</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> sw, ok := w.(stringWriter); ok &#123;</span><br><span class="line">    <span class="keyword">return</span> sw.WriteString(s) <span class="comment">// avoid a copy</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> w.Write([]<span class="type">byte</span>(s)) <span class="comment">// allocate temporary copy</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">writeHeader</span><span class="params">(w io.Writer, contentType <span class="type">string</span>)</span></span> <span class="type">error</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> _, err := writeString(w, <span class="string">&quot;Content-Type: &quot;</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> _, err := writeString(w, contentType); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的writeString函数使用一个类型断言来获知一个普遍接口类型的值是否满足一个更加具体的接口类型；并且如果满足，它会使用这个更具体接口的行为。这个技术可以被很好的使用，不论这个被询问的接口是一个标准如io.ReadWriter，或者用户定义的如stringWriter接口。</p><h3 id="类型分支"><a class="markdownIt-Anchor" href="#类型分支"></a> 类型分支</h3><p>基于断言区别error类型也好，质询行为也罢，本质上都是通过类型断言的结果来执行不同的操作。在类型分支这一小节，本质是不变的，我们来看看如果类型断言的分支较多时如何处理。假设我们使用Go语言查询一个SQL数据库，Go调用的API会干净地将查询中固定的部分和变化的部分分开。一个调用的例子可能看起来像这样：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;database/sql&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">listTracks</span><span class="params">(db sql.DB, artist <span class="type">string</span>, minYear, maxYear <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">    result, err := db.Exec(</span><br><span class="line">    <span class="string">&quot;SELECT * FROM tracks WHERE artist = ? AND ? &lt;= year AND year &lt;= ?&quot;</span>,</span><br><span class="line">    artist, minYear, maxYear)</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Exec方法使用SQL字面量替换在查询字符串中的每个’?'；SQL字面量表示相应参数的值，它有可能是一个布尔值，一个数字，一个字符串，或者nil空值。用这种方式构造查询可以帮助避免SQL注入攻击。在Exec函数内部可能会找到像下面这样的一个函数，它会将每一个参数值转换成它的SQL字面量符号：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sqlQuote</span><span class="params">(x <span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> x == <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;NULL&quot;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> _, ok := x.(<span class="type">int</span>); ok &#123;</span><br><span class="line">    <span class="keyword">return</span> fmt.Sprintf(<span class="string">&quot;%d&quot;</span>, x)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> _, ok := x.(<span class="type">uint</span>); ok &#123;</span><br><span class="line">    <span class="keyword">return</span> fmt.Sprintf(<span class="string">&quot;%d&quot;</span>, x)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> b, ok := x.(<span class="type">bool</span>); ok &#123;</span><br><span class="line">        <span class="keyword">if</span> b &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;TRUE&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;FALSE&quot;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> s, ok := x.(<span class="type">string</span>); ok &#123;</span><br><span class="line">    <span class="keyword">return</span> sqlQuoteString(s) <span class="comment">// (not shown)</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">panic</span>(fmt.Sprintf(<span class="string">&quot;unexpected type %T: %v&quot;</span>, x, x))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>switch语句可以简化if-else链，如果这个if-else链对一连串值做相等测试。一个相似的type switch（类型分支）可以简化类型断言的if-else链。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> x.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="literal">nil</span>: <span class="comment">// ...</span></span><br><span class="line"><span class="keyword">case</span> <span class="type">int</span>, <span class="type">uint</span>: <span class="comment">// ...</span></span><br><span class="line"><span class="keyword">case</span> <span class="type">bool</span>: <span class="comment">// ...</span></span><br><span class="line"><span class="keyword">case</span> <span class="type">string</span>: <span class="comment">// ...</span></span><br><span class="line"><span class="keyword">default</span>: <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个类型分支像普通的switch语句一样，它的运算对象是x.(type)——它使用了关键词字面量type——并且每个case有一到多个类型。一个类型分支基于这个接口值的动态类型使一个多路分支有效。和普通switch语句一样，每一个case会被顺序的进行考虑，并且当一个匹配找到时，这个case中的内容会被执行。当一个或多个case类型是接口时，case的顺序就会变得很重要，因为可能会有两个case同时匹配的情况。</p><p>使用类型分支的扩展形式来重写sqlQuote函数会让这个函数更加的清晰：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sqlQuote</span><span class="params">(x <span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> x := x.(<span class="keyword">type</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="literal">nil</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;NULL&quot;</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">int</span>, <span class="type">uint</span>:</span><br><span class="line">    <span class="keyword">return</span> fmt.Sprintf(<span class="string">&quot;%d&quot;</span>, x) <span class="comment">// x has type interface&#123;&#125; here.</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">bool</span>:</span><br><span class="line">        <span class="keyword">if</span> x &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;TRUE&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;FALSE&quot;</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">string</span>:</span><br><span class="line">    <span class="keyword">return</span> sqlQuoteString(x) <span class="comment">// (not shown)</span></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">    <span class="built_in">panic</span>(fmt.Sprintf(<span class="string">&quot;unexpected type %T: %v&quot;</span>, x, x))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>尽管sqlQuote接受一个任意类型的参数，但是这个函数只会在它的参数匹配类型分支中的一个case时运行到结束；其它情况的它会panic出“unexpected type”消息。虽然x的类型是interface{}，但是我们把它认为是一个int，uint，bool，string，和nil值的discriminated union（可识别联合）</p><h2 id="最后"><a class="markdownIt-Anchor" href="#最后"></a> 最后</h2><p>一般来说，接口被以两种不同的方式使用。</p><p>第一种方式是<span class='p red'>以方法为核心的接口</span>。典型例子是<code>io.Reader</code>、<code>io.Writer</code>、<code>fmt.Stringer</code>、<code>sort.Interface</code>、<code>http.Handler</code> 和 <code>error</code>。在这种方式下，<strong>接口的方法</strong>定义了多个实现该接口的具体类型之间的相似性。<strong>重点</strong>在于接口所定义的方法，而不是具体的实现类型。实现该接口的类型只要实现了接口规定的方法即可，具体的类型细节是隐藏的。例如，<code>io.Writer</code> 接口定义了一个写入功能，不管它是写入文件、网络、内存还是其他地方，只要它实现了 <code>Write</code> 方法，它就可以被当作 <code>io.Writer</code> 使用。</p><p>第二种方式是<span class='p red'>以类型为核心的接口</span>。在这种方式下，接口的作用类似于一个可以持有不同具体类型的“容器”。<strong>重点</strong>在于具体的类型，而不是接口的方法本身。接口值可以持有各种不同的具体类型，程序员可以使用<strong>类型断言</strong>或类型判断，来区别接口持有的不同类型，并对每个类型执行不同的操作。不像第一种方式，类型的细节并没有被隐藏，接口只是起到了一种“包裹”不同类型的作用。这种方式类似于“联合类型”或“可辨识联合”，编译器或程序可以根据实际类型的不同做出不同的处理。</p><p>在设计新包时，Go的新手程序员往往会先定义一套接口，然后再去实现一些具体类型来满足这些接口。这种做法的结果是产生了许多接口，而每个接口可能只有一个实现。这其实是多余的抽象，同时也带来了运行时的性能开销。你可以通过导出的机制来控制类型的方法或结构体字段是否在包外可见。接口只有在需要让两个或更多具体类型以相同方式处理时才有必要引入。</p><p>当然，也有一个例外。如果一个具体类型由于依赖关系无法与接口在同一个包中实现，这时引入接口有助于解耦两个包，避免相互依赖。</p><p>在Go中，接口设计的一个核心原则就是简化：接口应该足够小，仅包含所需的方法。更小的接口意味着更少的方法，像 <code>io.Writer</code> 或 <code>fmt.Stringer</code> 这样的接口通常只包含一个方法。这样的设计不仅使得接口更容易被新的类型实现，也符合“只要你需要的东西”这一设计哲学。</p><p>至此，我们对Go的方法和接口进行了总结。虽然Go对面向对象编程提供了良好的支持，但这并不意味着你必须一切都用面向对象风格来解决。并非所有事物都需要当作对象来处理。独立的函数、未封装的数据结构在许多场景中同样有用。你可以回顾一下前几章的例子，像 <code>input.Scan</code> 这样的方法使用的次数不到二十次，而像 <code>fmt.Printf</code> 这样的函数被频繁调用，展示了函数和非对象化设计在Go中的仍然占有一席之地。</p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/2FAA1B2C149C8C4BFF45431A929E653C.jpg" alt="2FAA1B2C149C8C4BFF45431A929E653C" /></p>]]></content>
    
    
    <summary type="html">介绍了Go语言中接口的用法，详细的列举了接口的概念到运用实现。</summary>
    
    
    
    <category term="Go!Go!Go!" scheme="http://example.com/categories/Go-Go-Go/"/>
    
    
    <category term="Go" scheme="http://example.com/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>OS Lab</title>
    <link href="http://example.com/posts/30b9345756ad/"/>
    <id>http://example.com/posts/30b9345756ad/</id>
    <published>2024-10-10T11:11:27.000Z</published>
    <updated>2024-10-10T11:11:27.000Z</updated>
    
    <content type="html"><![CDATA[<span class='p center logo large'>OS Lab</span><span class='p center small'>Archive of operating system experiments</span><p>此博客用于归纳操作系统实验中的代码，充当说明文档。着重于讲解代码调试过程与原理，附带一些参考资料。</p><p>你可以在这里找到我的所有实验代码 ----&gt; <a href="https://github.com/Adam8en/OS-experiment-archive">Adam8en/OS-experiment-archive: Code of my operating system experiment course. (github.com)</a></p><p>需要注意的是，本代码是基于WSL平台开发测试的，如果你是在Windows操作系统上编写代码，将无法复现本博客的实验并将代码编译成可执行文件。</p><p>最后，祝阅读愉快。</p><h2 id="lab01"><a class="markdownIt-Anchor" href="#lab01"></a> Lab01</h2><p>进程和线程是现代操作系统中最重要的概念，通过多线程程序设计，操作系统能够充分利用计算机系统中的各种硬件资源，极大的提高系统效率。本实验主要考查对多线程概念的理论，以及利用C/C++语言编程实现多线程程序，学会创建进程，掌握信号量的使用，以实现多线程的同步。</p><h3 id="q1"><a class="markdownIt-Anchor" href="#q1"></a> Q1</h3><blockquote><p>编写程序，在程序中根据用户输入的可执行程序名称，创建一个进程来运行该可执行程序。</p></blockquote><p>在linux系统中，可以通过<span class="bubble-content">fork()</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">fork函数将运行着的程序分成2个（几乎）完全一样的进程，每个进程都启动一个从代码的同一位置开始执行的线程。这两个进程中的线程继续执行，就像是两个用户同时启动了该应用程序的两个副本。 </span></span>函数创建一个新的进程，并且返回子进程的pid。我们可以先获取要执行的程序名，然后在子进程中用<span class="bubble-content">execlp()</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">一旦执行完execlp函数，立刻会去执行新的程序。新的程序会替换当前程序、代码段、数据段、堆、栈。经常与多进程组合使用，用一个子进程单独执行execlp程序 </span></span>函数执行程序，父进程只需等待子进程结束即可。</p><p>可以通过pid来辨别父进程和子进程。由于子进程pid为0，所以可以很方便的构造出一个if-else语句根据当前运行进程的pid来判断该执行子进程操作还是父进程操作。</p><p>以下是第一问的源代码：</p><details class="folding-tag" cyan><summary> 查看完整代码 </summary>              <div class='content'>              <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> path[<span class="number">256</span>];</span><br><span class="line"><span class="type">char</span> programeName[<span class="number">256</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    getcwd(path,<span class="keyword">sizeof</span>(path));</span><br><span class="line">    <span class="built_in">strcat</span>(path, <span class="string">&quot;/&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter the name of executable file\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,programeName);</span><br><span class="line">    <span class="built_in">strcat</span>(path,programeName);</span><br><span class="line">    <span class="comment">//获取程序名并且和路径拼接</span></span><br><span class="line"></span><br><span class="line">    <span class="type">pid_t</span> pid = fork();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pid&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">//fork failed</span></span><br><span class="line">        perror(<span class="string">&quot;fork failed&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(pid==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">//子进程执行操作</span></span><br><span class="line">        execlp(path,programeName,(<span class="type">char</span>*)<span class="literal">NULL</span>);</span><br><span class="line">        <span class="comment">// execlp函数执行成功后将不会返回，若返回说明执行失败，所以需要exit(1)</span></span><br><span class="line">        perror(<span class="string">&quot;execlp failed&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//父进程执行操作</span></span><br><span class="line">        wait(<span class="literal">NULL</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;over.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>              </div>            </details><p>话说回来，这道题最开始做的时候我还看错了，以为是要用<strong>线程</strong>而非<strong>进程</strong>实现这个操作，所以还搓了一个线程版本。</p><p>用线程实现的话，就不宜继续用<code>execlp()</code>函数了。使用线程的方式调用 <code>execlp()</code>，这通常不太常见，因为线程替换映像可能会导致复杂性。一般来说，调用外部程序通常是在独立的进程中进行。所以可以通过<strong>线程执行一个外部程序</strong>的方式来模拟<code>fork()</code> 的效果，即使用 <code>system()</code> 调用外部程序，而不是用 <code>execlp()</code>，这样不会替换进程映像。</p><p>之后，主线程使用 <code>pthread_join()</code> 来等待子线程执行完毕。</p><p>源代码如下：</p><details class="folding-tag" cyan><summary> 查看完整代码 </summary>              <div class='content'>              <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> path[<span class="number">256</span>];</span><br><span class="line"><span class="type">char</span> programeName[<span class="number">256</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span>* <span class="title function_">myFunc</span><span class="params">(<span class="type">void</span>*)</span>&#123;</span><br><span class="line">    <span class="comment">// 使用 system() 来执行外部程序，保持主线程的控制权</span></span><br><span class="line">    <span class="type">int</span> ret = system(path);</span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="number">-1</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;system() failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">pthread_t</span> myThread;</span><br><span class="line"></span><br><span class="line">    getcwd(path,<span class="keyword">sizeof</span>(path));</span><br><span class="line">    <span class="built_in">strcat</span>(path, <span class="string">&quot;/&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter the name of executable file\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,programeName);</span><br><span class="line">    <span class="built_in">strcat</span>(path,programeName);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (pthread_create(&amp;myThread, <span class="literal">NULL</span>, myFunc, <span class="literal">NULL</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;Failed to create thread&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    pthread_join(myThread,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>              </div>            </details><p>运行结果如下图所示：</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20241010230224284.png" alt="image-20241010230224284" /></p><h3 id="q2"><a class="markdownIt-Anchor" href="#q2"></a> Q2</h3><blockquote><p>假设有四个线程，第一个线程输出字符串 “This”，第二个线程输出字符串 “is”, 第三个线程输出字符串“Jinan”, 第四个线程输出字符串 “University！”。编制C/C++程序，在主程序main函数中创建四个线程并依次启动，设计信号量(Semaphore)同步机制，当主程序运行时，屏幕输出的结果是字符串“This is Jinan University!”</p></blockquote><p>要实现这个功能，可以使用四个信号量，分别控制每个线程的执行顺序。每个线程在输出其字符串之前需要等待对应的信号量信号，然后输出字符串并释放下一个线程的信号量。在创建线程后，我们可以在主函数中先启动第一个线程，然后依次通过信号量控制后续线程的执行。</p><p>源代码如下：</p><details class="folding-tag" cyan><summary> 查看完整代码 </summary>              <div class='content'>              <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;semaphore.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">sem_t</span> sem_arr[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span>* <span class="title function_">Func_1</span><span class="params">(<span class="type">void</span>*)</span>&#123;</span><br><span class="line">    sem_wait(&amp;sem_arr[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;This &quot;</span>);</span><br><span class="line">    sem_post(&amp;sem_arr[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span>* <span class="title function_">Func_2</span><span class="params">(<span class="type">void</span>*)</span>&#123;</span><br><span class="line">    sem_wait(&amp;sem_arr[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;is &quot;</span>);</span><br><span class="line">    sem_post(&amp;sem_arr[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span>* <span class="title function_">Func_3</span><span class="params">(<span class="type">void</span>*)</span>&#123;</span><br><span class="line">    sem_wait(&amp;sem_arr[<span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Jinan &quot;</span>);</span><br><span class="line">    sem_post(&amp;sem_arr[<span class="number">3</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span>* <span class="title function_">Func_4</span><span class="params">(<span class="type">void</span>*)</span>&#123;</span><br><span class="line">    sem_wait(&amp;sem_arr[<span class="number">3</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;University!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">pthread_t</span> threads[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">    sem_init(&amp;sem_arr[<span class="number">0</span>],<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">    sem_init(&amp;sem_arr[<span class="number">1</span>],<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    sem_init(&amp;sem_arr[<span class="number">2</span>],<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    sem_init(&amp;sem_arr[<span class="number">3</span>],<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    pthread_create(&amp;threads[<span class="number">0</span>],<span class="literal">NULL</span>,Func_1,<span class="literal">NULL</span>);</span><br><span class="line">    pthread_create(&amp;threads[<span class="number">1</span>],<span class="literal">NULL</span>,Func_2,<span class="literal">NULL</span>);</span><br><span class="line">    pthread_create(&amp;threads[<span class="number">2</span>],<span class="literal">NULL</span>,Func_3,<span class="literal">NULL</span>);</span><br><span class="line">    pthread_create(&amp;threads[<span class="number">3</span>],<span class="literal">NULL</span>,Func_4,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        pthread_join(threads[i],<span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        sem_destroy(&amp;sem_arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>              </div>            </details><p>运行结果如下图所示：</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20241010230244574.png" alt="image-20241010230244574" /></p><h3 id="q3"><a class="markdownIt-Anchor" href="#q3"></a> Q3</h3><blockquote><p>本题基于实验题目2。在主函数中依次启动四个线程，修改主程序，使得给定用户任意输入的整数n，程序输出n个同样的字符串“This is Jinan University!”</p></blockquote><p>一个很简单的基于（2）的变体。在（2）的基础上，只需要提前获取输入的n并且创建一个循环即可。需要注意的是，每次循环都要重新初始化信号量，保证线程之间的有序执行。</p><p>源代码如下：</p><details class="folding-tag" cyan><summary> 查看完整代码 </summary>              <div class='content'>              <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;semaphore.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">sem_t</span> sem_arr[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span>* <span class="title function_">Func_1</span><span class="params">(<span class="type">void</span>*)</span>&#123;</span><br><span class="line">    sem_wait(&amp;sem_arr[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;This &quot;</span>);</span><br><span class="line">    sem_post(&amp;sem_arr[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span>* <span class="title function_">Func_2</span><span class="params">(<span class="type">void</span>*)</span>&#123;</span><br><span class="line">    sem_wait(&amp;sem_arr[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;is &quot;</span>);</span><br><span class="line">    sem_post(&amp;sem_arr[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span>* <span class="title function_">Func_3</span><span class="params">(<span class="type">void</span>*)</span>&#123;</span><br><span class="line">    sem_wait(&amp;sem_arr[<span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Jinan &quot;</span>);</span><br><span class="line">    sem_post(&amp;sem_arr[<span class="number">3</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span>* <span class="title function_">Func_4</span><span class="params">(<span class="type">void</span>*)</span>&#123;</span><br><span class="line">    sem_wait(&amp;sem_arr[<span class="number">3</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;University!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">pthread_t</span> threads[<span class="number">4</span>];</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line">    sem_init(&amp;sem_arr[<span class="number">0</span>],<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">    sem_init(&amp;sem_arr[<span class="number">1</span>],<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    sem_init(&amp;sem_arr[<span class="number">2</span>],<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    sem_init(&amp;sem_arr[<span class="number">3</span>],<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter a number to loop execute threads\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">        pthread_create(&amp;threads[<span class="number">0</span>],<span class="literal">NULL</span>,Func_1,<span class="literal">NULL</span>);</span><br><span class="line">        pthread_create(&amp;threads[<span class="number">1</span>],<span class="literal">NULL</span>,Func_2,<span class="literal">NULL</span>);</span><br><span class="line">        pthread_create(&amp;threads[<span class="number">2</span>],<span class="literal">NULL</span>,Func_3,<span class="literal">NULL</span>);</span><br><span class="line">        pthread_create(&amp;threads[<span class="number">3</span>],<span class="literal">NULL</span>,Func_4,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            pthread_join(threads[i],<span class="literal">NULL</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sem_init(&amp;sem_arr[<span class="number">0</span>],<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">        sem_init(&amp;sem_arr[<span class="number">1</span>],<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        sem_init(&amp;sem_arr[<span class="number">2</span>],<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        sem_init(&amp;sem_arr[<span class="number">3</span>],<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        sem_destroy(&amp;sem_arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>              </div>            </details><p>运行结果如下图所示：</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20241010230257569.png" alt="image-20241010230257569" /></p><h2 id="lab02"><a class="markdownIt-Anchor" href="#lab02"></a> Lab02</h2><p>多线程是现代操作系统的核心概念，是能够保障操作系统正常运转的基础。Windows、Linux等操作系统向用户提供了多线程、信号量等函数接口，使用户可以通过C/C++、JAVA等主流编程语言来访问调用，以实现用户级线程的创建、运行、管理等功能。本次实验的目标如下：</p><ol><li>掌握Windows、Linux系统中多线程、信号量等的相关C函数使用；初步掌握多线程编程。</li><li>理解多线程的运行和调度原理；学会设计临界区/信号量来实现多个线程之间的互斥。</li></ol><h3 id="q1-2"><a class="markdownIt-Anchor" href="#q1-2"></a> Q1</h3><blockquote><p>Mary和Sally是亲姐妹，她们有一个共同的银行账户，她们可以分别到ATM机取款；爸爸，妈妈，奶奶，爷爷，舅舅也可以分别到ATM机给银行账户存钱。设账户的初始余额为10元。爸爸，妈妈，奶奶，爷爷，舅舅每次分别存入10，20，30，40，50元，每个人分别存款2次。Mary和Sally每次分别取50和100元，每个人分别取款2次。存款和取款的顺序是随机的。假设Mary和Sally的银行账户是可借记的，即当余额少于取款额时，仍旧能够取款成功。利用临界区(Windows系统)或者mutex信号量(Linux系统)编制程序来模拟上述存取款过程，在主程序结束时将账户的最后余额输出，并人工验证一下是否正确。</p><p>实验要求：只能建立一个存款函数Deposit()和一个取款函数Withdraw()；每个家长在每次存款时都要创建1个存款线程，以Deposit()作为线程函数，将家长的称呼和存款金额传递给存款线程，以完成存款操作。同样的，Mary和Sally每人每次在取款时都要创建1个取款线程，以Withdraw()作为线程函数，将取款人的称呼和取款金额传递给取款线程，以完成取款操作。假设Mary和Sally的银行账户是可借记的，即当余额少于取款额时，仍旧能够取款成功。</p><p>实验提示：用srand()来设定随机数种子；用rand()函数来产生每次存款/取款的家长/取款人。定义一个结构体数组，用来保存每个存款/取款人的称呼和存款/取款金额，然后在创建线程时将相应的结构体作为参数传递给线程。</p><p>银行账户是公共变量，对它的操作需要用临界区来进行保护。</p></blockquote><p>本题的重点在于临界区保护，也就是说要用到临界区/互斥锁。可以大致把本体分为三个部分实现：</p><ol><li>实现线程函数Deposit和Withdraw</li><li>随机生成操作人员对银行账户进行操作</li><li>向对应的线程函数传递操作人员的信息</li></ol><h4 id="实现线程函数"><a class="markdownIt-Anchor" href="#实现线程函数"></a> 实现线程函数</h4><p>两个函数的实现逻辑不难。注意银行帐户是共享变量，在多线程并发操作时必须要加锁来避免条件竞争。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span>* <span class="title function_">Deposit</span><span class="params">(<span class="type">void</span>* arg)</span> &#123;</span><br><span class="line">    <span class="comment">// 存款线程，传入参数为操作人员，在对银行账户进行操作时加锁</span></span><br><span class="line">    Member* operator = (Member*)arg;</span><br><span class="line"></span><br><span class="line">    pthread_mutex_lock(&amp;Lock);</span><br><span class="line">    bank_account += operator-&gt;op_amount;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s deposited %d, now the bank account has %d\n&quot;</span>,</span><br><span class="line">           operator-&gt;name, operator-&gt;op_amount, bank_account);</span><br><span class="line">    pthread_mutex_unlock(&amp;Lock);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放操作人员指向的姓名和本身的内存空间</span></span><br><span class="line">    <span class="built_in">free</span>(operator-&gt;name);</span><br><span class="line">    <span class="built_in">free</span>(operator);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="随机生成操作人员"><a class="markdownIt-Anchor" href="#随机生成操作人员"></a> 随机生成操作人员</h4><p>用<code>rand()</code>函数生成随机数，同时限定每一个随机数的出现次数，因为每个家庭成员只有两次操作机会。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (operate_num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 保证启动操作数量个线程</span></span><br><span class="line">        <span class="comment">// 取随机数生成随机的操作人员，如果该人员的操作次数已经用尽，就跳过该人员</span></span><br><span class="line">        <span class="type">int</span> rand_guy = rand() % num;</span><br><span class="line">        <span class="keyword">if</span> (members[rand_guy].op_times == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        members[rand_guy].op_times--;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里我们给操作人员一个<code>op_times</code>属性，代表该家庭成员剩余的操作次数，当操作次数为0时代表该家庭成员已经没有操作机会。所以在对操作人员进一步操作时需要先检查该成员是否还有操作机会，如果没有机会就跳过后续操作随机生成下一个操作人员。</p><p>操作人员的身份（rand_guy）确定后，需要对预备传递给线程的操作人员信息进行填充，于是编写一个<code>load_operator()</code>函数进行处理。这里主要是填充操作人员的姓名、存取款状态、操作钱款。</p><p>注意为operator填充姓名时并没有直接指向家庭成员的姓名，而是用<span class="bubble-content">strdup函数</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">strdup( ) 函数是c语言中常用的一种字符串拷贝库函数，一般和 free( ) 函数成对出现。</span></span>拷贝了一份家庭成员姓名字符串。后续需要用<code>free()</code>释放掉姓名空间。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">load_operator</span><span class="params">(Member* rand_operator, <span class="type">int</span> rand_guy)</span> &#123; </span><br><span class="line">    <span class="comment">//处理向线程发送的数据，即填充操作人员的姓名、存取款状态、操作钱款</span></span><br><span class="line">    rand_operator-&gt;name = strdup(members[rand_guy].name); <span class="comment">// 填充操作人员的姓名</span></span><br><span class="line">    <span class="keyword">if</span> (rand_operator-&gt;name == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;strdup failed&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (rand_guy &lt;= <span class="number">4</span>) &#123; <span class="comment">// 根据随机到的人员编号判断该成员是存款还是取款</span></span><br><span class="line">        rand_operator-&gt;is_withdraw = <span class="number">0</span>;</span><br><span class="line">        rand_operator-&gt;op_amount = deposit_num[rand_guy]; <span class="comment">// 操作钱款对应操作人员的编号</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        rand_operator-&gt;is_withdraw = <span class="number">1</span>;</span><br><span class="line">        rand_operator-&gt;op_amount = withdraw_num[rand_guy - <span class="number">5</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="向线程函数传递操作人员信息"><a class="markdownIt-Anchor" href="#向线程函数传递操作人员信息"></a> 向线程函数传递操作人员信息</h4><p>首先要判断操作成员是取款还是存款，接着传递操作人员的信息给对应的线程函数。注意线程函数只能接受指针作为传入参数，在线程开始时会去读取指针指向地址的数据。所以需要为传递的操作人员动态分配一片内存空间。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Member* operator = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Member));</span><br><span class="line">        <span class="keyword">if</span> (operator == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            perror(<span class="string">&quot;malloc failed for operator&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        load_operator(operator, rand_guy); <span class="comment">// 装载操作人员的信息</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (operator-&gt;is_withdraw) &#123; <span class="comment">// 根据操作人员的信息决定调用存款还是取款线程</span></span><br><span class="line">            pthread_create(&amp;threads[thread_index++], <span class="literal">NULL</span>, Withdraw, operator);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            pthread_create(&amp;threads[thread_index++], <span class="literal">NULL</span>, Deposit, operator);</span><br><span class="line">        &#125;</span><br><span class="line">        operate_num--;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里说一下线程函数的传递参数机制。线程函数的定义是：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> * <span class="title function_">myFunc</span><span class="params">(<span class="type">void</span> *)</span></span><br><span class="line">&#123;</span><br><span class="line">   my code here to <span class="keyword">do</span> something…</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到线程函数的接收值和返回值都是<code>void*</code>类型，即空指针类型。pthread调用的函数要求入参是一个<code>void*</code>的指针，必须将数据强转成这个指针用来传递参数。在函数内部，必须要再手动转换回原来的参数类型来使用这个参数。这种做法叫做<span class='p yellow'>类型擦除</span>，跟go的interface{}有着异曲同工之妙，C的泛型编程基本上都是用的<code>void*</code>这样的方法来传递参数。</p><p>所以我们在线程函数调用时传递了operator的操作人员信息后，在线程函数内部要手动将指针转换回它的数据类型：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span>* <span class="title function_">Deposit</span><span class="params">(<span class="type">void</span>* arg)</span> &#123;</span><br><span class="line">    <span class="comment">// 存款线程，传入参数为操作人员，在对银行账户进行操作时加锁</span></span><br><span class="line">    Member* operator = (Member*)arg;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至于为什么要为operator动态分配内存而不使用临时变量，是因为对临时变量的值的更新只是在同一片内存空间的位置上进行迭代。这样调用线程函数时传递的指针指向的都是同一片空间，多线程读取操作人员信息时就会出现<span class='p red'>条件竞争</span>。所以必须使用动态内存分配来存储操作人员信息，并在线程内对操作人员的内存空间进行释放。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span>* <span class="title function_">Deposit</span><span class="params">(<span class="type">void</span>* arg)</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放操作人员指向的姓名和本身的内存空间</span></span><br><span class="line">    <span class="built_in">free</span>(operator-&gt;name);</span><br><span class="line">    <span class="built_in">free</span>(operator);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整的代码如下：</p><details class="folding-tag" cyan><summary> 查看完整代码 </summary>              <div class='content'>              <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span>* name; <span class="comment">// 家庭成员姓名</span></span><br><span class="line">    <span class="type">int</span> op_amount; <span class="comment">// 操作人员操作的钱款</span></span><br><span class="line">    <span class="type">int</span> op_times; <span class="comment">// 剩余的操作次数，每人默认2次</span></span><br><span class="line">    <span class="type">int</span> is_withdraw; <span class="comment">// 1代表为退款操作，0是储蓄操作</span></span><br><span class="line">&#125; Member;</span><br><span class="line"></span><br><span class="line">Member members[] = &#123;</span><br><span class="line">    &#123;<span class="string">&quot;Dad&quot;</span>, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;Mom&quot;</span>, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;Grandma&quot;</span>, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;Grandpa&quot;</span>, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;Uncle&quot;</span>, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;Mary&quot;</span>, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;Sally&quot;</span>, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> deposit_num[] = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>&#125;;</span><br><span class="line"><span class="type">int</span> withdraw_num[] = &#123;<span class="number">50</span>, <span class="number">100</span>&#125;;</span><br><span class="line"><span class="type">int</span> bank_account = <span class="number">10</span>;</span><br><span class="line"><span class="type">pthread_mutex_t</span> Lock;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span>* <span class="title function_">Deposit</span><span class="params">(<span class="type">void</span>* arg)</span> &#123;</span><br><span class="line">    <span class="comment">// 存款线程，传入参数为操作人员，在对银行账户进行操作时加锁</span></span><br><span class="line">    Member* operator = (Member*)arg;</span><br><span class="line"></span><br><span class="line">    pthread_mutex_lock(&amp;Lock);</span><br><span class="line">    bank_account += operator-&gt;op_amount;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s deposited %d, now the bank account has %d\n&quot;</span>,</span><br><span class="line">           operator-&gt;name, operator-&gt;op_amount, bank_account);</span><br><span class="line">    pthread_mutex_unlock(&amp;Lock);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放操作人员指向的姓名和本身的内存空间</span></span><br><span class="line">    <span class="built_in">free</span>(operator-&gt;name);</span><br><span class="line">    <span class="built_in">free</span>(operator);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span>* <span class="title function_">Withdraw</span><span class="params">(<span class="type">void</span>* arg)</span> &#123;</span><br><span class="line">    <span class="comment">// 取款线程，传入参数为操作人员，在对银行账户进行操作时加锁</span></span><br><span class="line">    Member* operator = (Member*)arg;</span><br><span class="line"></span><br><span class="line">    pthread_mutex_lock(&amp;Lock);</span><br><span class="line">    bank_account -= operator-&gt;op_amount;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s withdrew %d, now the bank account has %d\n&quot;</span>,</span><br><span class="line">           operator-&gt;name, operator-&gt;op_amount, bank_account);</span><br><span class="line">    pthread_mutex_unlock(&amp;Lock);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放操作人员指向的姓名和本身的内存空间</span></span><br><span class="line">    <span class="built_in">free</span>(operator-&gt;name);</span><br><span class="line">    <span class="built_in">free</span>(operator);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">load_operator</span><span class="params">(Member* rand_operator, <span class="type">int</span> rand_guy)</span> &#123; </span><br><span class="line">    <span class="comment">//处理向线程发送的数据，即填充操作人员的姓名、存取款状态、操作钱款</span></span><br><span class="line">    rand_operator-&gt;name = strdup(members[rand_guy].name); <span class="comment">// 填充操作人员的姓名</span></span><br><span class="line">    <span class="keyword">if</span> (rand_operator-&gt;name == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;strdup failed&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (rand_guy &lt;= <span class="number">4</span>) &#123; <span class="comment">// 根据随机到的人员编号判断该成员是存款还是取款</span></span><br><span class="line">        rand_operator-&gt;is_withdraw = <span class="number">0</span>;</span><br><span class="line">        rand_operator-&gt;op_amount = deposit_num[rand_guy]; <span class="comment">// 操作钱款对应操作人员的编号</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        rand_operator-&gt;is_withdraw = <span class="number">1</span>;</span><br><span class="line">        rand_operator-&gt;op_amount = withdraw_num[rand_guy - <span class="number">5</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">operate</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 操作主体函数，处理随机存取逻辑并启动多线程</span></span><br><span class="line">    <span class="type">int</span> num = <span class="keyword">sizeof</span>(members) / <span class="keyword">sizeof</span>(members[<span class="number">0</span>]); <span class="comment">//成员数量</span></span><br><span class="line">    <span class="type">int</span> operate_num = <span class="number">0</span>; <span class="comment">// 操作次数，即存取款次数之和，本体应为2*7=14</span></span><br><span class="line">    <span class="type">int</span> thread_index = <span class="number">0</span>; <span class="comment">// 线程计数下标</span></span><br><span class="line">    srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>)); <span class="comment">// 初始化随机数种子</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">        <span class="comment">// 计算操作次数</span></span><br><span class="line">        operate_num += members[i].op_times;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">pthread_t</span>* threads = <span class="built_in">malloc</span>(operate_num * <span class="keyword">sizeof</span>(<span class="type">pthread_t</span>)); <span class="comment">// 为操作总数动态分配相同个数的线程</span></span><br><span class="line">    <span class="keyword">if</span> (threads == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;malloc failed for threads&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (operate_num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 保证启动操作数量个线程</span></span><br><span class="line">        <span class="comment">// 取随机数生成随机的操作人员，如果该人员的操作次数已经用尽，就跳过该人员</span></span><br><span class="line">        <span class="type">int</span> rand_guy = rand() % num;</span><br><span class="line">        <span class="keyword">if</span> (members[rand_guy].op_times == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        members[rand_guy].op_times--;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        因为向线程传递的参数必须是一个指向特定地址的指针，线程启动后将向该地址读取数据</span></span><br><span class="line"><span class="comment">        所以必须用动态内存分配一个新的内存空间储存操作人员信息，并将该指针传递给线程</span></span><br><span class="line"><span class="comment">        如果用临时变量，操作人员的信息将只在一片相同的地址空间上进行迭代</span></span><br><span class="line"><span class="comment">        多线程读取数据时就会出现条件竞争</span></span><br><span class="line"><span class="comment">        故而此处必须使用动态内存分配，并在线程操作执行结束时由线程对分配的内存进行释放</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        Member* operator = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Member));</span><br><span class="line">        <span class="keyword">if</span> (operator == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            perror(<span class="string">&quot;malloc failed for operator&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        load_operator(operator, rand_guy); <span class="comment">// 装载操作人员的信息</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (operator-&gt;is_withdraw) &#123; <span class="comment">// 根据操作人员的信息决定调用存款还是取款线程</span></span><br><span class="line">            pthread_create(&amp;threads[thread_index++], <span class="literal">NULL</span>, Withdraw, operator);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            pthread_create(&amp;threads[thread_index++], <span class="literal">NULL</span>, Deposit, operator);</span><br><span class="line">        &#125;</span><br><span class="line">        operate_num--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; thread_index; i++) &#123; <span class="comment">// 在多线程并发结束后等待多线程结束</span></span><br><span class="line">        pthread_join(threads[i], <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(threads); <span class="comment">// 操作结束，释放对线程分配的内存</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    pthread_mutex_init(&amp;Lock, <span class="literal">NULL</span>); <span class="comment">// 初始化互斥锁</span></span><br><span class="line"></span><br><span class="line">    operate(); <span class="comment">// 进行操作</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Final bank account: %d\n&quot;</span>, bank_account); <span class="comment">// 回显最后银行账户的信息</span></span><br><span class="line"></span><br><span class="line">    pthread_mutex_destroy(&amp;Lock); <span class="comment">// 销毁互斥锁</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>              </div>            </details><p>运行结果如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20241013143021163.png" alt="image-20241013143021163" style="zoom:80%;" /><h3 id="q2-2"><a class="markdownIt-Anchor" href="#q2-2"></a> Q2</h3><blockquote><p>本题的要求跟题目一的要求一样，唯一区别是：在本题中假设Mary和Sally的银行账户是不可借记的，即当余额少于取款额时，不能取款，取款线程需要阻塞等待直到账户有足够的钱。</p></blockquote><p>为了满足题目的新要求，即 <strong>Mary 和 Sally 的银行账户在余额不足时无法取款，取款线程需要阻塞等待</strong>，需要对取款操作做一些修改。我们可以使用条件变量 (<code>pthread_cond_t</code>) 来实现线程阻塞和唤醒的机制：<a href="https://blog.csdn.net/eidolon_foot/article/details/134509797">【C语言】条件变量(pthread_cond_t)_c语言条件变量-CSDN博客</a></p><ol><li><strong>添加条件变量</strong>：使用条件变量 <code>pthread_cond_t</code> 来实现取款线程的阻塞和唤醒。当余额不足时，取款线程会进入等待状态，直到有足够的钱进行取款。</li><li><strong>取款操作检测是否阻塞</strong>：在取款时检查余额。如果余额不足，则阻塞线程等待条件变量的信号。</li><li><strong>存款操作唤醒取款线程</strong>：每当有存款时，需要唤醒所有等待中的取款线程，检查是否现在可以取款。</li><li><strong>线程同步</strong>：由于涉及到多线程的等待和唤醒操作，所有操作仍需保证线程安全，继续使用互斥锁 <code>pthread_mutex_t</code>。</li></ol><p>所以只需要对<code>Deposit()</code>和<code>Withdraw()</code>这两个线程函数进行修改即可：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span>* <span class="title function_">Deposit</span><span class="params">(<span class="type">void</span>* arg)</span> &#123;</span><br><span class="line">    <span class="comment">// 新增特性：存款时将尝试唤醒所有条件变量，以恢复阻塞的取款线程</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// 存款操作...</span></span><br><span class="line">    pthread_cond_broadcast(&amp;Cond); <span class="comment">// 存款后，唤醒所有条件变量，再次尝试取款</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span>* <span class="title function_">Withdraw</span><span class="params">(<span class="type">void</span>* arg)</span> &#123;</span><br><span class="line">    <span class="comment">// 新增特性：若取款后余额将为负数，则阻塞线程并释放锁</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">while</span>(bank_account&lt;operator-&gt;op_amount)&#123;</span><br><span class="line">        <span class="comment">// 若此时银行余额小于取款操作钱款，则阻塞线程，释放锁。</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s is waiting to withdraw %d, but only %d is available, operation blockage.\n&quot;</span>,</span><br><span class="line">        operator-&gt;name,operator-&gt;op_amount,bank_account);</span><br><span class="line">        pthread_cond_wait(&amp;Cond,&amp;Lock);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//取款 ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整的代码如下：</p><details class="folding-tag" cyan><summary> 查看完整代码 </summary>              <div class='content'>              <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span>* name; </span><br><span class="line">    <span class="type">int</span> op_amount; </span><br><span class="line">    <span class="type">int</span> op_times; </span><br><span class="line">    <span class="type">int</span> is_withdraw; </span><br><span class="line">&#125; Member;</span><br><span class="line"></span><br><span class="line">Member members[] = &#123;</span><br><span class="line">    &#123;<span class="string">&quot;Dad&quot;</span>, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;Mom&quot;</span>, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;Grandma&quot;</span>, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;Grandpa&quot;</span>, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;Uncle&quot;</span>, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;Mary&quot;</span>, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;Sally&quot;</span>, <span class="number">0</span>, <span class="number">2</span>&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> deposit_num[] = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>&#125;;</span><br><span class="line"><span class="type">int</span> withdraw_num[] = &#123;<span class="number">50</span>, <span class="number">100</span>&#125;;</span><br><span class="line"><span class="type">int</span> bank_account = <span class="number">10</span>;</span><br><span class="line"><span class="type">pthread_mutex_t</span> Lock;</span><br><span class="line"><span class="type">pthread_cond_t</span> Cond;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span>* <span class="title function_">Deposit</span><span class="params">(<span class="type">void</span>* arg)</span> &#123;</span><br><span class="line">    <span class="comment">// 新增特性：存款时将尝试唤醒所有条件变量，以恢复阻塞的取款线程</span></span><br><span class="line">    Member* operator = (Member*)arg;</span><br><span class="line"></span><br><span class="line">    pthread_mutex_lock(&amp;Lock);</span><br><span class="line">    bank_account += operator-&gt;op_amount;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s deposited %d, now the bank account has %d\n&quot;</span>,</span><br><span class="line">           operator-&gt;name, operator-&gt;op_amount, bank_account);</span><br><span class="line">    pthread_cond_broadcast(&amp;Cond); <span class="comment">// 存款后，唤醒所有条件变量，再次尝试取款</span></span><br><span class="line">    pthread_mutex_unlock(&amp;Lock);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(operator-&gt;name);</span><br><span class="line">    <span class="built_in">free</span>(operator);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span>* <span class="title function_">Withdraw</span><span class="params">(<span class="type">void</span>* arg)</span> &#123;</span><br><span class="line">    <span class="comment">// 新增特性：若取款后余额将为负数，则阻塞线程并释放锁</span></span><br><span class="line">    Member* operator = (Member*)arg;</span><br><span class="line"></span><br><span class="line">    pthread_mutex_lock(&amp;Lock);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(bank_account&lt;operator-&gt;op_amount)&#123;</span><br><span class="line">        <span class="comment">// 若此时银行余额小于取款操作钱款，则阻塞线程，释放锁。</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s is waiting to withdraw %d, but only %d is available, operation blockage.\n&quot;</span>,</span><br><span class="line">        operator-&gt;name,operator-&gt;op_amount,bank_account);</span><br><span class="line">        pthread_cond_wait(&amp;Cond,&amp;Lock);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bank_account -= operator-&gt;op_amount;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s withdrew %d, now the bank account has %d\n&quot;</span>,</span><br><span class="line">           operator-&gt;name, operator-&gt;op_amount, bank_account);</span><br><span class="line"></span><br><span class="line">    pthread_mutex_unlock(&amp;Lock);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(operator-&gt;name);</span><br><span class="line">    <span class="built_in">free</span>(operator);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">load_operator</span><span class="params">(Member* rand_operator, <span class="type">int</span> rand_guy)</span> &#123; </span><br><span class="line">    rand_operator-&gt;name = strdup(members[rand_guy].name); </span><br><span class="line">    <span class="keyword">if</span> (rand_operator-&gt;name == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;strdup failed&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (rand_guy &lt;= <span class="number">4</span>) &#123; </span><br><span class="line">        rand_operator-&gt;is_withdraw = <span class="number">0</span>;</span><br><span class="line">        rand_operator-&gt;op_amount = deposit_num[rand_guy];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        rand_operator-&gt;is_withdraw = <span class="number">1</span>;</span><br><span class="line">        rand_operator-&gt;op_amount = withdraw_num[rand_guy - <span class="number">5</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">operate</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="keyword">sizeof</span>(members) / <span class="keyword">sizeof</span>(members[<span class="number">0</span>]); </span><br><span class="line">    <span class="type">int</span> operate_num = <span class="number">0</span>; </span><br><span class="line">    <span class="type">int</span> thread_index = <span class="number">0</span>; </span><br><span class="line">    srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">        operate_num += members[i].op_times;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">pthread_t</span>* threads = <span class="built_in">malloc</span>(operate_num * <span class="keyword">sizeof</span>(<span class="type">pthread_t</span>)); </span><br><span class="line">    <span class="keyword">if</span> (threads == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;malloc failed for threads&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (operate_num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> rand_guy = rand() % num;</span><br><span class="line">        <span class="keyword">if</span> (members[rand_guy].op_times == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        members[rand_guy].op_times--;</span><br><span class="line"></span><br><span class="line">        Member* operator = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Member));</span><br><span class="line">        <span class="keyword">if</span> (operator == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            perror(<span class="string">&quot;malloc failed for operator&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        load_operator(operator, rand_guy); </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (operator-&gt;is_withdraw) &#123; </span><br><span class="line">            pthread_create(&amp;threads[thread_index++], <span class="literal">NULL</span>, Withdraw, operator);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            pthread_create(&amp;threads[thread_index++], <span class="literal">NULL</span>, Deposit, operator);</span><br><span class="line">        &#125;</span><br><span class="line">        operate_num--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; thread_index; i++) &#123;</span><br><span class="line">        pthread_join(threads[i], <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(threads); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    pthread_mutex_init(&amp;Lock, <span class="literal">NULL</span>); </span><br><span class="line">    pthread_cond_init(&amp;Cond,<span class="literal">NULL</span>); <span class="comment">// 初始化条件变量</span></span><br><span class="line"></span><br><span class="line">    operate(); </span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Final bank account: %d\n&quot;</span>, bank_account); </span><br><span class="line"></span><br><span class="line">    pthread_mutex_destroy(&amp;Lock); </span><br><span class="line">    pthread_cond_destroy(&amp;Cond); <span class="comment">// 销毁条件变量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>              </div>            </details><p>运行结果如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20241013143933424.png" alt="image-20241013143933424" style="zoom:50%;" /><p>思考：假如已经有两个或多个取款线程进入阻塞，然后存款线程调用<code>pthread_cond_broadcast</code>唤醒所有阻塞的线程。此时会不会出现竞争？哪个被唤醒的线程会获得锁？</p><p>当存款线程通过 <code>pthread_cond_broadcast</code> 唤醒多个阻塞的取款线程时，<strong>确实可能发生竞争</strong>，但竞争的结果是受互斥锁保护的。每次只有一个线程能够获得锁并执行操作，其他线程会阻塞在锁上，直到锁被释放。</p><p>唤醒的线程是以一种不确定的顺序重新争夺锁的，具体哪个线程会优先获得锁取决于操作系统的调度策略。常见的调度策略可能是<strong>先唤醒的线程</strong>优先获得锁，但这并不是严格保证的，取决于内核调度器的实现。</p><p>如果只希望唤醒一个线程，可以用 <code>pthread_cond_signal</code> 代替 <code>pthread_cond_broadcast</code>，这只会唤醒一个等待的线程。不更改也没有关系，因为多线程争夺互斥锁对于共享变量是安全的，这种随机性不会对程序造成危害。</p><h2 id="lab03"><a class="markdownIt-Anchor" href="#lab03"></a> Lab03</h2><p>进程调度是现代操作系统中最核心的部分，它是现代操作系统能够实现多用户、多任务功能的根本保障。早期的批处理系统、不同版本的Windows、Linux等操作系统分别采用了不同的进程调度机制，例如，FCFS调度算法、SJF调度算法、HRRN调度算法、RR调度算法、多级反馈队列调度算法等。本次实验的目标如下：</p><ol><li>掌握Windows、Linux操作系统中进程调度机制及其原理。</li><li>学会用高级语言来模拟实现一些常用的非抢占式(Non-preemptive)进程调度算法。</li></ol><h3 id="q1-3"><a class="markdownIt-Anchor" href="#q1-3"></a> Q1</h3><blockquote><p>假设有10个进程，每个进程的到达时间(1-20之间的整数)、需要的运行时间(10-5之间的整数)都是随机生产。模拟实现短作业优先调度算法SJF，结果输出这10个进程的执行顺序，并计算输出每个进程的等待时间以及总的平均等待时间。</p><p>实验提示：<strong>本次实验不需要使用线程</strong>。另外，<strong>本次实验中的两种调度算法都是非抢占式(Non-preemptive)调度算法</strong>，即一个进程获得CPU后将一直执行到结束。要求实现一个排队器函数，用于产生下一个将获得CPU的进程。首先，生成10个进程(它们的到达时间、需要运行的时间、优先级由随机数产生)，然后由排队器来决定进程获得CPU的顺序。由于本次实验中的两种算法都是非抢占式，因此一个进程执行完成后，由排队器来产生下一个获得CPU的进程。对于HRRN算法，需要为每一个进程设置一个变量，用来记录其动态优先级。</p></blockquote><p>SJF(Shortest Job First )算法，即最短作业优先调度法。是以进入系统的作业所要求的CPU时间为标准，对短作业或者短进程优先调度的算法，将每个进程与其估计运行时间进行关联，选取估计计算时间最短的作业投入运行。</p><p>SJF调度算法是被证明了的最佳调度算法，这是因为对于给定的一组进程，SJF算法的平均周转时间最小。通过将短进程移到长进程之前，短进程等待时间的减少大于长进程等特时间的增加，因此，平均等待时间减少了。</p><p>但在实际运用中，SJF算法是达不到理论上的最佳效果的。因为实现SJF调度算法需要知道作业所需运行时间，否则调度就没有依据，要精确知道一个作业的运行时间是办不到的。而且还会出现<span class="bubble-content">饥饿</span><span class="bubble-notation"><span class="bubble-item" style="background-color:使某个异步进程在可预测的时间内不能被激活;">进程饥饿，即为Starvation，指当等待时间给进程推进和响应带来明显影响称为进程饥饿。当饥饿到一定程度的进程在等待到即使完成也无实际意义的时候称为饥饿死亡。亦有定义为：由于别的并发的激活的进程持久占有所需资源</span></span>现象。</p><p>要模拟实现SFJ其实并不难。在现实情况中，由于进程的到达时间并不确定，所以是一个动态的排序算法。但是在模拟中实现，我们可以预先用随机数生成好进程的抵达时间、运行时间等各种信息，然后用排队器函数提前处理好。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">qsort(processes, NUM_PROCESSES, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> PCB), compare);</span><br></pre></td></tr></table></figure><p>至于排队器函数的处理逻辑实现也很简单：根据进程的运行时间进行排序，运行时间短的优先级更高；如果运行时间相同，则比较哪个进程的抵达时间更早。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">compare</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *a, <span class="type">const</span> <span class="type">void</span> *b)</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> *<span class="title">p1</span> =</span> (<span class="keyword">struct</span> PCB *)a;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> *<span class="title">p2</span> =</span> (<span class="keyword">struct</span> PCB *)b;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 优先比较需要用时，如果时间相同则比较到达时间</span></span><br><span class="line">    <span class="keyword">if</span> (p1-&gt;neededTime == p2-&gt;neededTime)</span><br><span class="line">        <span class="keyword">return</span> p1-&gt;arrivalTime - p2-&gt;arrivalTime;</span><br><span class="line">    <span class="keyword">return</span> p1-&gt;neededTime - p2-&gt;neededTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用排队器对进程队列进行排序处理后，我们就可以依次遍历每个处理好的有序进程，计算并打印它们的信息即可。</p><p>完整代码如下：</p><details class="folding-tag" cyan><summary> 查看完整代码 </summary>              <div class='content'>              <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NUM_PROCESSES 10</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> pid[<span class="number">64</span>];</span><br><span class="line">    <span class="type">char</span> state;</span><br><span class="line">    <span class="type">int</span> priority;</span><br><span class="line">    <span class="type">int</span> neededTime;</span><br><span class="line">    <span class="type">int</span> totalWaitTime;</span><br><span class="line">    <span class="type">int</span> arrivalTime;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> *<span class="title">next</span>;</span> <span class="comment">// 实际上并没用到指针，用数组代替了</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 随机生成进程</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">generateProcesses</span><span class="params">(<span class="keyword">struct</span> PCB processes[])</span> &#123;</span><br><span class="line">    srand(time(<span class="number">0</span>));  </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; NUM_PROCESSES; i++) &#123;</span><br><span class="line">        <span class="built_in">snprintf</span>(processes[i].pid, <span class="keyword">sizeof</span>(processes[i].pid), <span class="string">&quot;P%d&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">        processes[i].state = <span class="string">&#x27;w&#x27;</span>;</span><br><span class="line">        processes[i].priority = <span class="number">0</span>;</span><br><span class="line">        processes[i].neededTime = (rand() % <span class="number">41</span>) + <span class="number">10</span>;  <span class="comment">// 随机生成需要的时间1~50</span></span><br><span class="line">        processes[i].arrivalTime = (rand() % <span class="number">20</span>) + <span class="number">1</span>;  <span class="comment">// 随机生成抵达时间1~20</span></span><br><span class="line">        processes[i].totalWaitTime = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 撰写SFJ排序器的比较逻辑</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *a, <span class="type">const</span> <span class="type">void</span> *b)</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> *<span class="title">p1</span> =</span> (<span class="keyword">struct</span> PCB *)a;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> *<span class="title">p2</span> =</span> (<span class="keyword">struct</span> PCB *)b;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 优先比较需要用时，如果时间相同则比较到达时间</span></span><br><span class="line">    <span class="keyword">if</span> (p1-&gt;neededTime == p2-&gt;neededTime)</span><br><span class="line">        <span class="keyword">return</span> p1-&gt;arrivalTime - p2-&gt;arrivalTime;</span><br><span class="line">    <span class="keyword">return</span> p1-&gt;neededTime - p2-&gt;neededTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模拟SFJ调度排序器</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SJF</span><span class="params">(<span class="keyword">struct</span> PCB processes[])</span> &#123;</span><br><span class="line">    <span class="comment">// 对进程进行排序，运行时间少、抵达时间早的优先</span></span><br><span class="line">    qsort(processes, NUM_PROCESSES, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> PCB), compare);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> currentTime = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> totalWaitTime = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Execution Order:\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; NUM_PROCESSES; i++) &#123;</span><br><span class="line">        <span class="comment">// 如果第一个进程的抵达时间晚于现在的时间，则等待第一个进程开始</span></span><br><span class="line">        <span class="keyword">if</span> (currentTime &lt; processes[i].arrivalTime) &#123;</span><br><span class="line">            currentTime = processes[i].arrivalTime;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算进程等待时间：当前的时间 - 抵达的时间</span></span><br><span class="line">        processes[i].totalWaitTime = currentTime - processes[i].arrivalTime;</span><br><span class="line">        <span class="comment">// 计算等待总时间</span></span><br><span class="line">        totalWaitTime += processes[i].totalWaitTime;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Process %s - Arrival Time: %d, Needed Time: %d, Wait Time: %d\n&quot;</span>,</span><br><span class="line">               processes[i].pid, processes[i].arrivalTime, processes[i].neededTime, processes[i].totalWaitTime);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新当前的时间</span></span><br><span class="line">        currentTime += processes[i].neededTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算等待平均时间</span></span><br><span class="line">    <span class="type">double</span> avgWaitTime = (<span class="type">double</span>)totalWaitTime / NUM_PROCESSES;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Total Wait Time: %d\n&quot;</span>, totalWaitTime);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Average Wait Time: %.2f\n&quot;</span>, avgWaitTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> <span class="title">processes</span>[<span class="title">NUM_PROCESSES</span>];</span></span><br><span class="line">    </span><br><span class="line">    generateProcesses(processes);</span><br><span class="line"></span><br><span class="line">    SJF(processes);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>              </div>            </details><p>运行结果如下：</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20241014215208267.png" alt="image-20241014215208267" /></p><h3 id="q2-3"><a class="markdownIt-Anchor" href="#q2-3"></a> Q2</h3><blockquote><p>假设有10个进程，每个进程的到达时间(1-20之间的整数)、需要的运行时间(10-50之间的整数)都是随机生产。模拟实现最高响应比优先调度算法HRRN，结果输出这10个进程的执行顺序，并计算输出每个进程的等待时间以及总的平均等待时间。</p></blockquote><p>高响应比优先调度算法（Highest Response Ratio Next）是一种对CPU中央控制器响应比的分配的一种算法。HRRN是介于FCFS（先来先服务算法）与SJF（短作业优先算法）之间的折中算法，既考虑作业等待时间又考虑作业运行时间，既照顾短作业又不使长作业等待时间过长，改进了调度性能。它解决了SFJ中长作业时间进程的饥饿问题，但是付出了更多的资源去计算响应比，提升了系统开销。</p><p>实际上就是以<span class='p red'>响应比</span>来代替<span class='p yellow'>作业时间</span>作为排序标准，响应比的计算公式如下：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>w</mi><mi>a</mi><mi>i</mi><mi>t</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>e</mi><mo>+</mo><mi>r</mi><mi>u</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>e</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>r</mi><mi>u</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(waiting\_time+runtime)/(runtime)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">a</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mclose">)</span></span></span></span></p><p>其中等待时间是不断变化的，所以响应比也是不断变化的。对SFJ算法的进程处理方法已经不适用，因为此时进程之间的优先级是动态的。所以我们的处理逻辑也需要改变：对于每个时间单位，计算一次响应比并对进程列表进行排序，选择优先级最高的进程分配CPU资源执行。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">calculateResponseRatio(processes,currentTime); <span class="comment">// 计算响应比</span></span><br><span class="line"></span><br><span class="line">index=findHighestResponseProcess(processes,currentTime); <span class="comment">// 寻找响应值最大的进程下标</span></span><br></pre></td></tr></table></figure><p>完整的代码如下：</p><details class="folding-tag" cyan><summary> 查看完整代码 </summary>              <div class='content'>              <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NUM_PROCESSES 10</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> pid[<span class="number">64</span>];</span><br><span class="line">    <span class="type">char</span> state;</span><br><span class="line">    <span class="type">int</span> hasFinished;</span><br><span class="line">    <span class="type">int</span> priority;</span><br><span class="line">    <span class="type">int</span> neededTime;</span><br><span class="line">    <span class="type">int</span> totalWaitTime;</span><br><span class="line">    <span class="type">int</span> arrivalTime;</span><br><span class="line">    <span class="type">double</span> responseRatio;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> *<span class="title">next</span>;</span> </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 随机生成进程</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">generateProcesses</span><span class="params">(<span class="keyword">struct</span> PCB processes[])</span> &#123;</span><br><span class="line">    srand(time(<span class="number">0</span>));  </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; NUM_PROCESSES; i++) &#123;</span><br><span class="line">        <span class="built_in">snprintf</span>(processes[i].pid, <span class="keyword">sizeof</span>(processes[i].pid), <span class="string">&quot;P%d&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">        processes[i].state = <span class="string">&#x27;w&#x27;</span>;</span><br><span class="line">        processes[i].hasFinished=<span class="number">0</span>;</span><br><span class="line">        processes[i].priority = <span class="number">0</span>;</span><br><span class="line">        processes[i].neededTime = (rand() % <span class="number">41</span>) + <span class="number">10</span>;  <span class="comment">// 随机生成需要的时间1~50</span></span><br><span class="line">        processes[i].arrivalTime = (rand() % <span class="number">20</span>) + <span class="number">1</span>;  <span class="comment">// 随机生成抵达时间1~20</span></span><br><span class="line">        processes[i].totalWaitTime = <span class="number">0</span>;</span><br><span class="line">        processes[i].responseRatio = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算响应比</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">calculateResponseRatio</span><span class="params">(<span class="keyword">struct</span> PCB processes[], <span class="type">int</span> currentTime)</span>&#123;</span><br><span class="line">    <span class="type">int</span> waitTime=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;NUM_PROCESSES;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (processes[i].hasFinished!=<span class="number">1</span>&amp;&amp;processes[i].arrivalTime &lt;= currentTime)&#123;</span><br><span class="line">            waitTime=currentTime-processes[i].arrivalTime;</span><br><span class="line">            <span class="comment">// 计算公式：响应比 =（等待时间+运行时间）/运行时间</span></span><br><span class="line">            processes[i].responseRatio=(waitTime+(<span class="type">double</span>)processes[i].neededTime)/processes[i].neededTime;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 寻找响应比最大的进程</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">findHighestResponseProcess</span><span class="params">(<span class="keyword">struct</span> PCB processes[],<span class="type">int</span> currentTime)</span>&#123;</span><br><span class="line">    <span class="type">int</span> index=<span class="number">-1</span>;</span><br><span class="line">    <span class="type">double</span> highestRatio=<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;NUM_PROCESSES;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (processes[i].hasFinished!=<span class="number">1</span> &amp;&amp; processes[i].responseRatio&gt;highestRatio &amp;&amp;processes[i].arrivalTime&lt;=currentTime)&#123;</span><br><span class="line">            index=i;</span><br><span class="line">            highestRatio=processes[i].responseRatio;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> index;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模拟HRRN调度排序器</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HRRN</span><span class="params">(<span class="keyword">struct</span> PCB processes[])</span> &#123;</span><br><span class="line">    <span class="type">int</span> totalWaitTime=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> currentTime=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> finishedProcesses=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> index=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Execution Order:\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(finishedProcesses&lt;NUM_PROCESSES)&#123;</span><br><span class="line"></span><br><span class="line">        calculateResponseRatio(processes,currentTime); <span class="comment">// 计算响应比</span></span><br><span class="line"></span><br><span class="line">        index=findHighestResponseProcess(processes,currentTime); <span class="comment">// 寻找响应值最大的进程下标</span></span><br><span class="line">        <span class="keyword">if</span> (index==<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            currentTime++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">PCB</span>* <span class="title">tmp</span>=</span>&amp;processes[index];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Process %s - Arrival Time: %d, Needed Time: %d, Wait Time: %d\n&quot;</span>,</span><br><span class="line">        tmp-&gt;pid, tmp-&gt;arrivalTime, tmp-&gt;neededTime,</span><br><span class="line">        currentTime-tmp-&gt;arrivalTime);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算总共等待的时间</span></span><br><span class="line">        tmp-&gt;totalWaitTime=currentTime-tmp-&gt;arrivalTime;</span><br><span class="line">        totalWaitTime+=tmp-&gt;totalWaitTime;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 更新进程状态和时间</span></span><br><span class="line">        tmp-&gt;hasFinished=<span class="number">1</span>;</span><br><span class="line">        currentTime+=tmp-&gt;neededTime;</span><br><span class="line">        finishedProcesses++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算等待平均时间</span></span><br><span class="line">    <span class="type">double</span> avgWaitTime = (<span class="type">double</span>)totalWaitTime / NUM_PROCESSES;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Total Wait Time: %d\n&quot;</span>, totalWaitTime);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Average Wait Time: %.2f\n&quot;</span>, avgWaitTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PCB</span> <span class="title">processes</span>[<span class="title">NUM_PROCESSES</span>];</span></span><br><span class="line">    </span><br><span class="line">    generateProcesses(processes);</span><br><span class="line"></span><br><span class="line">    HRRN(processes);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>              </div>            </details><p>运行结果如下：</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20241014215235225.png" alt="image-20241014215235225" /></p><p>待更新……</p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/64495434_p0.jpg" alt="64495434_p0" /></p>]]></content>
    
    
    <summary type="html">A document explaining the experimental code for the operating system, along with the debugging process and test inputs.</summary>
    
    
    
    <category term="课堂随笔" scheme="http://example.com/categories/%E8%AF%BE%E5%A0%82%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="OS" scheme="http://example.com/tags/OS/"/>
    
    <category term="操作系统" scheme="http://example.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>番外：Go接口的设计哲学</title>
    <link href="http://example.com/posts/7a99acb03ff0/"/>
    <id>http://example.com/posts/7a99acb03ff0/</id>
    <published>2024-10-09T05:57:54.000Z</published>
    <updated>2024-10-09T05:57:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="接口的设计哲学"><a class="markdownIt-Anchor" href="#接口的设计哲学"></a> 接口的设计哲学</h1><p>Go 接口定义了一组方法，但并不实现这些方法。任何类型只要实现了接口中定义的所有方法，就可以被视为该接口的实现。Go 中没有显式的 “implements” 关键字，只要类型满足接口的要求，编译器自动认定它实现了该接口。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Animal <span class="keyword">interface</span> &#123;</span><br><span class="line">    Speak() <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Dog <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d Dog)</span></span> Speak() <span class="type">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Woof!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Cat <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c Cat)</span></span> Speak() <span class="type">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Meow!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在这个例子中，<code>Dog</code> 和 <code>Cat</code> 类型都实现了 <code>Animal</code> 接口，因为它们都实现了 <code>Speak()</code> 方法。</p><h2 id="为什么go会存在接口"><a class="markdownIt-Anchor" href="#为什么go会存在接口"></a> 为什么Go会存在接口？</h2><p>Go 语言中的接口是为了增强代码的<strong>灵活性</strong>和<strong>解耦性</strong>。</p><ul><li><p>减少耦合：接口提供了抽象层，使得代码更加灵活，允许不同的实现方式。比如上例中的 <code>Animal</code> 接口可以被不同的类型实现，客户端代码不需要知道具体的类型是什么。</p><blockquote><p>耦合（Coupling）在计算机科学中，特别是在软件工程领域，指的是不同模块、组件或系统之间相互依赖的程度。这种依赖可以表现为一个模块需要知道另一个模块的内部细节以便能够正常工作，或者是一个模块直接操作或调用另一个模块的功能。</p><p>耦合度是评价软件设计质量的一个重要指标：</p><ul><li>高耦合：意味着模块间相互关联紧密，一个模块的变化可能会引起其他模块的连锁反应，导致代码难以理解和修改，同时也会降低代码的可重用性和可维护性。</li><li>低耦合：则是理想的软件设计目标，它要求模块间的关系尽量简单和间接，每个模块尽可能独立地完成自己的功能，通过明确的接口进行交互，而不是依赖于其他模块的内部实现。低耦合的系统更易于测试、扩展和维护。</li></ul></blockquote></li><li><p>简化多态性：Go 舍弃了传统的继承机制，通过接口实现了多态性。不同的类型可以通过实现同一个接口，达到同一个目的。</p></li><li><p>注重组合而非继承：Go 强调通过组合（composition）而不是继承（inheritance）来构建程序。接口鼓励将功能分解为小的、独立的部分，而不是创建复杂的继承体系。</p><blockquote><p>组合优于继承。</p><p>我们有一只鸭子和一只鸡，他们工作得很好。</p><p>我们发现鸭子和鸡有很多重复的地方，他们都会飞，都有两只脚两个翅膀，都会唧唧或者嘎嘎叫。</p><p>于是我们抽象出鸟这个父类，鸭子和鸡都继承了鸟这个父类， 当我们想要在飞的时候额外做点什么，只需要修改鸟就好了，代码得到了缩减，维护起来看似方便了。</p><p>鸟工作得也很好。</p><p>我们业务不断扩展，企鹅出现了。 它不会飞，但是会游泳。</p><p>鸟的工作出了问题，于是我们把飞行这个功能被下沉到了会飞的鸟类，企鹅继承自一个不会飞的鸟类。</p><p>接下来橡皮鸭子出现了，人们对于它究竟是不是鸟有了争议。开始浪费时间大量的讨论什么是鸟，鸟该做些什么。</p><p>……</p><p>但我们的生活中没有鸟（请注意这句话），鸟是一个抽象， 我们生活中有鸡，有鸭。我们觉得他们有一些相同的地方，于是把拥有这些相同点的东西叫做鸟，但永远不知道下一个遇见的，能不能算鸟， 鸟的定义要不要修改。</p><p>这就是继承不适用的原因，让我们看看组合会怎么样。</p><p>我们找到了鸡和鸭的共同点， 会飞，两只脚，两个翅膀，会叫。 这些东西加上其他的特质『组合』成了鸡或鸭。 会飞这个能力就能提出来，使用在每一个需要飞行能力的地方。 当我遇到企鹅，就不用拿飞行来『组合』它。</p><p>飞行，不应该是鸡或鸭从父类继承的能力，而应该是『飞行能力』组合成了鸡鸭的一部分。</p></blockquote></li></ul><h2 id="设计概念"><a class="markdownIt-Anchor" href="#设计概念"></a> 设计概念</h2><p>Go 的设计哲学是 “简单就是美” 和 “清晰胜于复杂”。Go 的接口（interface）是 Go 语言中一个核心的概念，源自其设计哲学，特别是简洁性、组合性和类型系统的灵活性。</p><p>通过对比“面向接口编程”和“面向对象编程”可以更加清晰的总结出接口的特点。Go 的接口虽然有一些与面向对象编程（OOP）类似的特性，但它本质上与传统 OOP 有很大的不同。</p><p>两者虽然都能实现<strong>多态</strong>和<strong>抽象</strong>。但在OOP中，多态性是通过继承和虚方法实现的，而 Go 是通过接口实现类似的效果。不同的类型可以实现相同的接口，提供不同的行为；Go 的接口也能像 OOP 中的抽象类一样，提供了抽象层，隐藏具体实现。</p><p>与OOP相比，Go没有继承，且接口隐式实现；没有类的层级结构，且比OOP更加灵活。</p><ul><li>没有继承：Go 中没有类和继承的概念。传统 OOP 中通过继承共享行为，而 Go 更倾向于通过组合和接口来共享行为。Go 强调 “组合优于继承”。</li><li>接口是隐式的：在 OOP 中，类必须显式地声明实现某个接口（如 <code>implements</code> 关键字），而 Go 则通过隐式实现接口，大大减少了依赖和耦合。</li><li>接口的灵活性：由于 Go 的接口是隐式实现的，它更加灵活。你可以在任何时候给一个类型添加方法使其符合某个接口，而不需要修改原始类型或重新定义继承关系。</li><li>没有类的层级结构：OOP 中的类通常有层级结构，子类继承父类的行为，而在 Go 中，接口没有层级结构，类型通过实现接口的具体方法与接口关联。Go 倾向于&quot;平面化&quot;的设计，没有复杂的层级关系。</li></ul><table><thead><tr><th>特性</th><th>面向接口编程</th><th>面向对象编程</th></tr></thead><tbody><tr><td><strong>关注点</strong></td><td>行为抽象，关注方法签名（接口定义的方法）</td><td>数据和行为结合，关注类的继承和封装</td></tr><tr><td><strong>核心机制</strong></td><td>通过接口实现解耦合和多态性，通常依赖组合而不是继承</td><td>通过类继承来实现代码复用和多态性</td></tr><tr><td><strong>耦合性</strong></td><td>低耦合，模块之间通过接口通信，易于替换实现</td><td>较高耦合，类的层次结构带来依赖，修改某些类可能影响其子类</td></tr><tr><td><strong>实现灵活性</strong></td><td>高灵活性，通过组合和替换实现可扩展系统</td><td>中等灵活性，依赖类的继承体系和多态，层级关系带来复杂性</td></tr><tr><td><strong>方法重用</strong></td><td>通过实现同一接口的多个实现来重用逻辑</td><td>通过继承和方法覆盖来重用父类的逻辑</td></tr><tr><td><strong>典型应用场景</strong></td><td>通常用于依赖注入、模块化系统设计、可替换的行为逻辑</td><td>通常用于具有层次化结构的业务场景，需要复用和扩展对象的功能</td></tr><tr><td><strong>设计哲学</strong></td><td>强调功能分离，使用接口解耦系统</td><td>强调类的继承关系，使用对象封装和多态</td></tr></tbody></table><h2 id="运用举例"><a class="markdownIt-Anchor" href="#运用举例"></a> 运用举例</h2><blockquote><p>Q：假如一个数据结构实现了某接口，然后呢？我的意思是接口定义了一系列方法，数据类型实现了接口定义的方法，直接调用它的方法便是，接口的存在有什么用呢？是否有些多余了。</p></blockquote><p>接口的存在看起来像是额外的一层抽象，而实际用处似乎并不明显，特别是在你只想直接调用方法的时候。实际上，Go 的接口在某些场景中确实是为了应对特定的设计需求，让代码在灵活性和解耦性方面表现更好。可以从以下几个场景加深理解。</p><h3 id="面向抽象编程降低耦合"><a class="markdownIt-Anchor" href="#面向抽象编程降低耦合"></a> 面向抽象编程，降低耦合</h3><p>假设你编写了一个函数，它只依赖某个具体的数据结构，那么这个函数的用途非常局限，必须依赖该具体实现。如果将依赖改为接口，那么这个函数可以接受任何实现了该接口的类型，极大提升了复用性和灵活性。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ProcessAnimal</span><span class="params">(a Animal)</span></span> &#123;</span><br><span class="line">    fmt.Println(a.Speak())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dog := Dog&#123;&#125;</span><br><span class="line">cat := Cat&#123;&#125;</span><br><span class="line">ProcessAnimal(dog) <span class="comment">// &quot;Woof!&quot;</span></span><br><span class="line">ProcessAnimal(cat) <span class="comment">// &quot;Meow!&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里的 <code>ProcessAnimal</code> 函数并不需要知道具体传入的类型是 <code>Dog</code> 还是 <code>Cat</code>，只要它们实现了 <code>Animal</code> 接口即可。这降低了耦合性，如果后续有新的类型如 <code>Bird</code> 实现了 <code>Animal</code> 接口，<code>ProcessAnimal</code> 函数可以不做任何修改直接处理 <code>Bird</code>。</p><h3 id="代码解耦和模块化"><a class="markdownIt-Anchor" href="#代码解耦和模块化"></a> 代码解耦和模块化</h3><p>接口可以将代码的依赖关系从具体实现中解耦。例如，在开发中，经常需要通过接口定义来编写可替换的模块。当系统需要更换某个模块的具体实现时，不需要改动依赖它的代码，只需要提供符合接口定义的新实现。</p><p>比如，你可能有一个数据存储模块，最开始是用内存存储数据，但后来你希望用数据库存储。通过接口，你可以轻松实现不同的存储方式。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Storage <span class="keyword">interface</span> &#123;</span><br><span class="line">    Save(data <span class="type">string</span>) <span class="type">error</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MemoryStorage <span class="keyword">struct</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m MemoryStorage)</span></span> Save(data <span class="type">string</span>) <span class="type">error</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;Saving to memory:&quot;</span>, data)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> DatabaseStorage <span class="keyword">struct</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d DatabaseStorage)</span></span> Save(data <span class="type">string</span>) <span class="type">error</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;Saving to database:&quot;</span>, data)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 业务代码</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">StoreData</span><span class="params">(s Storage, data <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">    s.Save(data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">memStore := MemoryStorage&#123;&#125;</span><br><span class="line">dbStore := DatabaseStorage&#123;&#125;</span><br><span class="line"></span><br><span class="line">StoreData(memStore, <span class="string">&quot;sample data&quot;</span>) <span class="comment">// &quot;Saving to memory: sample data&quot;</span></span><br><span class="line">StoreData(dbStore, <span class="string">&quot;sample data&quot;</span>)  <span class="comment">// &quot;Saving to database: sample data&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在不修改 <code>StoreData</code> 业务代码的前提下，存储方式可以灵活切换。这种解耦方式使得代码更加模块化，也更加易于维护和扩展。</p><h3 id="方便测试"><a class="markdownIt-Anchor" href="#方便测试"></a> 方便测试</h3><p>接口在测试中的作用尤为明显。通过接口，你可以轻松替换实现，编写 mock（模拟）对象来替代实际的实现，从而进行单元测试。这样你可以独立测试依赖了接口的业务逻辑，而不依赖实际的复杂实现。</p><p>比如在上一个例子中，你可以为 <code>Storage</code> 接口创建一个 mock 对象，用来测试依赖 <code>StoreData</code> 函数的代码，而不需要实际保存数据。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> MockStorage <span class="keyword">struct</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m MockStorage)</span></span> Save(data <span class="type">string</span>) <span class="type">error</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;Mock saving data:&quot;</span>, data)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mockStore := MockStorage&#123;&#125;</span><br><span class="line">StoreData(mockStore, <span class="string">&quot;test data&quot;</span>) <span class="comment">// &quot;Mock saving data: test data&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过使用 <code>MockStorage</code>，你不需要真的去处理存储问题，而是能专注于测试业务逻辑。</p><h3 id="动态多态性"><a class="markdownIt-Anchor" href="#动态多态性"></a> 动态多态性</h3><p>Go 的接口提供了动态多态性，可以通过接口来处理不同类型的对象，而不需要知道它们的具体类型。这在某些场景下非常有用，例如处理不同类型的请求、消息或处理策略。</p><p>例如，定义一个空接口 <code>interface&#123;&#125;</code>，你可以使用它来处理任意类型的对象：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PrintValue</span><span class="params">(i <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">    fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PrintValue(<span class="number">42</span>)       <span class="comment">// 打印 42</span></span><br><span class="line">PrintValue(<span class="string">&quot;hello&quot;</span>)  <span class="comment">// 打印 hello</span></span><br><span class="line">PrintValue(<span class="literal">true</span>)     <span class="comment">// 打印 true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这种基于接口的动态类型特性，使得代码可以处理更多种类的输入。一般会结合<code>switch</code>根据输入数据的数据类型来执行不同的操作。</p><h3 id="延迟实现的灵活性"><a class="markdownIt-Anchor" href="#延迟实现的灵活性"></a> 延迟实现的灵活性</h3><p>接口不仅仅是为了当前的实现考虑。它还允许程序设计者在将来的实现中扩展程序功能。例如，你可以设计好接口但暂时不去实现，或者根据用户需求在未来实现更多接口。</p><h2 id="为什么提倡面向接口编程"><a class="markdownIt-Anchor" href="#为什么提倡面向接口编程"></a> 为什么提倡面向接口编程？</h2><p>从初学C语言的面向过程编程，到C++、Python的面向对象编程，最后到Go的面向接口编程，可以看出这里面编程的思想是逐步递进的关系。为什么要提倡面向接口编程，原因在于面向对象编程出现了一些无法避免的缺陷。</p><p>先来谈谈为什么要面向接口编程吧。</p><h3 id="面向接口编程的好处"><a class="markdownIt-Anchor" href="#面向接口编程的好处"></a> 面向接口编程的好处</h3><p>正如前文所提到的，使用接口编程最明显的好处在于<strong>解耦</strong>。说穿了，也就是“方便维护和扩展”，因为“规范和实现分离”。对于平面化的组合接口编程来说，这是对层级化的继承对象编程得天独厚的优势。</p><p>但是实体类也未见得做不到这一点。我们完全可以让顶级实体类只提供空方法，而留待具体实现类提供实现的细节。但是，这么做会导致顶级实体类对子类的控制力减弱，因为顶级实体类无法规定方法的实现。用抽象类可以吗？一个只定义了抽象方法的抽象类在本质上和接口是没有区别的。</p><p>那么为什么要用接口而不使用抽象类编程呢？这就要涉及到面对对象编程无法避免的缺陷问题了。</p><h3 id="类继承的缺陷"><a class="markdownIt-Anchor" href="#类继承的缺陷"></a> 类继承的缺陷</h3><p>先行者们发现，类继承有一些无法避免的缺陷。</p><h4 id="父类的实现细节会影响子类的行为"><a class="markdownIt-Anchor" href="#父类的实现细节会影响子类的行为"></a> 父类的实现细节会影响子类的行为</h4><p>这句话看上去是理所当然的，但如果父类的实现导致子类出现了bug呢？</p><blockquote><p>要知道，封装可是面向对象最引以为傲的卖点之一，其一大目标就是：你不用管我的具体实现逻辑，只需要知道传入参数和返回值就行了。但这个目标却被面向对象的另一引以为傲的卖点——继承，打破了。</p></blockquote><p>导致子类出现bug的原因来自于类继承编程中重要却潜在冲突的两个要点：封装和继承。一般来说，封装隐藏了程序的具体实现细节，提供了一层新的抽象；继承则允许程序员在封装好的代码的基础上进行拓展，由于封装隐藏了具体的代码实现，所以程序员能够较为容易的上手共同开发。</p><p>但是，继承其实破坏了封装。<strong>封装</strong>的核心理念是隐藏类的实现细节，让使用者只需关心输入和输出，而不必了解内部的实现逻辑。然而，<strong>继承</strong>引入了问题，因为子类不仅依赖父类的接口（即方法的签名），还依赖父类的具体实现。这样一来，父类的实现细节变得对子类是透明的，这<strong>破坏了封装</strong>的初衷。</p><p>在设计良好的面向对象系统中，子类通常应该只依赖父类的接口（即公开方法），而不应该依赖父类的实现细节。可实际上，由于子类会继承并使用父类的方法，子类不可避免地依赖了父类的实现逻辑。这意味着，如果父类的实现发生改变（即使父类内部逻辑改变没有违反其方法的契约），子类的行为也可能随之发生变化，从而引发<strong>潜在的Bug</strong>。</p><p>这种问题在继承体系中非常常见，因为子类可能会<strong>无意中依赖</strong>父类的特定实现细节，而当这些细节发生变化时，子类的行为可能会变得不可预测。</p><h4 id="子类的实现可能会影响父类"><a class="markdownIt-Anchor" href="#子类的实现可能会影响父类"></a> 子类的实现可能会影响父类</h4><blockquote><p>如果说子类被父类影响还算情有可原的话，那么父类被子类影响实在是有点说不过去了。</p></blockquote><p>在 Java 等面向对象语言中，父类的构造器在执行时，可能会调用父类中定义的方法。然而，如果这些方法在子类中被覆盖，那么当父类构造器调用该方法时，实际上调用的是<strong>子类的实现</strong>。此时，<strong>子类的构造器尚未完全执行，子类的成员变量尚未被初始化</strong>，这会导致严重的错误。</p><p>这暴露了面向对象编程中的一个常见问题，即在<strong>父类的构造器中调用可被子类覆盖的方法</strong>可能导致意外的行为，特别是在父类构造期间子类的状态尚未完全初始化的情况下。这会引发一系列问题。</p><h3 id="怎么办"><a class="markdownIt-Anchor" href="#怎么办"></a> 怎么办？</h3><p>答案是使用接口编程。</p><blockquote><p>因为接口可以避免类继承的所有问题。</p><p>纵观类继承所引起的问题，都是由于其可被实例化造成的，而接口是不可被实例化的，所以其可以避免所有这些问题。由于其不能被实例化，所以不需要在其内部定义非static或非public的属性，进而导致定义非final的属性也是不恰当的（因为一个随时可被任何人随意修改的属性不符合面向对象的价值观）；由于其不能被实例化，所以也不需要定义方法的实现，进而导致类可以实现多个接口而不至于担心不同接口出现相同方法签名却有不同实现的冲突</p></blockquote><p>总结一下，<strong>就是类可以被实例化，而接口不会</strong>。从而避免了一系列因类继承引起的一切问题。</p><h2 id="接口的优劣"><a class="markdownIt-Anchor" href="#接口的优劣"></a> 接口的优劣</h2><p>在设计哲学这一章，我们小结一下接口的优缺点。</p><p>优点：</p><ul><li><strong>简洁和灵活</strong>：接口提供了简洁的多态性，避免了复杂的类层次结构。</li><li><strong>松耦合设计</strong>：通过接口，代码可以变得更加模块化，便于测试和扩展。</li><li><strong>隐式实现减少代码依赖</strong>：不需要显式声明类型实现了接口，代码更加灵活且不需要维护冗余的关系。</li></ul><p>缺点：</p><ul><li><strong>没有继承的代码复用</strong>：没有继承意味着 Go 缺少一种直接的代码复用机制。在某些情况下，继承可以减少重复代码的编写，而 Go 依赖组合来实现类似功能。</li><li><strong>灵活但不够强制</strong>：隐式实现虽然增加了灵活性，但缺乏 OOP 中的显式关系，有时可能使得代码的结构性和可读性稍弱。</li></ul><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2><p><a href="https://blog.csdn.net/qq_33240556/article/details/136147169">什么是耦合？_计算机中的耦合-CSDN博客</a></p><p><a href="https://www.zhihu.com/question/511958588/answer/3137705299">(3 封私信) 为什么go和rust语言都舍弃了继承？ - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/jifengnan/article/details/85411115">为什么提倡面向接口编程_at father.(father. java:2)-CSDN博客</a></p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/d367a38091cb770dfa360d3dbf289740.png" alt="d367a38091cb770dfa360d3dbf289740" /></p>]]></content>
    
    
    <summary type="html">Go学习的番外篇！探讨Go中接口的设计理念。</summary>
    
    
    
    <category term="Go!Go!Go!" scheme="http://example.com/categories/Go-Go-Go/"/>
    
    
    <category term="Go" scheme="http://example.com/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>9月总结·2024</title>
    <link href="http://example.com/posts/186ad852eeaf/"/>
    <id>http://example.com/posts/186ad852eeaf/</id>
    <published>2024-09-30T11:25:12.000Z</published>
    <updated>2024-09-30T11:25:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="9月总结2024"><a class="markdownIt-Anchor" href="#9月总结2024"></a> 9月总结·2024</h1><p>今年是在大学的第三年。</p><p>恍惚之间竟然大三了，而大一刚踏入校园大门的那一刻却仿佛还历历在目。不知不觉，我距离毕业离开校园的日子已经相较进入大学时更加接近了。你问我做好准备了吗？并不尽然。不过，谁又能总是以万全之态迈向未来呢？正因此时并不完美，现在的我才格外完美。</p><p>浅浅的总结一下暑假+9月吧。</p><h2 id="暑假篇"><a class="markdownIt-Anchor" href="#暑假篇"></a> 暑假篇</h2><p>没错，暑假不出意料的摸了：）</p><p>7月沉迷老头环，8月爆肝黑神话，两个月暑假就这么奉献给两款3A了。该说不说，还是挺快乐的。不过倒也不是完全在打游戏，7月中旬参加了一个进入省级决赛的互联网+项目组，我的日常就是按照API文档实现几个前端接口，然后做好产品交付部分的PPT。没办法，再深层了我也接触不到。整个项目都是立于实验室的一个博士师兄上的，作为一个划水蹭奖的本科生，恐怕也就只能做这么多了。说是项目保底省铜，不过即使已经过了上一学年的综测评定这个奖仍然前途未卜。罢了罢了，就算在下一学年的吧。</p><p>8月下旬和朋友一起去打了羊城杯，许久不学web再打CTF还是相当吃力的，不过本着友谊第一比赛第二的原则还是坚持了下来。虽说技术没长进多少，但却接触到了一些难以明说的利益圈子。对此我也并不感到很吃惊，我早就预感到世界就是个巨大的草台班子。只能说，我并不后悔做出离开网安这个行业的决定，兴许以后会出于兴趣再去打打比赛，但这个圈子水太深，浅尝辄止即可。</p><p>虽然这个暑假没学多少技术，但总归还是挺开心的。倘若是明年的暑假，势必要辛苦许多吧。</p><h2 id="比赛篇"><a class="markdownIt-Anchor" href="#比赛篇"></a> 比赛篇</h2><p>草草交代完暑假，就来聊聊9月份的事情吧。</p><h3 id="全国大学生数学建模竞赛"><a class="markdownIt-Anchor" href="#全国大学生数学建模竞赛"></a> 全国大学生数学建模竞赛</h3><p>没想到上个学期的校赛竟然出人意料的发挥不错，进入了推荐名单。于是乎，9月份就得正式参加国赛了。先说说比赛情况吧，应该是保三冲二了，固然说不上多好。不过我本来也缺乏对建模系统的学习，这个结果到也还说得上是情理之中，只是怕拖了两位数学专业朋友的后腿。这次比赛的队友人都很好，也愿意在我不懂的时候手把手教我思路和计算，我也实打实的感觉学到了点东西。比赛期间大家都很努力，尤其周末两天我全程泡在讨论室里，饭都是队友帮忙带的，字面意义上的在图书馆坐一天不动。That’s crazy huh，it never happens again.</p><p>总的来说，这应该是我参加的最后一次数模比赛了吧，感觉意外的还不错。</p><h2 id="书籍篇"><a class="markdownIt-Anchor" href="#书籍篇"></a> 书籍篇</h2><h3 id="程序员的自我修养"><a class="markdownIt-Anchor" href="#程序员的自我修养"></a> 程序员的自我修养</h3><p>一本好书，深入浅出的介绍了装载、链接与库的知识，对计算机编译这块的理解很透彻。不过我目前还只读了前两三章就暂时搁置了，因为它的内容有点太偏底层，和我目前在研究的网络开发相关性不大。</p><p>可以说是一本关于计组和操作系统的启蒙书籍，对新手程序员的帮助很大。不得不感慨计算机类的很多知识都是触类旁通的，先前学习Go的接口概念花了很长时间去理解，在阅读完这本书关于系统API的内容后感觉豁然开朗。虽然两者严格来说并不是同一概念，但设计的底层思想是相通的。同时这本书也简单谈到了死锁等操作系统层面上的知识，这又于我在Go中的并发编程相关联。总之，是一本值得一读的好书。如果你平时研究计算机底层，比如PWN，更是不容错过。</p><h3 id="操作系统概论"><a class="markdownIt-Anchor" href="#操作系统概论"></a> 操作系统概论</h3><p>操作系统课的代餐。学校还是一副死德行，精华的复习PPT藏着掖着，上课只管水课时。于是乎我就按照课程推荐的课本选了这本黑皮书来看，我觉得黑皮书的通病都是过于神神叨叨，和奉行极简主义的学校PPT反其道而行之。作为一本百科类的科普读物快速的过一遍最好，但也很难说真正学到了什么东西，大部分知识都是入脑即忘。缺乏系统的总结和归纳，很难把操作系统学好。</p><p>我想，对于这种专业课来说，真要学起来还得看期末周速通吧……</p><h3 id="go语言圣经"><a class="markdownIt-Anchor" href="#go语言圣经"></a> Go语言圣经</h3><p>虽然暑假没看多少，但是9月份还是立刻把这本书通了。不过也没有读完，我差不多把Go的接口和共享变量编程看了一遍，并且成功搓出了第一个网络编程——一个简陋的聊天室。不过后续关于Go自带的工具包和调试以及底层编程我暂时先把它们丢在了一边，反正一时半会也用不着。关于接口和基于共享变量的并发编程，不久之后会出一篇总结作为我对Go语言学习的休止符。接着计划再用Go做一个小小的项目，彻底为Go的学习画上一个句号（暂时）。</p><h3 id="go-web编程"><a class="markdownIt-Anchor" href="#go-web编程"></a> Go Web编程</h3><p>友人推荐的一本Go Web编程类书籍，只看了两章就暂且搁置了。只想吐槽Go的template模板太抽象了，看得我眉头大皱。</p><p>还是老老实实找个视频看吧</p><h3 id="霍乱时期的爱情"><a class="markdownIt-Anchor" href="#霍乱时期的爱情"></a> *霍乱时期的爱情</h3><p>很复杂，看完不知道该说什么好。夸张点说，把我对爱情的概念击得粉碎。</p><p>霍乱这本书，几乎把爱情的所有形式都一一穷举了一遍。你身边的，你能想到的，几乎都可以在书里找到原型。哪一种才是真正的爱情呢？答案是，这些都可以是爱情。两厢厮守是爱情，红杏出墙是爱情；执着等待是爱情，放荡滥交是爱情；举案齐眉是爱情，卑微讨好是爱情；恪守底线是爱情，打破原则是爱情；守寡服丧是爱情，放情纵欲是爱情；追求不懈终于抱得美人归是爱情，望眼欲穿最后屈服于现实还是爱情。可以预见的是，这些故事倘若进入主流文学中，必将激起堆叠如山的众怒和辱骂，并伴随着最为不堪入耳的诋毁。但大师就是大师，马尔克斯可根本不考虑这些。严肃文学最喜欢做的事情，就是把道德这块遮羞布扯得稀烂，直面背后的人性与现实。</p><h3 id="挪威的森林"><a class="markdownIt-Anchor" href="#挪威的森林"></a> *挪威的森林</h3><p>最喜欢的一本书之一，无论几遍都读不腻。</p><h3 id="络新妇之理"><a class="markdownIt-Anchor" href="#络新妇之理"></a> *络新妇之理</h3><p>友人推荐的新书，还没来得及细看。第一印象是谜语人，其次是名字好难记。</p><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><h3 id="软著"><a class="markdownIt-Anchor" href="#软著"></a> 软著</h3><p>蹉跎了两个月的任务，终归还得等到开学后来办。只想吐槽申办软著的流程之繁琐与麻烦，不比镇关西把猪肉切成臊子简单。要走代理吧，那边又狮子大开口要收1000代理费，而且接受十分团购不单做，不接受砍价，只好自己慢慢来。</p><p>如果能申请到能拿一个第一著作权，至于用处多大还有待考证。</p><h3 id="综测"><a class="markdownIt-Anchor" href="#综测"></a> 综测</h3><p>评的是上个学年的综测，算是对我的大二做一个小小的总结吧。光看排名的话，还是令人满意的，相较于去年又前进了一名，奖学金应该是稳了。不过细看的话，又免不了一番长吁短叹。我的绩点其实并不理想，甚至于说是炸裂的程度，但综测成绩却名列前茅，不得不让人遐想：假如我绩点能再高一点，岂不是稳拿国奖？不过可惜，如果永远只是如果，当不得真。换个角度来看，能一路逆袭到此，也是我当了一年牛马应得的奖励。有人说综测水分很大说明不了什么，综测不本来就是靠水的吗。既然大家都在水，水的高一点也不容易……不管怎么说，能继续拿奖学金就是对我过去一年的最好肯定，我也难得可以开心一会了。</p><h2 id="随便写点"><a class="markdownIt-Anchor" href="#随便写点"></a> 随便写点</h2><p>其实如果参考我过去的每月总结的话，可以看出来我这个月其实没干多少事，而我本人的看法也是一样。而我没干多少事的原因也很简单，因为：我也不知道我该干什么了。</p><p>回头看过去的两年，其实走了相当多的弯路，做了很多费力不讨好的事，错过了很多唾手可得的机会，和很多事情擦肩而过。兜兜转转，事到如今，我竟然也弄丢了该前进的方向。</p><p>迷茫，大概就是9月份的主旋律吧。</p><p>我提起书包踏入教学楼，魂不守舍的坐在座位上，既听不清老师在课堂上叽里咕噜何物，也不知道自己打开电脑该自学些什么东西。最后干脆一不做二不休，听不进去的课干脆不去上了。可坐在寝室和坐在教室也并不不同，点几个知乎刷几个视频，全然不知该做些什么好。看着朋友们钻研技术，做项目的做项目，打比赛的打比赛，我就像是洛夫克拉夫特笔下的异乡人，跟个无头苍蝇似的乱撞。</p><p>步入大四的学长们也找到了自己的路，有保研去华科的，有收到字节offer的，而我根本没有信心与勇气敢于他们并列。两相煎熬之下，使得我愈加郁闷。</p><p>事情的转折来自于另一位朋友。</p><p>彼时他刚刚建立起自己的博客，兴致勃勃的给博客搭载美化，上传笔记，并积极的招揽学弟学妹们前来参观学习。一股本能的冲动涌上心头，我也想要和别人宣传自己的博客。但这个想法刚刚露头就被我否决了，我，没有自信。其实在博客写了那么多字，我却有些不敢再轻易点开它，我害怕在颓废的当下，会瞥见那个过去意气风发的自己，那个兴致勃勃的给博客搭载美化，上传笔记，想方设法引人参观自己博客的自己。那时的我是多么快乐啊，一瞬间我就明白了人们为何如此热衷于怀旧的原因：无非是过去的自己曾经拥有无限可能，而如今生活却只剩下一地鸡毛而已。</p><p>不过，我终究也还是开始动起来了。</p><p>不管是出于幼稚的好强心也好，还是潜移默化的夫唱妇随也罢，我也决定给自己的博客加点美化。结果是一发不可收拾，只要动起来，我好似又有了无穷多的精力，仿佛找回了某种决心，心中快速给自己规划出了图画。</p><p>“曾经我如此衰老，如今我才风华正茂”，黑神话悟空的制作人冯骥在接受采访时如是说。黑神话的开发用了八年，而我却在短短一个月的时间内体会到了这句话的精髓。虽然我仍然无法排遣对未来的忧愁，但我如今，当下，眼前，只想要动起来，别无他想。</p><p>进入大三后，我要退出那些繁琐的比赛，还给自己一个清静的大学生活。船会在河流的带动下往前航行，而人应该要自己动起来向前走而非依靠于某些外物推动。从今往后，我的每月总结上出现的事情应该会越来越少，但这说明不了什么。贪多嚼不烂，自己有所收获才是真的。哪怕下学期拿不到奖学金也罢，是时候看长远一些了。</p><p>作为启动的时间来说，一个月可能有些长了。不过只要计算机还能继续运行，多重启几次又何妨？感谢我的朋友们，没有他们我也许还会继续消沉下去吧。船到桥头自然直，好死不如赖活着，不如莫问前程，且听风吟。</p><p>最后说一句，我英语六级第一次就过了。</p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/26424396_p0.jpg" alt="26424396_p0" /></p>]]></content>
    
    
    <summary type="html">9月份的个人总结</summary>
    
    
    
    <category term="月度总结" scheme="http://example.com/categories/%E6%9C%88%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成指北（七）</title>
    <link href="http://example.com/posts/1c2342ee510b/"/>
    <id>http://example.com/posts/1c2342ee510b/</id>
    <published>2024-09-27T03:43:26.000Z</published>
    <updated>2024-09-27T03:43:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第十章-控制单元的设计"><a class="markdownIt-Anchor" href="#第十章-控制单元的设计"></a> 第十章 控制单元的设计</h2><blockquote><p>就是一道大题<br />最关键的微程序设计指令<br />画出微指令码点</p></blockquote><p>学习完控制单元的结构后，我们来学习控制单元的两种设计方法：</p><ul><li>组合逻辑设计</li><li>微程序设计</li></ul><p>这也是计算机组成原理的最后一个组成部分。</p><h3 id="组合逻辑设计"><a class="markdownIt-Anchor" href="#组合逻辑设计"></a> 组合逻辑设计</h3><h4 id="cu外特性"><a class="markdownIt-Anchor" href="#cu外特性"></a> CU外特性</h4><p>要理解组合逻辑设计的方式，我们先给出CU的外特性图并且一一说明。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706141431460.png" alt="image-20240706141431460" style="zoom:50%;" /><p>其中，CU发出的<strong>控制信号的先后关系与时间点的确定</strong>，由节拍发生器确定。如果你忘记了节拍的概念，去复习第九章的多级时序系统，或者参考下图。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706141948426.png" alt="image-20240706141948426" style="zoom:33%;" /><p>而CU<strong>产生什么控制命令</strong>，依赖于：</p><ol><li>操作码译码输出，一条指令，对应仅有一条线有效。也就是图中的操作码译码部分，n位操作码对应2<sup>n</sup>条指令，所有译码器输出2<sup>n</sup>根线到CU。</li><li>标志，如跳转条件等也可以控制CU输出什么样的微指令</li></ol><p>在一个节拍内，C<sub>0</sub>到C<sub>k</sub>会有一个或几个有效，即产生的微指令。</p><h4 id="微操作的节拍安排"><a class="markdownIt-Anchor" href="#微操作的节拍安排"></a> 微操作的节拍安排</h4><p>回顾了CU外特性后，我们来讨论各种微操作如何进行安排。</p><p>假设我们采取同步控制的方式，且认为一个机器周期内含3个节拍，CPU的内部采取非总线方式设计。微操作按照执行的顺序安排在给定的节拍中，控制计算机的各个组成部分稳定协调的工作。一个时钟周期有多少个节拍，跟周期中需要产生控制信号的数量，复杂程度，控制信号之间是否能并行都有关</p><p>在安排微操作时序时，我们要遵循三个原则：</p><ol><li>微操作的<strong>先后顺序</strong>不得随意更改</li><li><strong>被控对象不同</strong>的微操作尽量安排在一个节拍内完成，即<strong>可以并行</strong>的微操作，没有先后顺序的操作</li><li><strong>占用时间较短</strong>的微操作尽量安排在一个节拍内完成，并<strong>允许有先后顺序</strong>，比如一个在上升沿，一个在下降沿</li></ol><p>基于以上三大原则，我们来重新回顾取指周期、间址周期、执行周期、中断周期的节拍安排。</p><h5 id="取值周期微操作的节拍安排"><a class="markdownIt-Anchor" href="#取值周期微操作的节拍安排"></a> 取值周期微操作的节拍安排</h5><ol><li><p>T<sub>0</sub></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>C</mi><mo>→</mo><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">PC\rightarrow MAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>→</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">1\rightarrow R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>基于原则二，取指地址送入MAR和控制寄存器发出读信号可以并行。</p></li><li><p>T<sub>1</sub></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">(</mo><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">M(MAR)\rightarrow MDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mi>C</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo>→</mo><mi>P</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">(PC)+1\rightarrow PC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></p><p>基于原则二，将数据从内存取回和递增PC可以并行</p></li><li><p>T<sub>2</sub></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>D</mi><mi>R</mi><mo>→</mo><mi>I</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">MDR\rightarrow IR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>P</mi><mo stretchy="false">(</mo><mi>I</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>I</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">OP(IR)\rightarrow ID</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span></p><p>基于原则三，由于MDR将指令送入IR是在CPU内部传输，故耗时短，和指令译码安排在同一节拍</p></li></ol><h5 id="间址周期微操作的节拍安排"><a class="markdownIt-Anchor" href="#间址周期微操作的节拍安排"></a> 间址周期微操作的节拍安排</h5><ol><li><p>T0</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>d</mi><mo stretchy="false">(</mo><mi>I</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">Ad(IR)\rightarrow MAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>→</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">1\rightarrow R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p></li><li><p>T2</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">(</mo><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">M(MAR)\rightarrow MDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p></li><li><p>T3</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>D</mi><mi>R</mi><mo>→</mo><mi>A</mi><mi>d</mi><mo stretchy="false">(</mo><mi>I</mi><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">MDR\rightarrow Ad(IR)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></p></li></ol><h5 id="执行周期微操作的节拍安排"><a class="markdownIt-Anchor" href="#执行周期微操作的节拍安排"></a> 执行周期微操作的节拍安排</h5><p>我们来分析执行周期中介绍的十条微指令的节拍安排，他们中的大部分都十分简单，只消一条微指令足矣。故这里直接给出总结性的表格。</p><table><thead><tr><th style="text-align:center">编号</th><th style="text-align:center">指令</th><th style="text-align:center">T0</th><th style="text-align:center">T1</th><th style="text-align:center">T2</th></tr></thead><tbody><tr><td style="text-align:center">①</td><td style="text-align:center">CLA</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">0 ⟶ AC</td></tr><tr><td style="text-align:center">②</td><td style="text-align:center">COM</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">AC ⟶ AC</td></tr><tr><td style="text-align:center">③</td><td style="text-align:center">SHR</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">L(AC) ⟶ R(AC)<br>AC ⟶ AC</td></tr><tr><td style="text-align:center">④</td><td style="text-align:center">CSL</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">R(AC) ⟶ L(AC)<br>AC ⟶ AC</td></tr><tr><td style="text-align:center">⑤</td><td style="text-align:center">STP</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">0 ⟶ G</td></tr><tr><td style="text-align:center">⑥</td><td style="text-align:center">ADD X</td><td style="text-align:center">Ad(IR) ⟶ MAR<br>1 ⟶ R</td><td style="text-align:center">M(MAR) ⟶ MDR</td><td style="text-align:center">(AC) + (MDR) ⟶ AC</td></tr><tr><td style="text-align:center">⑦</td><td style="text-align:center">STA X</td><td style="text-align:center">Ad(IR) ⟶ MAR<br>1 ⟶ W</td><td style="text-align:center">AC ⟶ MDR</td><td style="text-align:center">MDR ⟶ M(MAR)</td></tr><tr><td style="text-align:center">⑧</td><td style="text-align:center">LDA X</td><td style="text-align:center">Ad(IR) ⟶ MAR<br>1 ⟶ R</td><td style="text-align:center">M(MAR) ⟶ MDR</td><td style="text-align:center">MDR ⟶ AC</td></tr><tr><td style="text-align:center">⑨</td><td style="text-align:center">JMP X</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">Ad(IR) ⟶ PC</td></tr><tr><td style="text-align:center">⑩</td><td style="text-align:center">BAN X</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">A₀·Ad(IR) + A₀·PC ⟶ PC</td></tr></tbody></table><p>CLA等这些简单指令不一定要放在T<sub>2</sub>中，T<sub>0</sub>~T<sub>2</sub>均可。</p><h5 id="中断周期微操作的节拍安排"><a class="markdownIt-Anchor" href="#中断周期微操作的节拍安排"></a> 中断周期微操作的节拍安排</h5><p>我们来回忆一下中断周期的三个操作：</p><ol><li>保存断点</li><li>形成中断服务程序入口地址，假设用硬件向量法实现</li><li>关中断，即中断允许触发器置0</li></ol><p>基于以上步骤，我们来安排中断周期的微指令节拍。</p><ol><li><p>T<sub>0</sub></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>→</mo><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">0\rightarrow MAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>→</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">1\rightarrow W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span></p><p>硬件关中断</p></li><li><p>T<sub>2</sub></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>C</mi><mo>→</mo><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">PC\rightarrow MDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p></li><li><p>T<sub>3</sub></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>D</mi><mi>R</mi><mo>→</mo><mi>M</mi><mo stretchy="false">(</mo><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">MDR\rightarrow M(MAR)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>向量地址</mtext><mo>→</mo><mi>P</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">向量地址\rightarrow PC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></p><p>中断隐指令完成</p></li></ol><h4 id="组合逻辑设计步骤"><a class="markdownIt-Anchor" href="#组合逻辑设计步骤"></a> 组合逻辑设计步骤</h4><p>“非常简单”，只要用逻辑表达式写出任何一个控制信号产生的条件，再进行硬件实现就可以了。</p><p>所以我们首先需要列出操作时间表，把所有可能的微操作列在微操作命令信号列表里。</p><h5 id="列出操作时间表"><a class="markdownIt-Anchor" href="#列出操作时间表"></a> 列出操作时间表</h5><p>列出组合程序逻辑表格如下</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/%E7%BB%84%E5%90%88%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%A1%A82.drawio.svg" alt="组合程序设计表2.drawio" /></p><h5 id="写出微操作命令的最简表达式"><a class="markdownIt-Anchor" href="#写出微操作命令的最简表达式"></a> 写出微操作命令的最简表达式</h5><p>根据表格，结合数字逻辑的知识，很容易写出并化简微操作指令对应的最简表达式。</p><p>比如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">(</mo><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">M(MAR)\rightarrow MDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mrow><mi mathvariant="normal">F</mi><mi mathvariant="normal">E</mi></mrow><mo>⋅</mo><msub><mi>T</mi><mn>1</mn></msub><mo>+</mo><mrow><mi mathvariant="normal">I</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">D</mi></mrow><mo>⋅</mo><msub><mi>T</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mrow><mi mathvariant="bold">A</mi><mi mathvariant="bold">D</mi><mi mathvariant="bold">D</mi></mrow><mo>+</mo><mrow><mi mathvariant="normal">S</mi><mi mathvariant="normal">T</mi><mi mathvariant="normal">A</mi></mrow><mo>+</mo><mrow><mi mathvariant="normal">L</mi><mi mathvariant="normal">D</mi><mi mathvariant="normal">A</mi></mrow><mo>+</mo><mrow><mi mathvariant="normal">J</mi><mi mathvariant="normal">M</mi><mi mathvariant="normal">P</mi></mrow><mo>+</mo><mrow><mi mathvariant="bold">B</mi><mi mathvariant="bold">A</mi><mi mathvariant="bold">N</mi></mrow><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>+</mo><mrow><mi mathvariant="normal">E</mi><mi mathvariant="normal">X</mi></mrow><mo>⋅</mo><msub><mi>T</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mrow><mi mathvariant="bold">A</mi><mi mathvariant="bold">D</mi><mi mathvariant="bold">D</mi></mrow><mo>+</mo><mrow><mi mathvariant="normal">L</mi><mi mathvariant="normal">D</mi><mi mathvariant="normal">A</mi></mrow><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><msub><mi>T</mi><mn>1</mn></msub><mo stretchy="false">{</mo><mrow><mi mathvariant="normal">F</mi><mi mathvariant="normal">E</mi></mrow><mo>+</mo><mrow><mi mathvariant="normal">I</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">D</mi></mrow><mo stretchy="false">(</mo><mrow><mi mathvariant="bold">A</mi><mi mathvariant="bold">D</mi><mi mathvariant="bold">D</mi></mrow><mo>+</mo><mrow><mi mathvariant="normal">S</mi><mi mathvariant="normal">T</mi><mi mathvariant="normal">A</mi></mrow><mo>+</mo><mrow><mi mathvariant="normal">L</mi><mi mathvariant="normal">D</mi><mi mathvariant="normal">A</mi></mrow><mo>+</mo><mrow><mi mathvariant="normal">J</mi><mi mathvariant="normal">M</mi><mi mathvariant="normal">P</mi></mrow><mo>+</mo><mrow><mi mathvariant="normal">B</mi><mi mathvariant="normal">A</mi><mi mathvariant="normal">N</mi></mrow><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>+</mo><mrow><mi mathvariant="bold">E</mi><mi mathvariant="bold">X</mi></mrow><mo stretchy="false">(</mo><mrow><mi mathvariant="bold">A</mi><mi mathvariant="bold">D</mi><mi mathvariant="bold">D</mi></mrow><mo>+</mo><mrow><mi mathvariant="bold">L</mi><mi mathvariant="bold">D</mi><mi mathvariant="bold">A</mi></mrow><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}=\mathrm{FE} \cdot T_{1}+\mathrm{IND} \cdot T_{1}(\mathbf{A D D}+\mathrm{STA}+\mathrm{LDA}+\mathrm{JMP}+\mathbf{B A N}) \\+\mathrm{EX} \cdot T_{1}(\mathbf{A D D}+\mathrm{LDA}) \\=T_{1}\{\mathrm{FE}+\mathrm{IND}(\mathbf{A D D}+\mathrm{STA}+\mathrm{LDA}+\mathrm{JMP}+\mathrm{BAN}) \\+\mathbf{E X}(\mathbf{A D D}+\mathbf{L D A})\} \\\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.800000000000001em;vertical-align:-2.1500000000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathrm">F</span><span class="mord mathrm">E</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">I</span><span class="mord mathrm">N</span><span class="mord mathrm">D</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">A</span><span class="mord mathbf">D</span><span class="mord mathbf">D</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">S</span><span class="mord mathrm">T</span><span class="mord mathrm">A</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">L</span><span class="mord mathrm">D</span><span class="mord mathrm">A</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">J</span><span class="mord mathrm">M</span><span class="mord mathrm">P</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathbf">B</span><span class="mord mathbf">A</span><span class="mord mathbf">N</span></span><span class="mclose">)</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">+</span><span class="mord"><span class="mord mathrm">E</span><span class="mord mathrm">X</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">A</span><span class="mord mathbf">D</span><span class="mord mathbf">D</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">L</span><span class="mord mathrm">D</span><span class="mord mathrm">A</span></span><span class="mclose">)</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathrm">F</span><span class="mord mathrm">E</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">I</span><span class="mord mathrm">N</span><span class="mord mathrm">D</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">A</span><span class="mord mathbf">D</span><span class="mord mathbf">D</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">S</span><span class="mord mathrm">T</span><span class="mord mathrm">A</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">L</span><span class="mord mathrm">D</span><span class="mord mathrm">A</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">J</span><span class="mord mathrm">M</span><span class="mord mathrm">P</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathrm">B</span><span class="mord mathrm">A</span><span class="mord mathrm">N</span></span><span class="mclose">)</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">+</span><span class="mord"><span class="mord mathbf">E</span><span class="mord mathbf">X</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">A</span><span class="mord mathbf">D</span><span class="mord mathbf">D</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathbf">L</span><span class="mord mathbf">D</span><span class="mord mathbf">A</span></span><span class="mclose">)</span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></p><h5 id="画出逻辑图"><a class="markdownIt-Anchor" href="#画出逻辑图"></a> 画出逻辑图</h5><p>根据最简表达式，就可以做出对应的硬件连接图。</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706160526603.png" alt="image-20240706160526603" /></p><h5 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h5><p>组合逻辑设计，这种方法即首先列出操作指令表，然后对指令对应的最简表达式，最后根据表达式作图。</p><p>这种方法有以下三个特点：</p><ul><li>思路清晰，简单明了，任何一个控制信号都可以写出逻辑表达式</li><li>庞杂，调试困难，修改困难（因为都是硬件电路）</li><li>速度快，RISV精简指令集即采用这种设计方法；CPU支持整型运算和浮点运算，其中整型运算也采用组合逻辑CU</li></ul><h3 id="微程序设计"><a class="markdownIt-Anchor" href="#微程序设计"></a> 微程序设计</h3><p>微程序设计的方法是由1951年英国剑桥大学教授Wilkes提出的，这种方法非常适合指令扩展。</p><p>我们知道，不同节拍下发出的控制命令是有先后顺序的，控制命令实际上就是一个或者几个电信号，由这些电信号去控制部件执行相应的操作。</p><p>微程序设计的思想就是把这些电信号储存起来，存储器存储的0或1数据，代表一个节拍下组成控制命令的高低电平信号，我们可以利用这些高低电平信号来表示一个节拍中我们要发出的控制命令。所以我们把微指令保存在ROM中，执行时一条一条读出，微指令的先后顺序就是微操作执行的先后顺序，根据每条微指令有效信号的个数和位数发出相应的微操作命令。</p><p>因此，微程序设计又称<strong>存储逻辑方式</strong>，即把逻辑信号存储在存储器中。</p><p>可以参照下图理解：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706163101937.png" alt="image-20240706163101937" style="zoom:50%;" /><p>一个指令周期包含多个机器周期，一条机器指令对应一个微程序，微程序对应的是一系列微指令，一条微指令又对应一系列的微操作命令。</p><h4 id="微程序控制单元基本框图"><a class="markdownIt-Anchor" href="#微程序控制单元基本框图"></a> 微程序控制单元基本框图</h4><p>以下是微程序控制单元设计的基本框图。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706163801863.png" alt="image-20240706163801863" style="zoom:50%;" /><ul><li>核心是控制存储器，保存微指令。执行时要知道微指令的地址，地址保存在控制存储器地址寄存器（CMAR）中，读出的微指令放入CMDR。</li><li>每条指令执行阶段对应的微操作是不一样的，所以微程序首地址也是不一样的。</li><li>根据执行的指令，确定微程序在控制存储器中的首地址，所以还需要微地址形成部件。</li><li>顺序逻辑：CMAR中的地址有多个来源，用顺序逻辑选择一个正确的来源。</li><li>操作控制：一串0和1，其中1代表对应的微操作命令。</li><li>顺序控制：给出下一条微指令的地址</li></ul><p>整体操作类似于计算机访存，都有MAR（CMAR）和MDR（CMDR）寄存器。只不过控制存储器在CPU内部，所以访问速度会比一般的访存更快。</p><p>在控制存储器中，结构框图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706164304889.png" alt="image-20240706164304889" style="zoom:50%;" /><p>M+2的下地址不一定是M+3，如果直接进入执行周期，根据指令译码才能指导是什么指令，该执行哪里的微程序，需要依赖微地址形成部件得到下条微指令地址，所以M+2的下地址为XXX。</p><h4 id="工作原理"><a class="markdownIt-Anchor" href="#工作原理"></a> 工作原理</h4><p>我们通过执行以下指令来演示微程序设计的工作原理。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LDA X</span><br><span class="line">ADD Y</span><br><span class="line">STA Y</span><br><span class="line">STP</span><br></pre></td></tr></table></figure><h5 id="取指阶段"><a class="markdownIt-Anchor" href="#取指阶段"></a> 取指阶段</h5><p>此阶段执行取指微程序</p><ol><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>→</mo><mi>C</mi><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">M\rightarrow CMAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>M</mi><mo stretchy="false">(</mo><mi>C</mi><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>C</mi><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">CM(CMAR)\rightarrow CMDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">CMDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>发出命令</p><p>形成下一条微指令地址<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">M+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>d</mi><mo stretchy="false">(</mo><mi>C</mi><mi>M</mi><mi>D</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>C</mi><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">Ad(CMDR)\rightarrow CMAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>M</mi><mo stretchy="false">(</mo><mi>C</mi><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>C</mi><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">CM(CMAR)\rightarrow CMDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">CMDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>发出命令</p><p>形成下一条微指令地址<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">M+2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>d</mi><mo>→</mo><mi>C</mi><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">Ad\rightarrow CMAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>M</mi><mo stretchy="false">(</mo><mi>C</mi><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>C</mi><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">CM(CMAR)\rightarrow CMDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">CMDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>发出命令</p><p>由于下地址为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi>X</mi><mi>X</mi></mrow><annotation encoding="application/x-tex">XXX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>，表示下一条微指令的地址不能由下地址给出，而是要进入到间址阶段或执行阶段</p></li></ol><h5 id="执行阶段"><a class="markdownIt-Anchor" href="#执行阶段"></a> 执行阶段</h5><p>此阶段执行LDA微程序</p><ol><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>P</mi><mo stretchy="false">(</mo><mi>I</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mtext>微地址形成部件</mtext><mo>→</mo><mi>C</mi><mi>M</mi><mi>A</mi><mi>R</mi><mtext>（</mtext><mi>P</mi><mo>→</mo><mi>C</mi><mi>M</mi><mi>A</mi><mi>R</mi><mtext>）</mtext></mrow><annotation encoding="application/x-tex">OP(IR)\rightarrow 微地址形成部件\rightarrow CMAR  （P\rightarrow CMAR）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">微</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mord cjk_fallback">形</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">部</span><span class="mord cjk_fallback">件</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord cjk_fallback">）</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>M</mi><mo stretchy="false">(</mo><mi>C</mi><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>C</mi><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">CM(CMAR)\rightarrow CMDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">CMDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>发出命令</p><p>形成下一条微指令地址<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">P+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>d</mi><mo stretchy="false">(</mo><mi>C</mi><mi>M</mi><mi>D</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>C</mi><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">Ad(CMDR)\rightarrow CMAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>M</mi><mo stretchy="false">(</mo><mi>C</mi><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>C</mi><mi>M</mi><mi>D</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">CM(CMAR)\rightarrow CMDA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">A</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>M</mi><mi>D</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">CMDA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">A</span></span></span></span>发出命令</p><p>形成下一条微指令地址<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">P+2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>d</mi><mo stretchy="false">(</mo><mi>C</mi><mi>M</mi><mi>D</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>C</mi><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">Ad(CMDR)\rightarrow CMAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>M</mi><mo stretchy="false">(</mo><mi>C</mi><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>C</mi><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">CM(CMAR)\rightarrow CMDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">CMDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>发出命令</p><p>形成下一条微指令地址<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>→</mo><mi>C</mi><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">M\rightarrow CMAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p></li></ol><h5 id="取指阶段-2"><a class="markdownIt-Anchor" href="#取指阶段-2"></a> 取指阶段</h5><p>继续执行取指微程序，得到下一条指令</p><p>……</p><h5 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h5><p>通过以上工作原理的实例，我们知道：全部的微指令都保存在CM中，程序执行过程中只需要读出指令。而这一系列操作关键在于：</p><ul><li>微指令的操作控制字段如何形成微操作命令</li><li>微指令的后续地址如何形成</li></ul><p>所以接下来我们来介绍微程序设计如何对微指令进行编码，以及如何形成后续地址。</p><h4 id="微指令的编码方式"><a class="markdownIt-Anchor" href="#微指令的编码方式"></a> 微指令的编码方式</h4><h5 id="直接编码方式"><a class="markdownIt-Anchor" href="#直接编码方式"></a> 直接编码方式</h5><p>即在微指令的操作控制字段中，每一位代表一个微操作命令，某位为“1”代表该控制信号有效。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706171522749.png" alt="image-20240706171522749" style="zoom:50%;" /><p>这种方式特点在于：</p><ul><li>速度最快，不需要译码，且设置多个位为“1”可以实现并行处理</li><li>由于每一位都要对应一条微指令，所以微指令需要有2<sup>n</sup>位（假设操作码有n位，对应的译码位数就有2<sup>n</sup>位）</li></ul><h5 id="字段直接编码方式"><a class="markdownIt-Anchor" href="#字段直接编码方式"></a> 字段直接编码方式</h5><p>将微指令的控制字段氛围若干个“段”，每段经过译码后发出控制信号。注意每个译码器一次只能有一个输出为1，因此分到一段中的微操作应当是互斥的。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706171918592.png" alt="image-20240706171918592" style="zoom:50%;" /><p>这种方式特点在于：</p><ul><li>显示编码</li><li>缩短了微指令字长，原来需要2<sup>n</sup>位，现在每段中仅需要n为即可，然后再通过译码解释为2<sup>n</sup>位</li><li>由于增加了译码时间，所以微程序执行速度较慢</li></ul><h5 id="字段间接编码方式"><a class="markdownIt-Anchor" href="#字段间接编码方式"></a> 字段间接编码方式</h5><p>即隐式编码，这种编码方式译码时还需要以来其他译码器的译码结果，所以是间接编码。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706172325957.png" alt="image-20240706172325957" style="zoom:50%;" /><h5 id="混合编码"><a class="markdownIt-Anchor" href="#混合编码"></a> 混合编码</h5><p>即直接编码和字段编码（直接和间接）混合使用。对于常用的微指令，我们可以采取直接编码加快执行速度；对于不常用的微指令，我们可以用字段编码来减少微指令字长。</p><h4 id="微指令序列地址的形成"><a class="markdownIt-Anchor" href="#微指令序列地址的形成"></a> 微指令序列地址的形成</h4><p>有以下几种方法：</p><ol><li><p>微指令的下地址字段指出</p></li><li><p>根据机器指令的操作码形成</p></li><li><p>增量计数器</p><p>即通常情况下微指令的下地址指向的都是连续的下一条地址，此时只需要把CMDA中的地址+1，而无需将CMDR中的地址部分取回CMDA中</p></li><li><p>分支转移</p><p>即遇到跳转情况时</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706172828439.png" alt="image-20240706172828439" style="zoom:50%;" /></li><li><p>通过测试网络</p><p>可以用于微程序在小范围内的跳转</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706172904041.png" alt="image-20240706172904041" style="zoom:50%;" /></li><li><p>由硬件产生微程序入口地址</p><p>比如第一条微指令地址由专门硬件产生，告诉计算机去取指令</p><p>比如中断周期中由硬件产生的中断周期微程序的首地址</p></li></ol><p>经过以上介绍，我们可以把影响微程序序列地址形成的因素归纳如下图所示：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706173047643.png" alt="image-20240706173047643" style="zoom:50%;" /><p>注意，分支逻辑产生的信号控制多路选择器，由于判断是否发生跳转，转移方式也要送入分支逻辑。</p><h4 id="微指令格式"><a class="markdownIt-Anchor" href="#微指令格式"></a> 微指令格式</h4><p>简答题来咯，注意辨析水平型微指令和垂直型微指令的异同。</p><ul><li><p>水平型微指令：即一次能定义并执行多个并行操作。</p><p>如直接编码、字段直接编码、字段间接编码、直接和字段混合编码</p></li><li><p>垂直型微指令：复杂的微操作，操作间有先后次序。</p><p>一次只能定义一个操作，类似机器指令操作码的方式，由微操作码字段规定微指令的功能</p></li></ul><p>两者的比较：</p><ul><li>水平型微指令比垂直型微指令并行操作能力强，灵活性强</li><li>水平型微指令执行一条机器指令所要的微指令数目少，速度快</li><li>水平型微指令用较短的微程序结构换取较长的微指令结构</li><li>水平型微指令与机器指令差别大</li></ul><table><thead><tr><th>特点</th><th>垂直型微指令 (Vertical Microinstruction)</th><th>水平型微指令 (Horizontal Microinstruction)</th></tr></thead><tbody><tr><td>指令长度</td><td>窄位指令，使用操作码编码控制信号</td><td>宽位指令，每位或每组位直接控制硬件信号</td></tr><tr><td>并行性</td><td>较低，通过解码器生成的控制信号较少</td><td>高，可以同时激活多个控制信号</td></tr><tr><td>灵活性</td><td>相对较低，通过解码器生成控制信号</td><td>高，可以更细粒度地控制硬件部件</td></tr><tr><td>实现复杂性</td><td>需要解码器来解释操作码，设计更为复杂</td><td>实现相对简单，直接控制信号</td></tr><tr><td>适用场景</td><td>适用于需要节省指令存储空间的场合</td><td>适用于需要高并行性的场合</td></tr></tbody></table><blockquote><h2 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h2><h3 id="水平型微指令-horizontal-microinstruction"><a class="markdownIt-Anchor" href="#水平型微指令-horizontal-microinstruction"></a> 水平型微指令 (Horizontal Microinstruction)</h3><p>假设有以下控制信号：</p><ul><li>读取内存：Memory Read (MR)</li><li>写入内存：Memory Write (MW)</li><li>加载累加器：Load Accumulator (LA)</li><li>存储累加器：Store Accumulator (SA)</li></ul><p>示例微指令：</p><table><thead><tr><th>MR</th><th>MW</th><th>LA</th><th>SA</th></tr></thead><tbody><tr><td>1</td><td>0</td><td>1</td><td>0</td></tr></tbody></table><p>这条微指令表示同时进行“读取内存”和“加载累加器”的操作。</p><h3 id="垂直型微指令-vertical-microinstruction"><a class="markdownIt-Anchor" href="#垂直型微指令-vertical-microinstruction"></a> 垂直型微指令 (Vertical Microinstruction)</h3><p>假设有以下操作码和对应的控制信号：</p><ul><li>00: 读取内存 (MR)</li><li>01: 写入内存 (MW)</li><li>10: 加载累加器 (LA)</li><li>11: 存储累加器 (SA)</li></ul><p>示例微指令：10</p><p>这条微指令通过解码器生成控制信号“加载累加器”。</p></blockquote><h4 id="静态和动态微程序设计"><a class="markdownIt-Anchor" href="#静态和动态微程序设计"></a> 静态和动态微程序设计</h4><p>静态微程序设计，即微程序无须改变，直接存储在ROM中。</p><p>动态微程序设计，允许修改、扩展指令集，通过修改微程序的方式，在控制存储器中写入新的指令在执行阶段的微程序。一般为了保证兼容性，很少进行修改，而是直接扩展。</p><p>十分有利与指令仿真。增加或修改一条指令，看下改变之后的体系结构运行某类应用程序性能是否较大提升，生成下批处理器时，就可以改变指令集</p><p>一般采取EPROM。</p><h4 id="毫微程序设计"><a class="markdownIt-Anchor" href="#毫微程序设计"></a> 毫微程序设计</h4><p>毫微程序概念的理解可以参考微程序和机器指令的关系：</p><ul><li>微程序设计用微程序解释机器指令</li><li>毫微程序设计用毫微程序解释微程序</li></ul><p>当微指令比较复杂，并且这个操作内部的毫微操作也有一定的先后顺序时，就需要考虑毫微程序的设计。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706194837556.png" alt="image-20240706194837556" style="zoom:50%;" /><p>这里放出毫微程序的设计结构图进行参考，并不是重点，仅做了解。</p><p>可以看到，毫微程序设计和微程序设计之间类似套娃的关系，又是一层新的抽象。</p><h4 id="串行和并行微程序控制"><a class="markdownIt-Anchor" href="#串行和并行微程序控制"></a> 串行和并行微程序控制</h4><p>参考下图：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706195032652.png" alt="image-20240706195032652" style="zoom:50%;" /><p>可以通过流水的方式加快微指令执行效率。</p><h4 id="微程序设计举例"><a class="markdownIt-Anchor" href="#微程序设计举例"></a> 微程序设计举例</h4><p>最后的波纹了！</p><p>照例，我们需要先对指令的每个阶段进行微操作分析，然后再画出码点图。假设CPU结构和组合逻辑相同，且为非总线结构。</p><h5 id="写出对应机器指令的微操作及节拍安排"><a class="markdownIt-Anchor" href="#写出对应机器指令的微操作及节拍安排"></a> 写出对应机器指令的微操作及节拍安排</h5><p>这里只给出取值周期和执行周期中的节拍安排，整理列表如下：</p><p>取指周期：</p><table><thead><tr><th>时间周期</th><th>微操作</th></tr></thead><tbody><tr><td>T0</td><td>PC → MAR / 1 → R</td></tr><tr><td>T1</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td>T2</td><td>M(MAR) → MDR / (PC)+1 → PC</td></tr><tr><td>T3</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td>T4</td><td>MDR → IR / OP(IR) → 微地址形成部件</td></tr><tr><td>T5</td><td><font style="color:red">OP(IR) → 微地址形成部件 → CMAR</font></td></tr></tbody></table><p>执行周期：</p><p>执行阶段最后一条微指令的下地址应当是M，需要把下地址取出送入CMAR</p><table><thead><tr><th>指令</th><th>时间周期</th><th>微操作</th></tr></thead><tbody><tr><td>CLA</td><td>T0</td><td>0 → AC</td></tr><tr><td></td><td>T1</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td>COM</td><td>T0</td><td>AC → AC</td></tr><tr><td></td><td>T1</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td>SHR</td><td>T0</td><td>L(AC) → R(AC) / AC0 → AC0</td></tr><tr><td></td><td>T1</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td>CSL</td><td>T0</td><td>R(AC) → L(AC) / AC0 → ACn</td></tr><tr><td></td><td>T1</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td>STP</td><td>T0</td><td>0 → G</td></tr><tr><td></td><td>T1</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td>ADD</td><td>T0</td><td>Ad(IR) → MAR / 1 → R</td></tr><tr><td></td><td>T1</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td></td><td>T2</td><td>M(MAR) → MDR</td></tr><tr><td></td><td>T3</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td></td><td>T4</td><td>(AC) + (MDR) → AC</td></tr><tr><td></td><td>T5</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td>STA</td><td>T0</td><td>Ad(IR) → MAR / 1 → W</td></tr><tr><td></td><td>T1</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td></td><td>T2</td><td>AC → MDR</td></tr><tr><td></td><td>T3</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td></td><td>T4</td><td>MDR → M(MAR)</td></tr><tr><td></td><td>T5</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td>LDA</td><td>T0</td><td>Ad(IR) → MAR / 1 → R</td></tr><tr><td></td><td>T1</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td></td><td>T2</td><td>M(MAR) → MDR</td></tr><tr><td></td><td>T3</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td></td><td>T4</td><td>MDR → AC</td></tr><tr><td></td><td>T5</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td>JMP</td><td>T0</td><td>Ad(IR) → PC</td></tr><tr><td></td><td>T1</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr><tr><td>BAN</td><td>T0</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>0</mn></msub><mo separator="true">⋅</mo><mi>A</mi><mi>d</mi><mo stretchy="false">(</mo><mi>I</mi><mi>R</mi><mo stretchy="false">)</mo><mo>+</mo><mover accent="true"><msub><mi>A</mi><mn>0</mn></msub><mo stretchy="true">‾</mo></mover><mo separator="true">⋅</mo><mo stretchy="false">(</mo><mi>P</mi><mi>C</mi><mo stretchy="false">)</mo><mo>→</mo><mi>P</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">A_0·Ad(IR)+\overline{A_0}·(PC)\rightarrow PC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.13333em;vertical-align:-0.25em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></td></tr><tr><td></td><td>T1</td><td><font style="color:red">Ad(CMDR) → CMAR</font></td></tr></tbody></table><p>上述共有20个微操作，38条微指令。</p><p>如果用水平型编码，直接编码，每一个微操作都需要操作控制字段中1位来表示。要在控制存储器内寻址，下地址字段长度和控制存储器大小相关，38条微指令需38个存储单元。</p><h5 id="确定微指令格式"><a class="markdownIt-Anchor" href="#确定微指令格式"></a> 确定微指令格式</h5><ul><li><p>假设微指令的编码方式：采取水平直接控制</p></li><li><p>后续微指令的地址形成方式：</p><p>由机器指令的操作码通过微地址形成部件形成</p><p>由微指令的下地址字段直接给出</p></li><li><p>微指令字长</p><p>由20个微操作，确定操作控制字段最少为20位</p><p>由38条微指令，确定微指令的下地址字段为6位</p><p>微指令字长可取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>20</mn><mo>+</mo><mn>6</mn><mo>=</mo><mn>26</mn></mrow><annotation encoding="application/x-tex">20+6=26</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">6</span></span></span></span>位</p></li><li><p>微指令字长的优化</p><p>38条微指令中有19条是关于后续微指令地址 → CMAR</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext> 其中 </mtext><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left right" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mtext> 条 </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> OP </mtext><mo stretchy="false">(</mo><mtext> IR </mtext><mo stretchy="false">)</mo><mo>⟶</mo><mtext> 微地址形成部件 </mtext><mo>⟶</mo><mtext> CMAR </mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>18</mn><mtext> 条 </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> Ad ( CMDR </mtext><mo stretchy="false">)</mo><mo>⟶</mo><mtext> CMAR </mtext></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\text { 其中 }\left\{\begin{array}{lr}1 \text { 条 } &amp; \text { OP }(\text { IR }) \longrightarrow \text { 微地址形成部件 } \longrightarrow \text { CMAR } \\18 \text { 条 } &amp; \text { Ad ( CMDR }) \longrightarrow \text { CMAR }\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">其中</span><span class="mord"> </span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">条</span><span class="mord"> </span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">8</span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">条</span><span class="mord"> </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> OP </span></span><span class="mopen">(</span><span class="mord text"><span class="mord"> IR </span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⟶</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">微地址形成部件</span><span class="mord"> </span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⟶</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord text"><span class="mord"> CMAR </span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> Ad ( CMDR </span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⟶</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord text"><span class="mord"> CMAR </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>若用Ad(CMDR)直接送入控存地址线，即省略CMAR，则可以省略掉以上19条指令，2个微操作。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706203838160.png" alt="image-20240706203838160" style="zoom:50%;" /><p>此时微指令：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>38</mn><mo>−</mo><mn>19</mn><mo>=</mo><mn>19</mn></mrow><annotation encoding="application/x-tex">38-19=19</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">9</span></span></span></span> 下地址字段最少5位</p><p>此时微操作：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>20</mn><mo>−</mo><mn>2</mn><mo>=</mo><mn>18</mn></mrow><annotation encoding="application/x-tex">20-2=18</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">8</span></span></span></span> 操作控制字段最少18位</p><p>考虑留有一定的容量方便后续扩展，有：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mtable rowspacing="0.15999999999999992em" columnalign="left right" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> 取操作控制字段 </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>18</mn><mtext> 位 </mtext><mo>→</mo><mn>24</mn><mtext> 位 </mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> 下地此字段 </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>5</mn><mtext> 位一 </mtext><mn>6</mn><mtext> 位 </mtext></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mtext> 共 </mtext><mn>30</mn><mtext> 位 </mtext></mrow><annotation encoding="application/x-tex">\left.\begin{array}{lr}\text { 取操作控制字段 } &amp; 18 \text { 位 } \rightarrow 24 \text { 位 } \\\text { 下地此字段 } &amp; 5 \text { 位一 } 6 \text { 位 }\end{array}\right\} \text { 共 } 30 \text { 位 }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">取操作控制字段</span><span class="mord"> </span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">下地此字段</span><span class="mord"> </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">8</span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">位</span><span class="mord"> </span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">位</span><span class="mord"> </span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">位一</span><span class="mord"> </span></span><span class="mord">6</span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">位</span><span class="mord"> </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">}</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">共</span><span class="mord"> </span></span><span class="mord">3</span><span class="mord">0</span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">位</span><span class="mord"> </span></span></span></span></span></p></li><li><p>定义微指令操作字段每一位的操作</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706204036976.png" style="zoom:50%;" /></li></ul><h5 id="编写微指令码点"><a class="markdownIt-Anchor" href="#编写微指令码点"></a> 编写微指令码点</h5><p>规定每一位的操作如下（部分）：</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706204256674.png" alt="image-20240706204256674" /></p><p>画出码点图</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240706204429307.png" alt="image-20240706204429307" /></p><p>即根据划分的节拍和规定的操作标1，最后即可得到微指令对应的码点。</p><p>……</p><p>……</p><p>本博客的内容就到此结束了，希望能帮助你更深刻的理解计算机组成原理这门课程，该说不说还挺有意思的。</p><p>那么，完结撒花💮💮ヽ(°▽°)ノ💮</p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/C10AD1752A521C3C297E7D81400952F1.jpg" alt="C10AD1752A521C3C297E7D81400952F1" /></p>]]></content>
    
    
    <summary type="html">计算机组成指北的第七部分&amp;完结篇！介绍了控制单元的设计原理与微指令编码方式，一般作为压轴题考察。</summary>
    
    
    
    <category term="计算机组成指北" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E6%8C%87%E5%8C%97/"/>
    
    
    <category term="计算机组成原理" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="控制单元设计" scheme="http://example.com/tags/%E6%8E%A7%E5%88%B6%E5%8D%95%E5%85%83%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="微指令编码方式" scheme="http://example.com/tags/%E5%BE%AE%E6%8C%87%E4%BB%A4%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成指北（六）</title>
    <link href="http://example.com/posts/4ddedbf342f8/"/>
    <id>http://example.com/posts/4ddedbf342f8/</id>
    <published>2024-09-27T03:43:17.000Z</published>
    <updated>2024-09-27T03:43:17.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第九章-控制单元的功能"><a class="markdownIt-Anchor" href="#第九章-控制单元的功能"></a> 第九章 控制单元的功能</h2><blockquote><p>掌握多级时序的概念，时钟周期，节拍</p><p>相对简单，要对CU的运行有一个基本的轮廓</p></blockquote><p>到现在为止，我们已经介绍完了CPU的ALU、寄存器（存储器）、中断系统，只差CU模块还没有介绍。这一章我们就来介绍CPU的最后一个组成部分：CU控制单元。</p><p>控制单位的主要功能之一就是完成指令的解释。我们以CU分析和执行指令的过程为例，说明控制单元要完成哪些功能。</p><h3 id="微操作命令的分析"><a class="markdownIt-Anchor" href="#微操作命令的分析"></a> 微操作命令的分析</h3><p>微操作，即在指令执行过程中，由CU发出的指令，比整条操作指令小的多。我们现在分别从指令执行的不同阶段，来学习CU在此期间的作用。</p><p>在介绍指令系统时我们知道，完成一条指令分4个工作周期<strong>取指周期、间址周期、执行周期和中断周期</strong>。我们就按照这四个周期，来一一分析CU的功能。</p><h4 id="取指周期"><a class="markdownIt-Anchor" href="#取指周期"></a> 取指周期</h4><p>取指周期的过程可以归纳为以下几个微操作：</p><ol><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>C</mi><mo>→</mo><mi>M</mi><mi>A</mi><mi>R</mi><mo>→</mo><mtext>地址线</mtext></mrow><annotation encoding="application/x-tex">PC\rightarrow MAR\rightarrow 地址线</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mord cjk_fallback">线</span></span></span></span></p><p>PC将指令地址送入地址寄存器MAR，通过地址总线发出</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>→</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">1\rightarrow R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>这里的R指的是控制寄存器，由控制寄存器传输信号给控制总线向主存发送读命令</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">(</mo><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">M(MAR)\rightarrow MDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>将MAR所指的主存单元中的内容经过数据总线读入MDR内</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>D</mi><mi>R</mi><mo>→</mo><mi>I</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">MDR\rightarrow IR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>MDR将内容送至指令寄存器IR内</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>P</mi><mo stretchy="false">(</mo><mi>I</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>C</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">OP(IR)\rightarrow CU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></p><p>CU对指令的操作码进行译码</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mi>C</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo>→</mo><mi>P</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">(PC)+1\rightarrow PC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></p><p>PC形成下一条指令的地址。注意，只有且必须在取指周期递增一次PC。如果学过8086汇编语言，你就会知道CPU执行指令的过程是先将指令读入指令寄存器，然后递增IP指向下一条指令。那么递增这个操作，实际上就是在取指周期内完成的。</p></li></ol><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240620193217182.png" alt="image-20240620193217182" style="zoom:50%;" /><h4 id="间址周期"><a class="markdownIt-Anchor" href="#间址周期"></a> 间址周期</h4><p>间址周期完成取操作数有效地址的任务，具体操作如下：</p><ol><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>d</mi><mo stretchy="false">(</mo><mi>I</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">Ad(IR)\rightarrow MAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>将指令的形式地址送入MAR</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>→</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">1\rightarrow R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>启动读操作</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">(</mo><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">M(MAR)\rightarrow MDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>将形式地址内的数据传回MDR</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>D</mi><mi>R</mi><mo>→</mo><mi>A</mi><mi>d</mi><mo stretchy="false">(</mo><mi>I</mi><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">MDR\rightarrow Ad(IR)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></p><p>将MDR内的有效地址送至指令寄存器的地址字段</p></li></ol><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240620193603661.png" alt="image-20240620193603661" style="zoom:50%;" /><h4 id="执行周期"><a class="markdownIt-Anchor" href="#执行周期"></a> 执行周期</h4><p>执行周期的过程相对比较复杂。不同于取指周期和间址周期，执行周期会根据指令操作的差异而改变。我们将分别讨论非访存指令、访存指令和转移指令的微指令操作。</p><h5 id="非访存指令"><a class="markdownIt-Anchor" href="#非访存指令"></a> 非访存指令</h5><p>非访存指令比较简单，因为不涉及访存，所以不需要用到总线传输以及地址及数据寄存器。有以下指令是非访存的：</p><table><thead><tr><th>指令</th><th>功能</th><th>微指令操作</th></tr></thead><tbody><tr><td>CLA</td><td>清除ACC的值</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>→</mo><mi>A</mi><mi>C</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">0\rightarrow ACC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></td></tr><tr><td>COM</td><td>将ACC内的值取反</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>A</mi><mi>C</mi><mi>C</mi></mrow><mo stretchy="true">‾</mo></mover><mo>→</mo><mi>A</mi><mi>C</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">\overline{ACC}\rightarrow ACC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></td></tr><tr><td>SHR</td><td>算术右移</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>A</mi><mi>C</mi><mi>C</mi><mo stretchy="false">)</mo><mo>→</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mi>C</mi><mi>C</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>A</mi><mi>C</mi><msub><mi>C</mi><mn>0</mn></msub><mo>→</mo><mi>A</mi><mi>C</mi><msub><mi>C</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">L(ACC)\rightarrow R(ACC),ACC_0\rightarrow ACC_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td></tr><tr><td>CSL</td><td>循环左移</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mi>C</mi><mi>C</mi><mo stretchy="false">)</mo><mo>→</mo><mi>L</mi><mo stretchy="false">(</mo><mi>A</mi><mi>C</mi><mi>C</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>A</mi><mi>C</mi><msub><mi>C</mi><mn>0</mn></msub><mo>→</mo><mi>A</mi><mi>C</mi><msub><mi>C</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">R(ACC)\rightarrow L(ACC),ACC_0\rightarrow ACC_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td></tr><tr><td>STP</td><td>停机指令</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>→</mo><mi>G</mi></mrow><annotation encoding="application/x-tex">0\rightarrow G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">G</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">G</span></span></span></span>是停机标志</td></tr></tbody></table><h5 id="访存指令"><a class="markdownIt-Anchor" href="#访存指令"></a> 访存指令</h5><p>访存指令需要访问主存，所以一般都会涉及到总线传输，此时控制线输出的信号根据操作类型输出可读可写。</p><ul><li><p>加法指令 ADD X</p><ol><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>d</mi><mo stretchy="false">(</mo><mi>I</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">Ad(IR)\rightarrow MAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>将指令寄存器的形式地址送入MAR</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>→</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">1\rightarrow R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>控制线输出读信号</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">(</mo><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">M(MAR)\rightarrow MDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>主存读取MAR地址中的数据送回MDR</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>A</mi><mi>C</mi><mi>C</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>M</mi><mi>D</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>A</mi><mi>C</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">(ACC)+(MDR)\rightarrow ACC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></p><p>ACC中的值加上MDR中的数据，计算结果保存在ACC中</p></li></ol></li><li><p>存数指令 STA X</p><ol><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>d</mi><mo stretchy="false">(</mo><mi>I</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">Ad(IR)\rightarrow MAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>将形式地址送入MAR</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>→</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">1\rightarrow W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span></p><p>控制线输出写信号</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>C</mi><mi>C</mi><mo>→</mo><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">ACC\rightarrow MDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>将ACC内的值送入MDR内</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>D</mi><mi>R</mi><mo>→</mo><mi>M</mi><mo stretchy="false">(</mo><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">MDR\rightarrow M(MAR)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></p><p>将MDR中的数据写入主存中MAR的地址内</p></li></ol></li><li><p>取数指令 LDA X</p><ol><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>d</mi><mo stretchy="false">(</mo><mi>I</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">Ad(IR)\rightarrow MAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>形式地址送入MAR</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>→</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">1\rightarrow R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>控制线输出读信号</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">(</mo><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">M(MAR)\rightarrow MDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>将主存中MAR地址内的数据取出存放在MDR中</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>D</mi><mi>R</mi><mo>→</mo><mi>A</mi><mi>C</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">MDR\rightarrow ACC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></p><p>将MDR中的数据送入ACC，而不是与ACC内的值相加</p></li></ol></li></ul><h5 id="转移指令"><a class="markdownIt-Anchor" href="#转移指令"></a> 转移指令</h5><p>转移指令分为无条件转移和有条件转移，对应汇编中的<code>jmp</code>和<code>jz</code>等指令。要实现转移指令，一般涉及到对PC的修改。</p><ul><li><p>无条件转移 JMP X</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>d</mi><mo stretchy="false">(</mo><mi>I</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>P</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">Ad(IR)\rightarrow PC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，直接将指令中的形式地址送入PC，因为<code>JMP</code>后跟着的操作数往往就是需要跳转执行的指令地址</p></li><li><p>条件转移 BAN X</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>0</mn></msub><mo separator="true">⋅</mo><mi>A</mi><mi>d</mi><mo stretchy="false">(</mo><mi>I</mi><mi>R</mi><mo stretchy="false">)</mo><mo>+</mo><mover accent="true"><msub><mi>A</mi><mn>0</mn></msub><mo stretchy="true">‾</mo></mover><mo stretchy="false">(</mo><mi>P</mi><mi>C</mi><mo stretchy="false">)</mo><mo>→</mo><mi>P</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">A_0·Ad(IR)+\overline{A_0}(PC)\rightarrow PC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.13333em;vertical-align:-0.25em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，条件转移实际上是看ACC的首位<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">A_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是否为负数（对应高电平，因为符号位取1代表负数）。是负数则转移，否则不转移。</p></li></ul><h4 id="指令周期"><a class="markdownIt-Anchor" href="#指令周期"></a> 指令周期</h4><p>各类指令对应的指令周期总结如下图：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240621105317997.png" alt="image-20240621105317997" style="zoom:50%;" /><p>只要查看有无间接过程，就能判断有无间址周期。否则，大部分指令只需要取指周期和执行周期。判断指令经过的具体周期后，就能根据细分的周期分析执行指令时需要的微指令。</p><h4 id="中断周期"><a class="markdownIt-Anchor" href="#中断周期"></a> 中断周期</h4><p>除了取指、间址、执行外，还有一类特殊的周期是中断周期。中断往往是由外部I/O设备对CPU发出的请求产生的，所以他们有特殊的微指令操作。</p><p>我们在第八章介绍中断系统时已经讨论过，在中断周期内执行的三个步骤：</p><ol><li>保存程序断点</li><li>形成中断服务程序入口地址</li><li>关中断</li></ol><p>以上三个步骤务必牢记。接下来我们就这三个步骤讨论CU在此过程中的作用。</p><h5 id="保存断点"><a class="markdownIt-Anchor" href="#保存断点"></a> 保存断点</h5><p>保存断点我们介绍了两种方法：将断点地址存于特殊的主存空间内（0号地址），入栈保存。相应的，他们的微指令操作也各不相同。</p><ul><li><p>存入“0”地址</p><ol><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>→</mo><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">0\rightarrow MAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>将0号地址送入MAR中</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>→</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">1\rightarrow W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span></p><p>控制线输出写信号</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>C</mi><mo>→</mo><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">PC\rightarrow MDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>将此时PC的内容，也即程序断点地址送入MDR中</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>D</mi><mi>R</mi><mo>→</mo><mi>M</mi><mo stretchy="false">(</mo><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">MDR\rightarrow M(MAR)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></p><p>将MDR的数据送入主存的0号地址</p></li></ol></li><li><p>断点入栈</p><ol><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>P</mi><mo>−</mo><mn>1</mn><mo>→</mo><mi>M</mi><mi>A</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">SP-1\rightarrow MAR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>将栈顶指针（栈指针寄存器）的值减一，把此处的地址送入MAR</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>→</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">1\rightarrow W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span></p><p>控制线发出写信号</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>C</mi><mo>→</mo><mi>M</mi><mi>D</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">PC\rightarrow MDR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p><p>程序断点地址送入MDR</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>D</mi><mi>R</mi><mo>→</mo><mi>M</mi><mo stretchy="false">(</mo><mi>M</mi><mi>A</mi><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">MDR\rightarrow M(MAR)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></p><p>把MDR的数据送入对应的栈空间</p></li></ol></li></ul><h5 id="形成入口中断地址"><a class="markdownIt-Anchor" href="#形成入口中断地址"></a> 形成入口中断地址</h5><p>形成入口地址我们也介绍了两种方式：硬件向量法与软件查询法</p><p>硬件向量法：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>向量地址</mtext><mo>→</mo><mi>P</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">向量地址\rightarrow PC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，即直接把形成的向量地址送入PC即可</p><p>软件查询法：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>中断程序识别入口地址</mtext><mi>M</mi><mo>→</mo><mi>P</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">中断程序识别入口地址M\rightarrow PC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">断</span><span class="mord cjk_fallback">程</span><span class="mord cjk_fallback">序</span><span class="mord cjk_fallback">识</span><span class="mord cjk_fallback">别</span><span class="mord cjk_fallback">入</span><span class="mord cjk_fallback">口</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，此时PC跳转至软件查询法提供的中断识别程序M执行，程序M会再把入口的地址送入PC。注意这里并没有直接把中断的真正入口地址直接送给PC，而是分成了两步</p><h5 id="关中断"><a class="markdownIt-Anchor" href="#关中断"></a> 关中断</h5><p>关中断即把EINT置0即可。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>→</mo><mi>E</mi><mi>I</mi><mi>N</mi><mi>T</mi></mrow><annotation encoding="application/x-tex">0\rightarrow EINT</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span></p><h4 id="微指令小结"><a class="markdownIt-Anchor" href="#微指令小结"></a> 微指令小结</h4><p>通过以上对各个指令周期中CU输出的微指令分析，我们可以总结出CU的一些规律：</p><ul><li>如果指令不访存，则不涉及总线传输、MDR和MAR。CU仅在CPU内输出简单的单步或双步信号。</li><li>如果指令访存，如取指、存数、断点保存等过程，一般要涉及到总线和主存寄存器的使用。首先要将需要取数/写数的地址送入MAR，再由控制寄存器设置相应的读写信号，接着就可以把要写的数据送入MDR或者把访存的数据存入MDR，最后再把MDR内的数据写入主存或者送入CPU的ACC内。</li><li>如果指令涉及转移，则一般还要用上PC寄存器。注意是有条件转移还是无条件转移。</li></ul><h3 id="控制单元的功能"><a class="markdownIt-Anchor" href="#控制单元的功能"></a> 控制单元的功能</h3><p>以上微指令的分析流程想必大家都已经有了个大概的轮廓，但我们都只是基于符号表示给出了形式上的说明，本节我们就来学习在硬件上CU是如何驱动完成这些功能的。</p><p>我们先给出CU的一幅结构图。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240621164920497.png" alt="image-20240621164920497" style="zoom:50%;" /><p>我们根据这幅图来介绍与CU有关的输入信号和输出信号。</p><h4 id="输入信号"><a class="markdownIt-Anchor" href="#输入信号"></a> 输入信号</h4><p>由图可知，CU接受以下四个输入信号：</p><ul><li><p>时钟</p><p>CU受时钟控制，一个时钟脉冲下，CU可以发送一个或者一组需要同时执行的操作命令。是驱动计算机运行的最基础信号，也是我们后续介绍多级时序系统的基础。</p></li><li><p>指令寄存器</p><p>即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>P</mi><mo stretchy="false">(</mo><mi>I</mi><mi>R</mi><mo stretchy="false">)</mo><mo>→</mo><mi>C</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">OP(IR)\rightarrow CU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span>时，存储指令中操作码的信息。控制信号的发出依赖于操作码。</p></li><li><p>标志</p><p>CU还受标志控制，比如条件转移标志位</p></li><li><p>外来信号</p><p>比如INTR中断请求、HRQ总线请求等</p></li></ul><h4 id="输出信号"><a class="markdownIt-Anchor" href="#输出信号"></a> 输出信号</h4><p>由图可知，CU输出的信号可分为两类：CPU内的各种控制信号和送至控制总线的信号。</p><ul><li><p>CPU内的控制信号</p><p>如：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub><mo>→</mo><msub><mi>R</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">R_i\rightarrow R_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>寄存器之间的赋值操作</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mi>C</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo>→</mo><mi>P</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">(PC)+1\rightarrow PC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>指令计数器递增</p><p>ALU中的+、-、与、或等各种算数控制信号</p></li><li><p>送至控制总线的信号</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>M</mi><mi>E</mi><mi>R</mi><mi>Q</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{MERQ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0777700000000001em;vertical-align:-0.19444em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">Q</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span> 访存控制信号</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>I</mi><mi>O</mi></mrow><mo stretchy="true">‾</mo></mover><mi mathvariant="normal">/</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">\overline{IO}/M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.13333em;vertical-align:-0.25em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>访问IO/存储器的控制信号</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>R</mi><mi>D</mi></mrow><mo stretchy="true">‾</mo></mover><mtext>、</mtext><mover accent="true"><mrow><mi>W</mi><mi>R</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{RD}、\overline{WR}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>读命令与写命令</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>N</mi><mi>T</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">INTA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">A</span></span></span></span>中断响应信号</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>L</mi><mi>D</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">HLDA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">A</span></span></span></span>总线响应信号</p></li></ul><h4 id="举例"><a class="markdownIt-Anchor" href="#举例"></a> 举例</h4><p>这里主要谈谈CPU中分散连接和采用CPU内总线通信的两种结构，简单的过一下。只要掌握了CU微指令流程其实就很简单。</p><p>下图是分散连接的一个示例：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240621171409141.png" alt="image-20240621171409141" style="zoom:50%;" /><p>可以看到这么做需要比较繁多的线路，如果我们引入CPU内部总线，就可以大大简化电路。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240621171506973.png" alt="image-20240621171506973" style="zoom:50%;" /><p>可以看到，引入内部总线后，CPU内各部件的通信只需要依赖于一根总线，而无须庞杂繁琐的各部件都连线。其中还有一点变化需要注意：ALU多了寄存器Y和Z，Y用来存放另一操作数，Z用来临时放计算结果，防止结果放入总线后又被ALU读入。</p><h3 id="多级时序系统"><a class="markdownIt-Anchor" href="#多级时序系统"></a> 多级时序系统</h3><p>终于来到了本章的重头戏——多级时序系统。别被这个高大上的名称吓到了，其实内容很简单，就是一个概念的套娃。指令周期&gt;机器周期&gt;时钟周期。</p><p>我们来学习一下机器周期和时钟周期的概念，就可以理解多级时序系统了。</p><h4 id="机器周期"><a class="markdownIt-Anchor" href="#机器周期"></a> 机器周期</h4><p>机器周期，即<strong>所有指令执行过程的一个基准时间</strong>。通常指的是完成一个特定功能所需的一系列时钟周期。例如，从内存中读取数据或写入数据可能需要多个时钟周期来完成。机器周期通常包括数据传输、地址访问、控制信号的建立等。</p><p>通常我们确定机器周期时，需要考虑<strong>每条指令的执行步骤</strong>和<strong>每一步骤所需的时间</strong>。一般来说，我们把完成最复杂指令功能的时间作为机器周期的基准时间。最复杂指令通常是访存操作，所以我们一般是以访问一次存储器的时间为基准。</p><p>如果指令字长＝存储字长，那么取指周期=机器周期。</p><p>每个机器周期内部也有很多微操作，有先后顺序。所以机器周期内部也需要有多个时钟周期，由时钟控制微操作先后顺序。</p><h4 id="时钟周期"><a class="markdownIt-Anchor" href="#时钟周期"></a> 时钟周期</h4><p>时钟周期，又称节拍或者状态，是计算机中最基本的时间单位，可以用时钟周期控制产生一个或几个微操作的命令。</p><p>如果微操作可并行，则一个机器周期内可完成若干个微操作。</p><p>时钟周期与机器周期的关系如下图：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240621173315652.png" alt="image-20240621173315652" style="zoom:50%;" /><p>可以看到，时钟周期的每一个上升沿会给T<sub>0</sub>一个信号，微操作的下降沿又会激活下一个微操作。一组由时钟周期调控的微操作组成一个机器周期。</p><h4 id="多级时序系统-2"><a class="markdownIt-Anchor" href="#多级时序系统-2"></a> 多级时序系统</h4><p>机器周期、节拍（状态、时钟周期）组成多级时序系统，一个指令周期包含若干个机器周期，一个机器周期包含若干个时钟周期。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240621174044179.png" alt="image-20240621174044179" style="zoom:50%;" /><h3 id="控制方式"><a class="markdownIt-Anchor" href="#控制方式"></a> 控制方式</h3><p>产生一个微指令操作后，下一个指令什么时候产生呢？我们有几种控制方式：同步控制方式、异步控制方式、联合控制方式和人工控制方式。</p><p>我们主要介绍同步控制方式，这也是大多数计算机目前所在采用的控制方式。</p><h4 id="同步控制方式"><a class="markdownIt-Anchor" href="#同步控制方式"></a> 同步控制方式</h4><p>同步控制方式，即任一微操作均由<strong>统一基准时标</strong>的时序信号控制。它的特征是，一定有一个定宽定距的时钟。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240621180344264.png" alt="image-20240621180344264" style="zoom:50%;" /><p>同步控制方式有三种类别：</p><ul><li><p>采用定长的机器周期</p><p>这种方式强制规定了机器周期内的节拍数相同，此时的机器周期以最长的微操作序列和最繁的微操作作为标准。这就导致了在一些相对简单的机器周期内，会产生空闲的节拍，即浪费了部分时钟周期。</p></li><li><p>采用不定长的机器周期</p><p>即机器周期内的节拍数不等，执行指令过程较短的话可以含较少的节拍，如果执行指令过程较长则可以延长节拍。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240621180828791.png" alt="image-20240621180828791" style="zoom:50%;" /></li><li><p>中央控制和局部控制相结合</p><p>还可以采用采用中央控制和局部控制相结合的方法，即执行较长的延长的周期由局部节拍进行控制。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240621181011617.png" style="zoom:50%;" /></li></ul><h4 id="异步控制方式"><a class="markdownIt-Anchor" href="#异步控制方式"></a> 异步控制方式</h4><p>异步控制方式即一个微操作完成后，会给出一个应答信号。它没有基准时标信号和固定的周期节拍与严格的时钟同步，采用应答方式来控制。</p><h4 id="联合控制方式"><a class="markdownIt-Anchor" href="#联合控制方式"></a> 联合控制方式</h4><p>即同步和异步相结合的操作，常用与复杂的指令控制，如IO指令等。</p><h4 id="人工控制方式"><a class="markdownIt-Anchor" href="#人工控制方式"></a> 人工控制方式</h4><p>即人为参与程序运行调控，多用于程序调试，有以下三种方式：</p><ul><li>Reset，即重置程序。</li><li>(2) 连续和单条指令执行转换开关，如8086汇编中的单步断点调试。</li><li>符合停机开关，用于计算机的故障处理和容错率展示。</li></ul><p>……</p><p>……</p><p>第六部分到此结束！敬请阅读第七部分🌹</p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/612FFB2DEDE35B9C77545DB9ADF1C8BF.jpg" alt="612FFB2DEDE35B9C77545DB9ADF1C8BF" /></p>]]></content>
    
    
    <summary type="html">计算机组成指北的第六部分！介绍了计算机中控制单元的功能。</summary>
    
    
    
    <category term="计算机组成指北" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E6%8C%87%E5%8C%97/"/>
    
    
    <category term="计算机组成原理" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="控制单元" scheme="http://example.com/tags/%E6%8E%A7%E5%88%B6%E5%8D%95%E5%85%83/"/>
    
    <category term="多级时序系统" scheme="http://example.com/tags/%E5%A4%9A%E7%BA%A7%E6%97%B6%E5%BA%8F%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成指北（五）</title>
    <link href="http://example.com/posts/159e2ded72f9/"/>
    <id>http://example.com/posts/159e2ded72f9/</id>
    <published>2024-09-27T03:43:08.000Z</published>
    <updated>2024-09-27T03:43:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第八章-cpu的结构和功能"><a class="markdownIt-Anchor" href="#第八章-cpu的结构和功能"></a> 第八章 CPU的结构和功能</h2><blockquote><p>重难点注意！</p><p>周期流水和中断<br />指令流水非常非常重要<strong>绝对会考</strong>，怎么构成指令流水，几个周期构成流水，以及产生影响的主要因素，如何解决。要会计算流水效率。<br />中断请求标记 电路图不需要记住<br />中断隐指令概念要记住<br />屏蔽字<strong>一定会考</strong>，且占比高</p></blockquote><p>我们已经学习完了CPU的指令系统，但是指令是如何被CPU调用的呢？这就涉及到中断系统和CU部分了。本章从分析CPU的功能和内部结构入手，详细讨论计机器执行一条指令的全过程，以及为了提高数据处理能力、开发系统的并行性所采取的指令流水技术。</p><h3 id="cpu的结构"><a class="markdownIt-Anchor" href="#cpu的结构"></a> CPU的结构</h3><p>在第一章我们知道CPU主要由运算器和控制器组成。运算器已经在第六章学习完毕，这里主要讨论CPU的控制器的功能。</p><p>运算器的功能：</p><ul><li>实现算术运算和逻辑运算（数据加工）</li></ul><p>控制器的功能：</p><ul><li>取指令（指令控制）</li><li>分析指令（指令控制）</li><li>执行指令，发出各种操作命令（指令控制）</li><li>控制程序输入及结果的输出（操作控制）</li><li>总线管理（时间控制）</li><li>处理异常情况和特殊请求（处理中断）</li></ul><p>CPU必须具有指令控制、操作控制、时间控制、处理终端和数据加工的能力。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619175634266.png" alt="image-20240619175634266" style="zoom:50%;" /><p>其中指令控制与PC、IR有关；操作控制和时间控制则涉及到CU和时序电路；数据加工与ALU和寄存器有关；处理终端则和中断系统有关。</p><h4 id="寄存器"><a class="markdownIt-Anchor" href="#寄存器"></a> 寄存器</h4><p>CPU的寄存器分为用户可见寄存器和用户不可见寄存器。用户不可见寄存器很多，例如流水段之间的流水段寄存器。</p><p>用户可见的寄存器有：</p><ul><li>通用寄存器，存放操作数</li><li>数据寄存器，存放操作数</li><li>地址寄存器，存放地址</li><li>条件码寄存器，存放条件码</li></ul><p>不可见的寄存器有：</p><ul><li><p>控制寄存器</p><p>以取指令为例子：PC➡️MAR➡️M➡️MDR➡️IR</p><p>其中MAR、MDR、IR对用户不可见，而PC可见</p></li><li><p>状态寄存器</p><p>反映指令执行结果的情况或者计算机软件硬件的状态。比如状态寄存器，PSW寄存器（比如8086的flag寄存器）。</p></li></ul><h4 id="控制单元cu和中断系统"><a class="markdownIt-Anchor" href="#控制单元cu和中断系统"></a> 控制单元CU和中断系统</h4><p>其中，CU负责产生全部指令的微操作命令序列，包括：</p><ul><li>组合逻辑设计，即硬连线逻辑</li><li>微程序设计，即存储逻辑</li></ul><p>以上内容将在第十章介绍。</p><p>中断系统，将在本章节后续小节具体介绍。</p><h4 id="alu"><a class="markdownIt-Anchor" href="#alu"></a> ALU</h4><p>参见第六章</p><h3 id="指令周期"><a class="markdownIt-Anchor" href="#指令周期"></a> 指令周期</h3><p>指令周期，指的就是CPU取出并执行一条指令所需要的全部时间。</p><p>一般来说，完成一条指令，可以分为两个阶段：</p><ul><li>取指、分析；称取指周期</li><li>执行；称执行周期</li></ul><p>不过，具体来说，每条指令的指令周期一般不同，比如Nop就只有取指周期。指令周期一共可以细分为四个周期：取值周期、间址周期、执行周期、中断周期。</p><p>具体的流程可以参考下图：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619193003466.png" alt="image-20240619193003466" style="zoom:50%;" /><p>控制器在指令执行的不同阶段要发出不同命令。尽管都是内存读写操作，不同周期功能不同，读写位置不同：</p><ul><li>取指周期，取出指令，送入IR；</li><li>间址周期，取出地址，送入IR或MDR的地址码部分；</li><li>执行周期，读出来的数据放入CPU寄存器中；</li><li>中断周期，程序断点存入内存。</li></ul><p>CPU必须标注出当前处于指令的哪个阶段，以便于控制器发出相应的控制操作，这些标志就是<strong>CPU 工作周期的标志</strong>。为了区分它们，在CPU内可以设置四个标志触发器：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619193332739.png" style="zoom:50%;" /><p>FE、IND、EX、INT分别对应取指、间址、执行和中断四个周期，并以“1”状态表示有效。</p><h3 id="指令流水"><a class="markdownIt-Anchor" href="#指令流水"></a> 指令流水</h3><p>指令流水是一项极其重要的技术，需要重点掌握。无论是嵌入式，还是服务器，都使用流水技术。</p><p>我们先前提到过，要提高机器速度，可以从几个方面入手：</p><ol><li>提高访问速度：比如使用高速芯片、Cache、多提并行</li><li>提高I/O和主机之间的传送速度：比如使用中断、DMA、通道、I/O处理机等技术</li><li>提高运算器的速度：比如使用高速芯片，改进算法，使用快速进位链等</li></ol><p>现在，我们介绍第四种方法——提高整机的处理能力，即改进系统结构，开发系统的<strong>并行性</strong>。</p><p>所谓并行，包含并发性和同时性两个概念：</p><ul><li>并发，指两个或两个以上事件在<strong>同一时间段</strong>发生</li><li>同时，指两个或两个以上事件在<strong>同一时刻</strong>发生</li></ul><p>概括来说，只要<strong>时间上存在相互重叠</strong>，就具有并行性。</p><p>并行性的等级又分为作业级或程序级、任务级或进程级、指令之间级和指令内部级。前两者称为<strong>粗粒度</strong>，用软件实现；后两者称为<strong>细粒度</strong>，用硬件实现。</p><h4 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h4><p>我们先来看指令的串行执行：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619195144814.png" style="zoom:50%;" /><p>可以看到，取指令时，只有取指令的部件在工作；执行指令时，只有执行指令的部件在工作。总会有一个部件空闲，没有充分的发挥出计算机的效率。</p><p>接着我们使用指令的二级流水：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619195335432.png" alt="image-20240619195335432" style="zoom:50%;" /><p>可以看到，如果取指和执行阶段的时间完全重叠，则指令周期减半，速度提高了一倍。但实际情况下，流水线很难满负荷运转，因为指令不会仅分成两个阶段，指令之间也有相关性，不同阶段的耗时也不同。</p><p>影响指令流水的因素如下：</p><ul><li>执行时间＞取指时间</li><li>条件转移指令对指令流水的影响：必须等上一条指令执行结束才能确定下一条指令的地址，这造成了很大的时间损失。</li></ul><p>尽管这些因素影响了流水线的效率，但还是可以获得加速。</p><p>为了进一步提高处理速度，我们把处理过程分为更细的几个阶段：</p><ul><li>FI：取指令</li><li>DI：指令译码</li><li>CO：形成操作数的地址</li><li>FO：取操作数</li><li>EI：执行</li><li>WO：结果写回</li></ul><p>于是，我们就能根据这里六个阶段，设计一个六级流水：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619200109839.png" alt="image-20240619200109839" style="zoom:50%;" /><p>完成一条指令需要6个时间单位：</p><ul><li>如果串行执行，则需要6×9=54个时间单位</li><li>如果六级流水，则需要14个时间单位</li></ul><p>可以看出流水线大大地提高了计算机的运行效率。</p><h4 id="影响流水的因素"><a class="markdownIt-Anchor" href="#影响流水的因素"></a> 影响流水的因素</h4><p>要保持高效率，我们就必须要保持流水充分流动，不发生断流。但由于在流水线中会出现<strong>三个相关</strong>，所以很难实现不断流动。三个相关即：</p><ul><li>结构相关，不同指令争用同一硬件部件</li><li>数据相关，后继指令需要用到前面指令的执行结果</li><li>控制相关，遇到分支指令和其他改变PC值引起的相关</li></ul><h5 id="结构相关"><a class="markdownIt-Anchor" href="#结构相关"></a> 结构相关</h5><p>要解决结构相关的问题，我们通常采用以下方法：</p><ul><li>停顿，让一个指令先执行</li><li>指令存储器与数据存储器分开，避免取指令和取操作数产生冲突</li><li>指令预取技术，适用于访存周期短的情况，利用空闲时间取出多条指令放入指令缓冲寄存器</li></ul><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619200736020.png" alt="image-20240619200736020" /></p><p>另外，除了存储器资源，其他资源也都会冲突，例如寄存器。</p><h5 id="数据相关"><a class="markdownIt-Anchor" href="#数据相关"></a> 数据相关</h5><p>数据相关指不同指令因重叠操作，可能改变操作数的 读/写 访问顺序。</p><p>数据相关又分为三种：写后读相关，读后写相关和写后写相关</p><ul><li><p>写后读相关·RAW</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619201634128.png" alt="image-20240619201634128" /></p></li><li><p>读后写相关·WAR</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619201641779.png" alt="image-20240619201641779" /></p></li><li><p>写后写相关·WAW</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619201647894.png" alt="image-20240619201647894" /></p></li></ul><p>解决方法有二：后推法和旁路技术。</p><ul><li>后推法：等待第一条指令将结果写入寄存器后，第二条指令才开始读执行。这样做显然需要停顿流水线。</li><li>旁路技术：相关专用通路、前向通道：不需要等到结果送回寄存器，运算器结果产生后，直接作为输入，开始第二条指令执行。</li></ul><p>在按序流动的流水线中，只可能出现RAW相关；而在非按序流动的流水线中，则三种都可能出现。</p><h5 id="控制相关"><a class="markdownIt-Anchor" href="#控制相关"></a> 控制相关</h5><p>由转移指令引起，不得不停止等待判断的结果才知道接下来该执行哪里。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619202134351.png" alt="image-20240619202134351" style="zoom:50%;" /><p>假设指令3是转移指令，直到指令2结束才知道条件是否成立。指令4到指令7已经全部取出开始执行了，这些操作全部作废，在9到12时间单元没有结果输出，产生性能损失。</p><p>为了解决控制相关，我们一般使用猜测法尽早判断转移是否发生。这个方法很复杂，已经超出了教纲，可以自行查阅资料了解。</p><h4 id="流水线性能"><a class="markdownIt-Anchor" href="#流水线性能"></a> 流水线性能</h4><p>我们主要学习流水线性能的三个有关定义：吞吐量、加速比和效率。</p><h5 id="吞吐率"><a class="markdownIt-Anchor" href="#吞吐率"></a> 吞吐率</h5><p>吞吐率指单位时间内，流水线所完成指令或输出结果的数量。</p><p>设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>段流水线的各段时间为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\Delta t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal">t</span></span></span></span>。</p><ul><li><p>最大吞吐率为流水线连续流动达到稳定状态下的状态，即没有资源冲突，没有数据相关冲突，没有条转等，每经过一个t就有一个结果输出，有：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>p</mi><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow></mfrac><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">T_{pmax}=\frac{1}{\Delta t}\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span></span></span></p></li><li><p>实际吞吐率：连续处理 n 条指令的吞吐率为：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>p</mi></msub><mo>=</mo><mfrac><mi>n</mi><mrow><mi>m</mi><mo separator="true">⋅</mo><mi mathvariant="normal">Δ</mi><mi>t</mi><mo>+</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">⋅</mo><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow></mfrac><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">T_p=\frac{n}{m·\Delta t+(n-1)·\Delta t}\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.215392em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mpunct mtight">⋅</span><span class="mord mtight">Δ</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mpunct mtight">⋅</span><span class="mord mtight">Δ</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span></span></span></p><p>第一条指令需要时间mt，如果流水线很理想，其后一条指令有（m-1）段都已经在执行完第一条指令后并发完成，故只需要额外t时间就可完成第二条指令。以此类推，除了第一条指令花费mt外，剩下的（n-1）条指令均只需要额外的一个t即可输出结果，总耗时为(n-1)·t</p></li></ul><p>仅当n&gt;&gt;m时，T<sub>p</sub>≈T<sub>pmax</sub></p><h5 id="加速比"><a class="markdownIt-Anchor" href="#加速比"></a> 加速比</h5><p>设加速比为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">S_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，定义加速比为 m 段的 <strong>流水线的速度</strong> 与等功能的 <strong>非流水线的速度</strong> 之比。</p><p>设流水线各段时间为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\Delta t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal">t</span></span></span></span></p><p>完成n条指令在m段流水线上一共需要：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mi>m</mi><mo separator="true">⋅</mo><mi mathvariant="normal">Δ</mi><mi>t</mi><mo>+</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">⋅</mo><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">T=m·\Delta t+(n-1)·\Delta t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">m</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal">t</span></span></span></span></p><p>完成n条指令在等效的非流水线上共需：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>T</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>=</mo><mi>n</mi><mi>m</mi><mo separator="true">⋅</mo><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">T^{&#x27;} =nm·\Delta t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.94248em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">m</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal">t</span></span></span></span></p><p>则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>p</mi></msub><mo>=</mo><mfrac><mrow><mi>n</mi><mi>m</mi><mo separator="true">⋅</mo><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><mrow><mi>m</mi><mo separator="true">⋅</mo><mi mathvariant="normal">Δ</mi><mi>t</mi><mo>+</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">⋅</mo><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>n</mi><mi>m</mi></mrow><mrow><mi>m</mi><mo>+</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mfrac><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">S_p=\frac{nm·\Delta t}{m·\Delta t+(n-1)·\Delta t}=\frac{nm}{m+n-1}\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.392331em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mpunct mtight">⋅</span><span class="mord mtight">Δ</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mpunct mtight">⋅</span><span class="mord mtight">Δ</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">m</span><span class="mpunct mtight">⋅</span><span class="mord mtight">Δ</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0987230000000001em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span></span></span></p><h5 id="效率"><a class="markdownIt-Anchor" href="#效率"></a> 效率</h5><p>效率即流水线中各功能段的利用率，由于流水线有建立时间和排空时间因此各功能段的设备不可能一直处于工作状态。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619204921547.png" alt="image-20240619204921547" style="zoom:50%;" /><p>定义效率：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mfrac><mtext>流水线各段处于工作状态的时间区</mtext><mtext>流水线各段总的空时间区</mtext></mfrac><mo>=</mo><mfrac><mrow><mi>m</mi><mi>n</mi><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><mrow><mi>m</mi><mo stretchy="false">(</mo><mi>m</mi><mo>+</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mo>=</mo><mfrac><mi>n</mi><mrow><mi>m</mi><mo>+</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mfrac><mo>=</mo><mfrac><msub><mi>S</mi><mi>p</mi></msub><mi>m</mi></mfrac><mo>=</mo><msub><mi>T</mi><mi>p</mi></msub><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">E=\frac{流水线各段处于工作状态的时间区}{流水线各段总的空时间区}=\frac{mn\Delta t}{m(m+n-1)\Delta t}\\=\frac{n}{m+n-1}=\frac{S_p}{m}=T_p\Delta t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">流</span><span class="mord cjk_fallback mtight">水</span><span class="mord cjk_fallback mtight">线</span><span class="mord cjk_fallback mtight">各</span><span class="mord cjk_fallback mtight">段</span><span class="mord cjk_fallback mtight">总</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">空</span><span class="mord cjk_fallback mtight">时</span><span class="mord cjk_fallback mtight">间</span><span class="mord cjk_fallback mtight">区</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">流</span><span class="mord cjk_fallback mtight">水</span><span class="mord cjk_fallback mtight">线</span><span class="mord cjk_fallback mtight">各</span><span class="mord cjk_fallback mtight">段</span><span class="mord cjk_fallback mtight">处</span><span class="mord cjk_fallback mtight">于</span><span class="mord cjk_fallback mtight">工</span><span class="mord cjk_fallback mtight">作</span><span class="mord cjk_fallback mtight">状</span><span class="mord cjk_fallback mtight">态</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">时</span><span class="mord cjk_fallback mtight">间</span><span class="mord cjk_fallback mtight">区</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.392331em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mord mtight">Δ</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">n</span><span class="mord mtight">Δ</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0987230000000001em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.330651em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.985651em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">Δ</span><span class="mord mathnormal">t</span></span></span></span></p><p>其实就是<strong>实际吞吐率×各段用时</strong>。</p><h3 id="中断系统"><a class="markdownIt-Anchor" href="#中断系统"></a> 中断系统</h3><p>前面介绍过，采取中断的方式可以使CPU和I/O系统并行工作，提高效率。其实在实际运用中，除了I/O设备中断外，还有其他的中断。常见的中断类型如下：</p><ul><li>人为设置的中断，比如转管指令</li><li>程序性事故，比如溢出</li><li>硬件故障</li><li>I/O设备</li><li>外部事件，比如键盘中断</li></ul><p>中断系统为了处理这些中断，需要处理以下几个问题：</p><ol><li><p>各个中断源如何向CPU提出中断请求？</p><p>中断请求标记</p></li><li><p>多个中断源提出请求时，系统如何确定优先响应哪个中断源？</p><p>中断判优逻辑</p></li><li><p>CPU在什么条件、什么时候、以什么方式响应中断？</p><p>EINT、查询、中断向量表</p></li><li><p>CPU响应中断后如何保护现场？</p><p>中断隐指令</p></li><li><p>CPU响应中断后，如何停止原程序执行而转入中断服务程序的入口地址？</p><p>中断隐指令</p></li><li><p>中断处理结束后，CPU如何恢复现场，如何返回到原程序的中断处？</p><p>中断服务程序</p></li><li><p>中断处理过程中出现了新的中断，如何处理？</p><p>中断屏蔽技术</p></li></ol><p>接下来我们的内容将主要聚焦在解决这七个问题上。</p><p>（如果你学过8086汇编语言，你会发现这里的大多数问题在汇编语言的中断章节里都有介绍，如果你没有接触过汇编或者忘记了，可以参考这篇文章：<a href="https://adam8en.github.io/2024/06/12/%E8%AF%BE%E5%A0%82%E9%9A%8F%E7%AC%94/%E6%B1%87%E7%BC%96%E5%91%B3%E5%B0%8F%E9%A5%BC%E5%B9%B2/#%E4%B8%AD%E6%96%AD">汇编味小饼干 | Adam8en の 8log</a>）</p><h4 id="中断请求标记"><a class="markdownIt-Anchor" href="#中断请求标记"></a> 中断请求标记</h4><p>中断系统通过设置中断请求标记触发器来判断是哪个中断源提出了中断要求，简称中断请求标记INTR。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619212012390.png" alt="image-20240619212012390" style="zoom:50%;" /><p>一个中断源对应一个INTR触发器，多个INTR组成中断请求标记寄存器。当触发器被设为1时，表明有对应中断请求。中断系统的触发器越多，代表计算机对中断的处理能力越完善。</p><p>INTR既可以集中在CPU的中断系统内，也可以分布在各个中断源的接口电路中。</p><h4 id="中断判优逻辑"><a class="markdownIt-Anchor" href="#中断判优逻辑"></a> 中断判优逻辑</h4><p>判优实现有两种：硬件实现和软件实现。</p><p>硬件实现（排队器）又分两种：一种分散在各个中断源的接口电路中，使用链式排队器进行优先级划分；一种集中在CPU内，按照优先顺序1、2、3、4排列。当最高级的INTR=1时，可以封住比它级别的的中断源的请求。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619212505410.png" alt="image-20240619212505410" style="zoom:50%;" /><p>软件实现即通过程序查询，从高到低逐级查询是否有中断请求，</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619212605092.png" alt="image-20240619212605092" style="zoom:50%;" /><h4 id="中断服务程序入口地址的查找"><a class="markdownIt-Anchor" href="#中断服务程序入口地址的查找"></a> 中断服务程序入口地址的查找</h4><p>同样分为硬件向量法和软件查询法两种。</p><p>硬件向量法，即用向量地址形成部件，输入排队器输出，输出中断向量地址。速度快，但灵活性低。</p><p>硬件向量法又有两种方法：</p><ol><li>中断向量地址包含一条跳转指令，跳转到入口地址</li><li>在内存某一地方保持了入口地址，要把它取出来，送入PC</li></ol><p>第二种方法允许用户修改中断向量表的入口地址，即更新中断例程，灵活性相对较高。因为速度更快，计算机大多使用硬件向量法定位入口程序地址。</p><p>软件查询法即编写对应的程序，内容由程序员编制，可以灵活改变优先级，但是查询速度慢。目前计算机可以灵活使用两种方法找到入口地址。</p><h4 id="中断响应"><a class="markdownIt-Anchor" href="#中断响应"></a> 中断响应</h4><h5 id="响应中断的条件"><a class="markdownIt-Anchor" href="#响应中断的条件"></a> 响应中断的条件</h5><p>允许中断触发器EINT=1时。（类似8086汇编中的IF标志位，可以用<code>sti</code>和<code>cli</code>设置）</p><h5 id="响应中断的时间"><a class="markdownIt-Anchor" href="#响应中断的时间"></a> 响应中断的时间</h5><p>在指令执行周期结束时刻，由CPU 发查询信号</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619213414922.png" alt="image-20240619213414922" style="zoom:50%;" /><h5 id="中断隐指令"><a class="markdownIt-Anchor" href="#中断隐指令"></a> 中断隐指令</h5><p>中断隐指令，主要指的是三个步骤：</p><ol><li><p>保护程序断点</p><p>断点存于内存的特定地址（0号地址）或者断点进栈</p></li><li><p>寻找服务程序入口地址</p><p>硬件向量法或者软件查询法</p></li><li><p>硬件关中断</p><ul><li>单重中断：执行中断服务程序时不再允许发生中断</li><li>多重中断：保护程序软硬件状态的过程中，不允许发生中断</li></ul></li></ol><p>为什么叫这三个操作为“隐指令”，是因为它们都由计算机的硬件自动完成，而不是在某一条具体指令的驱动下完成。</p><h4 id="保护和恢复现场"><a class="markdownIt-Anchor" href="#保护和恢复现场"></a> 保护和恢复现场</h4><p>保护现场，指的是保存当前执行程序的断点地址以及寄存器中的内容。前者由中断隐指令完成，而后者交由中断服务程序完成。一般来说，是把当前过程中寄存器的值入栈来实现对现场的保护。</p><p>恢复现场，即跳转回原程序的断点地址并恢复其寄存器的内容，全部由中断服务程序完成。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240620170454344.png" alt="image-20240620170454344" style="zoom:50%;" /><p>即把寄存器内容<code>POP</code>出栈，然后调用<code>IRET</code>指令返回。</p><h4 id="中断屏蔽技术"><a class="markdownIt-Anchor" href="#中断屏蔽技术"></a> 中断屏蔽技术</h4><h5 id="多重中断"><a class="markdownIt-Anchor" href="#多重中断"></a> 多重中断</h5><p>前面我们说过，对于单重中断而言，如果进入中断程序，是不允许响应其他中断的。但如果在执行中断服务程序的过程中，出现了更重要的，需要及时处理的新事件，怎么办呢？这时候我们引入了多重中断屏蔽技术。</p><p>多重中断，即CPU在响应某个中断服务程序时，出现了新的中断请求，CPU又响应了这个请求。此时，CPU就会暂时停止这个服务程序，转去执行新的中断服务程序，执行完毕后再返回执行原来的中断服务程序。即“中断的中断”，又称为中断嵌套。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240620171033609.png" alt="image-20240620171033609" style="zoom:50%;" /><p>要实现多重中断，需要满足以下条件：</p><ol><li>提前设置开中断指令，否则CPU不会响应可屏蔽中断。</li><li>优先级别高的中断源有权中断优先级别低的中断源。</li></ol><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240620171411538.png" alt="image-20240620171411538" style="zoom:50%;" /><p>如上图所示，中断源优先级为A&gt;B&gt;C&gt;D。可以看到D在返回的过程中，接收到了中断源A的信号。此时CPU转而去执行中断A，然后再转回执行中断D，最后返回。</p><p>在中断B执行完后，C的中断请求还在，此时CPU只要发出中断查询信号就可以继续执行中断。</p><h5 id="屏蔽技术"><a class="markdownIt-Anchor" href="#屏蔽技术"></a> 屏蔽技术</h5><p>我们通过硬件屏蔽触发器来设计中断屏蔽字，来改变中断优先级，提高系统的灵活性。</p><p>将排队器集中在CPU内，加上屏蔽条件，就可以组成具有屏蔽功能的排队器，如图所示：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240620172902781.png" alt="image-20240620172902781" style="zoom:50%;" /><p>每个中断请求触发器都对应有一个屏蔽触发器，将所有的屏蔽触发器组合在一起，就可以构成一个屏蔽寄存器，屏蔽寄存器的内容称为屏蔽字。屏蔽字的内容和中断源的级别一一对应。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240620173142882.png" alt="image-20240620173142882" style="zoom:50%;" /><p>直观来看，<strong>就是说屏蔽字的数值越大，它的优先级越高</strong>。</p><p>通过设置屏蔽字，我们就可以改变<strong>处理优先等级</strong>。注意区分处理优先等级和响应优先等级的概念。</p><ul><li>响应优先级：是CPU通过轮询中断触发器实现的，因为是通过硬件确定的，所以不可改变。</li><li>处理优先级：可以通过更改屏蔽字来改变CPU对中断触发器的处理优先级。</li></ul><p>也就是说，通过设置屏蔽字，CPU仍然会按照硬件设计的顺序优先响应排在前面的中断源，但是在这之后，中断服务程序可能会被优先级更高的屏蔽字打断，转而去处理其他中断服务程序。</p><p>比如有如下中断源：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240620173902475.png" alt="image-20240620173902475" style="zoom:50%;" /><p>如果ABCD同时发出中断请求，就会有如下过程：</p><ol><li>首先，CPU优先响应请求A，此时A的处理优先级也是最高，没有中断程序打断，所以CPU会先执行完A的中断服务程序。</li><li>接着，CPU优先响应请求B，但是B的处理优先级低于D和C，所以将被打断。</li><li>C的响应优先级高于D，故CPU优先响应请求C，但是C的处理优先级低于D，故被D打断。</li><li>现在CPU开始处理请求D，没有被打断，于是处理完D的中断服务程序。</li><li>CPU处理完D转回处理中断C。</li><li>CPU处理C未遭打断，故成功执行完中断服务程序C。</li><li>最后，CPU转回处理并执行完中断服务程序B。</li></ol><p>以上过程绘图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240620174630650.png" alt="image-20240620174630650" style="zoom:50%;" /><p>注意，所有中断只会被响应一次。在处理完一个中断请求后，不需要再次响应已经被响应过的中断，而是直接返回处理原先的中断。</p><p>在开启屏蔽字技术后，中断处理请求流程图增加了置屏蔽字和恢复屏蔽字部分，绘图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240620175626160.png" alt="image-20240620175626160" style="zoom:50%;" /><p>在恢复现场前关中断是为了防止恢复过程中被新的中断打断，在恢复现场和屏蔽字后，必须要重新打开中断。</p><p>……</p><p>……</p><p>第五部分到此结束！敬请阅读第六部分💸</p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/105468887_p0.jpg" alt="11" /></p>]]></content>
    
    
    <summary type="html">计算机组成指北的第五部分！详细介绍了电脑中CPU的相关知识点。</summary>
    
    
    
    <category term="计算机组成指北" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E6%8C%87%E5%8C%97/"/>
    
    
    <category term="计算机组成原理" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="CPU的结构与功能" scheme="http://example.com/tags/CPU%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%8A%9F%E8%83%BD/"/>
    
    <category term="周期流水" scheme="http://example.com/tags/%E5%91%A8%E6%9C%9F%E6%B5%81%E6%B0%B4/"/>
    
    <category term="中断" scheme="http://example.com/tags/%E4%B8%AD%E6%96%AD/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成指北（四）</title>
    <link href="http://example.com/posts/f96ae6cd0b44/"/>
    <id>http://example.com/posts/f96ae6cd0b44/</id>
    <published>2024-09-27T03:42:55.000Z</published>
    <updated>2024-09-27T03:42:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第七章-指令系统"><a class="markdownIt-Anchor" href="#第七章-指令系统"></a> 第七章 指令系统</h2><blockquote><p>难度相对不大</p><p>扩展操作码技术<br />寻址方式包括指令的寻址和操作数的寻址，了解概念<br />指令集 risc和cisc的区别表</p></blockquote><p>至此，我们算是介绍完了计算机底层的硬件部分，最基础的M0层学习完毕🍾🍾🍾！</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/Cache_577189bb64f13db1.jpg" alt="Cache_577189bb64f13db1" /></p><p>呃等等，后面还有更难的M1层还没开始学呢……褒姒了。（还记得记得M0和M1吗？如果记不得就去复习下前面的计算机层次结构）</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/Cache_6818278e85975c59.jpg" alt="Cache_6818278e85975c59" /></p><p>不管怎么说，从这章开始，我们正式开始介绍计算机的指令系统，了解计算机是如何通过微指令的方式与硬件系统交互实现相应的功能。</p><h3 id="机器指令"><a class="markdownIt-Anchor" href="#机器指令"></a> 机器指令</h3><p>一般来说，指令的格式如下图所示：</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618212628477.png" alt="image-20240618212628477" /></p><p>顾名思义，操作码就是指示计算机应该做出什么样的控制行为，地址码则代表执行操作的内存地址（前提是该操作涉及到了与数据的交互）。</p><h4 id="操作码"><a class="markdownIt-Anchor" href="#操作码"></a> 操作码</h4><p>指令中的操作码反映了机器该做出什么样的操作。操作码的长度可以是固定的，也可以是可变的。前者比如RISC、IBM370等指令字较长时使用，后者则在字长较短的微型计算机被广泛采用，如Intel8086等。一般来说，可变长度的操作码会使控制器的设计变得复杂，所以我们采用<strong>扩展操作码技术</strong>对操作码进行扩充，从而减少指令字长。所谓扩展操作码技术，即通过减少地址码字段的长度来扩充操作码，从而保持指令字段整体长度不变。</p><p>以下是一种扩展操作码的安排示意图：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619152949278.png" alt="image-20240619152949278" style="zoom:50%;" /><p>我们可以很容积总结出扩展操作码的规律：十六位指令码分为四组，每一个小组由2<sup>4</sup>种组合，除零地址指令外，需要抽出1111来标识进入下一组，故每种地址指令（除零地址指令外）均有2<sup>4</sup>-1=15条。</p><p>如果需要进一步扩展操作码，可以通过减少地址指令条数来实现。比如三地址指令操作码，每减少一种可多构成2<sup>4</sup> 种二地址指令；二地址指令操作码，每减少一种可多构成2<sup>4</sup> 种一地址指令。这是因为每减少一条高地址指令，就会增加低地址指令额外的组成种类。</p><blockquote><p>例题：设指令字长16位，操作数地址码6位，指令有零地址、一地址、二地址3种。</p><p>（1）若操作码长度固定，零地址指令P种，一地址指令Q种，则二地址指令最多几种？</p><p>地址码6位，支持二地址指令，则操作码位数为</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mtext>−</mtext><mn>6</mn><mtext>−</mtext><mn>6</mn><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">16−6−6=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">−</span><span class="mord">6</span><span class="mord">−</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span></p><p>则总共有2<sup>4</sup>=16种指令，由于操作码长度固定，则二地址指令最多：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mtext>−</mtext><mi>P</mi><mtext>−</mtext><mi>Q</mi></mrow><annotation encoding="application/x-tex">16−P−Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord">−</span><span class="mord mathnormal">Q</span></span></span></span></p><p>（2）采用扩展操作码技术，若二地址指令X种，零地址指令Y种，则一地址指令最多几种？</p><p>二地址指令每减少一种，可构成2<sup>6</sup>种一地址指令，一地址指令每减少一种，可构成2<sup>6</sup>种零地址，二地址指令X种，则一地址指令最多：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mn>2</mn><mn>4</mn></msup><mtext>−</mtext><mi>X</mi><mo stretchy="false">)</mo><mo>×</mo><msup><mn>2</mn><mn>6</mn></msup></mrow><annotation encoding="application/x-tex">(2^4−X)×2^6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span>种</p><p>设一地址指令M种，则零地址指令最多<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msup><mn>2</mn><mn>4</mn></msup><mtext>−</mtext><mi>X</mi><mo stretchy="false">)</mo><mo>×</mo><msup><mn>2</mn><mn>6</mn></msup><mtext>−</mtext><mi>M</mi><mo stretchy="false">)</mo><mo>×</mo><msup><mn>2</mn><mn>6</mn></msup></mrow><annotation encoding="application/x-tex">((2^4−X)×2^6 −M)×2^6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span>种，因零地址指令Y种，解方程：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msup><mn>2</mn><mn>4</mn></msup><mtext>−</mtext><mi>X</mi><mo stretchy="false">)</mo><mo>×</mo><msup><mn>2</mn><mn>6</mn></msup><mtext>−</mtext><mi>M</mi><mo stretchy="false">)</mo><mo>×</mo><msup><mn>2</mn><mn>6</mn></msup><mo>=</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">((2^4−X)×2^6 −M)×2^6=Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span></p><p>可得一地址指令最多：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mn>2</mn><mn>4</mn></msup><mtext>−</mtext><mi>X</mi><mo stretchy="false">)</mo><mo>×</mo><msup><mn>2</mn><mn>6</mn></msup><mtext>−</mtext><mi>Y</mi><mo>×</mo><msup><mn>2</mn><mrow><mo>−</mo><mn>6</mn></mrow></msup></mrow><annotation encoding="application/x-tex">M=(2^4−X)×2^6−Y×2^{-6}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></span></p></blockquote><h4 id="地址码"><a class="markdownIt-Anchor" href="#地址码"></a> 地址码</h4><p>地址码用来指出该指令的源操作数的地址（一个或两个）、结果的地址以及下一条指令的地址，又分四地址操作码、三地址操作码、二地址操作码以及一地址操作码。</p><p>假设指令字长为32位，其中操作码固定8位，则有：</p><ul><li><p>四地址</p><p>寻址范围：2<sup>6</sup>=64</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619155842877.png" alt="image-20240619155842877" /></p></li><li><p>三地址</p><p>寻址范围：2<sup>8</sup>=256</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619160231545.png" alt="image-20240619160231545" /></p></li><li><p>二地址</p><p>寻址范围：2<sup>12</sup>=4K</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619160327394.png" alt="image-20240619160327394" /></p></li><li><p>一地址</p><p>寻址范围：2<sup>24</sup>=16M</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619160340900.png" alt="image-20240619160340900" /></p></li><li><p>零地址</p><p>零地址指令在指令字中无地址码，要么是不需要操作数的指令（空操作NOP、HLT停机等），要么是其操作数地址隐藏在堆栈中（子程序返回RET、中断返回IRET等）</p></li></ul><h4 id="指令字长"><a class="markdownIt-Anchor" href="#指令字长"></a> 指令字长</h4><p>早期的计算机指令字长一般是固定的，所以只需要取出固定的字长就可以执行指令。但是现在的计算机，指令字长一般是可变的。为了提高运行速度和节省存储空间，一般把指令设计为按字节的倍数变化。</p><h3 id="寻址方式"><a class="markdownIt-Anchor" href="#寻址方式"></a> 寻址方式</h3><p>寻址方式，即确定本条指令的操作数地址及下一条欲执行指令的指令地址。分为指令寻址和数据寻址。了解概念即可。</p><h4 id="指令寻址"><a class="markdownIt-Anchor" href="#指令寻址"></a> 指令寻址</h4><p>指令寻址的方式比较简单，即由程序计数器PC（Program Counter）按顺序指向下一条指令即可。如果遇到跳跃指令，则由跳跃指令指出下一条指令的地址。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619161533737.png" alt="image-20240619161533737" style="zoom:50%;" /><h4 id="数据寻址"><a class="markdownIt-Anchor" href="#数据寻址"></a> 数据寻址</h4><p>一般来说，数据寻址的格式如下图所示：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240619162256574.png" alt="image-20240619162256574" style="zoom:50%;" /><p>操作码代表对数据执行操作的类型；寻址特征代表执行什么样的寻址；形式地址A则储存数据的相关信息，它可能就是数据本身，也可能是数据所在的真实地址，也可能是数据所在地址的地址。一般来说，指令地址码中的字段通常不代表操作数的真实地址。</p><p>方便起见，我们约定指令字长=存储字长=机器字长；形式地址记为A，真实地址/有效地址记为EA。</p><blockquote><ol><li><strong>指令字长</strong>：指令字长是指CPU一次能够处理的指令的位数。在某些体系结构中，所有的指令都是固定长度的，例如16位、32位或64位。</li><li><strong>存储字长</strong>：存储字长是指存储器中每个存储单元能够存储的数据的位数。这通常与指令字长相同，意味着存储器中的每个单元可以存储相同数量的位。</li><li><strong>机器字长</strong>：机器字长是指CPU在执行算术和逻辑操作时能够一次性处理的数据位数。这通常与指令字长和存储字长相同，这样设计可以简化计算机的内部逻辑和提高效率。</li></ol></blockquote><p>数据寻址方式相对复杂，共有十种数据寻址方式，现一一介绍如下：</p><h5 id="立即寻址"><a class="markdownIt-Anchor" href="#立即寻址"></a> 立即寻址</h5><p>立即寻址时，此时形式地址A就是操作数，即输入立即数。</p><p>特点：</p><ul><li>指令执行阶段不访存</li><li>立即数是采用补码存放的，所以可正可负</li><li>A的位数限制了输入立即数的范围</li></ul><h5 id="直接寻址"><a class="markdownIt-Anchor" href="#直接寻址"></a> 直接寻址</h5><p>直接寻址时，有效地址由形式地址直接给出，EA=A。</p><p>特点：</p><ul><li>执行阶段访问一次寄存器</li><li>A的位数决定了该指令操作数的寻址范围</li><li>操作数的地址不易修改，此时必须要修改A</li></ul><h5 id="隐含寻址"><a class="markdownIt-Anchor" href="#隐含寻址"></a> 隐含寻址</h5><p>隐含寻址时，操作数地址隐含在操作码中。</p><p>比如8086的MUL指令，被乘数隐含在 AX（16位）或 AL（8位）中；MOVS 指令，源操作数的地址隐含在 SI 中，目的操作数的地址隐含在 DI 中。</p><p>特点：</p><ul><li>指令字中少了一个地址字段，可缩短指令字长</li></ul><h5 id="间接寻址"><a class="markdownIt-Anchor" href="#间接寻址"></a> 间接寻址</h5><p>间接寻址时，有效地址由形式地址间接提供，即形式地址指向真实地址的地址，类似指针的概念。间接寻址的次数视具体情况而定。EA=(A)。</p><p>特点：</p><ul><li>执行指令阶段会进行2次或多次访存</li><li>可以扩大寻址范围</li><li>便于编制程序，指针的运用十分方便</li></ul><h5 id="寄存器寻址"><a class="markdownIt-Anchor" href="#寄存器寻址"></a> 寄存器寻址</h5><p>寄存器寻址时，有效地址即为寄存器编号，数据储存在寄存器中，EA=R<sub>i</sub>。</p><p>特点：</p><ul><li>执行阶段不访存，只访问寄存器，执行速度快</li><li>寄存器个数有限，故指令字较短，可以缩短指令字长</li></ul><h5 id="寄存器间接寻址"><a class="markdownIt-Anchor" href="#寄存器间接寻址"></a> 寄存器间接寻址</h5><p>寄存器间接寻址时，有效地址在寄存器编号中，EA=(R<sub>i</sub>)。</p><p>特点：</p><ul><li>有效地址在寄存器中，操作数在存储器中，执行阶段访存。它比间接寻址少访存一次。</li><li>一般用于编制循环程序</li></ul><h5 id="基址寻址"><a class="markdownIt-Anchor" href="#基址寻址"></a> 基址寻址</h5><p>基址寻址又分为两种：隐式基址寻址和显示基址寻址。</p><h6 id="隐式基址寻址"><a class="markdownIt-Anchor" href="#隐式基址寻址"></a> 隐式基址寻址</h6><p>即采用专用寄存器作基址寄存器，此时EA=(BR)+A，BR为基址寄存器。</p><p>例如8086CPU中，默认DS为段地址寄存器，DI为段偏移地址寄存器。在访问数据时，真实的内存地址表现为：DS*16+DI，扩大了数据表示范围。</p><p>特点：</p><ul><li>可扩大寻址范围</li><li>有利于多道程序</li><li>BR的内容由操作系统或者管理程序确定</li><li>在程序执行过程中BR内容不变，形式地址可变</li></ul><h6 id="显示基址寻址"><a class="markdownIt-Anchor" href="#显示基址寻址"></a> 显示基址寻址</h6><p>即采用通用寄存器作基址寄存器，此时EA=(R<sub>0</sub>)+A，R<sub>0</sub>为用户自己指定的通用寄存器。</p><p>特点：</p><ul><li>由用户指定哪个通用寄存器作为基址寄存器</li><li>基址寄存器的内容由操作系统确定</li><li>在程序的执行过程中 R0  内容不变，形式地址 A 可变</li></ul><h5 id="变址寻址"><a class="markdownIt-Anchor" href="#变址寻址"></a> 变址寻址</h5><p>变址寻址与基址寻址极为相似，其有效地址EA等于指令字中的形式地址A与变址寄存器的内容相加之和，即EA=A+(IX)。</p><p>由于两者的应用场合不同，所以我们主要通过应用场景来区分变址寻址和基址寻址。基址寻址主要用于为程序或数据分配存储空间，由操作系统或管理程序决定，故程序执行过程中其值不可变；而变址寻址的内容是由用户设定的，在执行过程中内容可变，而指令字的A不可变，主要用来处理<strong>数组问题</strong>。</p><p>比如在数组处理过程中，设定A为数组的首地址，然后通过改变变址寄存器的值来访问数组的各个元素，特别适合编制循环程序。</p><p>特点如下：</p><ul><li>可以扩大寻址范围</li><li>IX的内容由用户给定</li><li>在程序的执行过程中 IX 内容可变，形式地址 A 不变</li><li>便于处理数组问题</li></ul><h5 id="相对寻址"><a class="markdownIt-Anchor" href="#相对寻址"></a> 相对寻址</h5><p>相对寻址的有效地址是将程序计数器PC的内容（即当前指令地址）与指令字中的形式地址相加而成，即EA=(PC)+A。A 是相对于当前指令的位移量（可正可负，补码）</p><p>特点：</p><ul><li>A的位数决定操作数的寻址范围</li><li>对于编写浮动程序特别有利，无论程序在主存的哪段区域都能正常运行</li><li>广泛应用于转移指令</li></ul><h5 id="堆栈寻址"><a class="markdownIt-Anchor" href="#堆栈寻址"></a> 堆栈寻址</h5><p>堆栈可以分为硬堆栈和软堆栈两种，前者由多个寄存器实现，后者由指定的存储空间实现。堆栈的运行方式可以分为先进后出和先进先出两种。先进后出型堆栈的操作数只能从一个出入口进行读写，栈顶地址由寄存器SP指出。因此堆栈寻址本质上也可以视为寄存器间接寻址。</p><p>整理表格如下：</p><table><thead><tr><th>寻址方式</th><th>说明</th><th>特点</th></tr></thead><tbody><tr><td>立即寻址</td><td>此时形式地址A就是操作数，即输入立即数。</td><td>- 指令执行阶段不访存<br> - 立即数是采用补码存放的，所以可正可负<br> - A的位数限制了输入立即数的范围</td></tr><tr><td>直接寻址</td><td>有效地址由形式地址直接给出，EA=A。</td><td>- 执行阶段访问一次寄存器<br> - A的位数决定了该指令操作数的寻址范围<br> - 操作数的地址不易修改，此时必须要修改A</td></tr><tr><td>隐含寻址</td><td>操作数地址隐含在操作码中。</td><td>- 指令字中少了一个地址字段，可缩短指令字长</td></tr><tr><td>间接寻址</td><td>有效地址由形式地址间接提供，即形式地址指向真实地址的地址，类似指针的概念。</td><td>- 执行指令阶段会进行2次或多次访存<br> - 可以扩大寻址范围<br> - 便于编制程序，指针的运用十分方便</td></tr><tr><td>寄存器寻址</td><td>有效地址即为寄存器编号，数据储存在寄存器中，EA=R<sub>i</sub>。</td><td>- 执行阶段不访存，只访问寄存器，执行速度快<br> - 寄存器个数有限，故指令字较短，可以缩短指令字长</td></tr><tr><td>寄存器间接寻址</td><td>有效地址在寄存器编号中，EA=(R<sub>i</sub>)。</td><td>- 有效地址在寄存器中，操作数在存储器中，执行阶段访存。它比间接寻址少访存一次。<br> - 一般用于编制循环程序</td></tr><tr><td>基址寻址</td><td>基址寻址分为隐式基址寻址和显示基址寻址。</td><td></td></tr><tr><td>隐式基址寻址</td><td>采用专用寄存器作基址寄存器，此时EA=(BR)+A，BR为基址寄存器。</td><td>- 可扩大寻址范围<br> - 有利于多道程序<br> - BR的内容由操作系统或者管理程序确定<br> - 在程序执行过程中BR内容不变，形式地址可变</td></tr><tr><td>显示基址寻址</td><td>采用通用寄存器作基址寄存器，此时EA=(R<sub>0</sub>)+A，R<sub>0</sub>为用户自己指定的通用寄存器。</td><td>- 由用户指定哪个通用寄存器作为基址寄存器<br> - 基址寄存器的内容由操作系统确定<br> - 在程序的执行过程中 R0 内容不变，形式地址 A 可变</td></tr><tr><td>变址寻址</td><td>有效地址EA等于指令字中的形式地址A与变址寄存器的内容相加之和，即EA=A+(IX)。</td><td>- 可以扩大寻址范围<br> - IX的内容由用户给定<br> - 在程序的执行过程中 IX 内容可变，形式地址 A 不变<br> - 便于处理数组问题</td></tr><tr><td>相对寻址</td><td>有效地址是将程序计数器PC的内容（即当前指令地址）与指令字中的形式地址相加而成，即EA=(PC)+A。</td><td>- A的位数决定操作数的寻址范围<br> - 对于编写浮动程序特别有利，无论程序在主存的哪段区域都能正常运行<br> - 广泛应用于转移指令</td></tr><tr><td>堆栈寻址</td><td>堆栈可以分为硬堆栈和软堆栈两种，前者由多个寄存器实现，后者由指定的存储空间实现。</td><td>- 堆栈的运行方式可以分为先进后出和先进先出两种。<br> - 堆栈寻址本质上也可以视为寄存器间接寻址。</td></tr></tbody></table><h3 id="指令集"><a class="markdownIt-Anchor" href="#指令集"></a> 指令集</h3><p>主要了解两种指令集：</p><ul><li>RISC（Reduced Instruction Set Computer）精简指令集计算机</li><li>CISC（Complex Instruction Set Computer）复杂指令集计算机</li></ul><p>下面的比较图需要牢固记忆：</p><table><thead><tr><th></th><th>RISC</th><th>CISC</th></tr></thead><tbody><tr><td>CPU</td><td>体积小、能耗低、性能功耗比高</td><td>体积大、能耗高、性能功耗比低</td></tr><tr><td>计算效率</td><td>低</td><td>高</td></tr><tr><td>软件</td><td>体积大、指令复杂度高</td><td>体积小、指令复杂度低</td></tr><tr><td>代表性产品</td><td>ARM</td><td>x86</td></tr></tbody></table><p>现在CISC与RISC正在逐步走向融合。</p><p>……</p><p>……</p><p>第四章到此结束！敬请阅读第五部分👍</p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/B457C9EC79F0421BB773651E8FFE5F05.jpg" alt="B457C9EC79F0421BB773651E8FFE5F05" /></p>]]></content>
    
    
    <summary type="html">计算机组成指北的第四部分！介绍了计算机的指令系统，难度不大，如果有汇编基础将会很容易理解。</summary>
    
    
    
    <category term="计算机组成指北" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E6%8C%87%E5%8C%97/"/>
    
    
    <category term="计算机组成原理" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="指令系统" scheme="http://example.com/tags/%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成指北（三）</title>
    <link href="http://example.com/posts/1da683a19632/"/>
    <id>http://example.com/posts/1da683a19632/</id>
    <published>2024-09-27T03:42:38.000Z</published>
    <updated>2024-09-27T03:42:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第五章-输入输出系统"><a class="markdownIt-Anchor" href="#第五章-输入输出系统"></a> 第五章 输入输出系统</h2><blockquote><p>相对来说不是那么重要的一章，只需理解概念就可</p><p>输入输出系统知道概念，I/O处理机知道干嘛就行。主要要知道三种控制方式：程序查询方式、中断方式、dma方式</p></blockquote><p>CPU除了要和存储器交换信息外，还需要和外部设备进行通信。这一章我们来介绍计算机的输入输出系统。</p><h3 id="io系统发展概况"><a class="markdownIt-Anchor" href="#io系统发展概况"></a> I/O系统发展概况</h3><p>I/O系统发展经历了四个阶段：</p><ol><li>分散连接。早期主机和I/O设备分散直连，I/O的控制由CPU来负责，因此整个I/O期间I/O和CPU需要一直保持联络，由于速率的不对等，因此一个I/O周期中CPU大部分时间处于是停等状态。</li><li>接口模块和DMA阶段。为了提高效率，出现了I/O接口和DMA控制器。I/O设备通过I/O接口连入I/O总线，DMA控制器专门负责I/O的控制，从而解放出CPU，使得CPU在I/O周期间不必停等。CPU和I/O之间是并行的。此方式中I/O的控制均交给DMA控制器来完成（指令交给控制器来负责），但是控制器不具备数据的处理功能（如读数、写数），因此数据的处理功能仍然要走CPU。</li><li>通道。一种简单的处理器，比起DMA多了数据处理功能，使得I/O的控制、数据处理完全从CPU中剥离出来，为CPU减负。一个通道可以连接多个I/O设备，即一条通道供多个I/O设备“行走”。</li><li>I/O处理机。通道技术的升级版，直接采用和主机CPU结构相同的小型CPU来完全负责I/O的控制和数据处理。</li></ol><h3 id="io设备与主机信息传送的控制方式"><a class="markdownIt-Anchor" href="#io设备与主机信息传送的控制方式"></a> I/O设备与主机信息传送的控制方式</h3><p>分为程序查询方式，中断方式，DMA方式三种。</p><h4 id="程序查询方式"><a class="markdownIt-Anchor" href="#程序查询方式"></a> 程序查询方式</h4><p>结构图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617174213371.png" alt="image-20240617174213371" style="zoom:50%;" /><p>数据先到CPU寄存器，再转存到主存当中。这种方式CPU会一直反复查询I/O设备的状态，仿佛在原地踏步，将CPU和I/O设备处于串行的工作状态，因此工作效率不高。</p><h4 id="中断方式"><a class="markdownIt-Anchor" href="#中断方式"></a> 中断方式</h4><p>结构图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617174302937.png" alt="image-20240617174302937" style="zoom:50%;" /><p>执行第K条指令时，如果外部设备准备好，将向CPU提出一个中断请求，此时再开始向CPU传送数据，而CPU无须终止原程序的执行，没有“踏步”现象，提高了工作效率。但是这需要额外增加相应的电路，并在软件中编制中断服务的程序。</p><h4 id="dma方式"><a class="markdownIt-Anchor" href="#dma方式"></a> DMA方式</h4><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617174331688.png" alt="image-20240617174331688" style="zoom:50%;" /><p>虽然用程序中断方式消除了“踏步”现象，但是CPU接到响应请求后，必须停止现行程序而转入中断服务，这也是对CPU资源的消耗。因此，我们采用直接存储器存取/DMA的方式，让I/O设备通过总线直接与主存交换信息，这样就进一步节省了CPU的资源。</p><p>DMA要使用总线，所以有周期挪用。</p><p>DMA发出请求，占用总线存取周期，用于I/O和主存间数据传输。</p><h2 id="第六章-计算机的运算方法"><a class="markdownIt-Anchor" href="#第六章-计算机的运算方法"></a> 第六章 计算机的运算方法</h2><blockquote><p>全程高能，必考且重要且晦涩</p></blockquote><p>我们已经了解了计算机如何与外界进行通信，以及外部的运行原理。现在，让我们把目光看向计算机中最重要也是最精巧的组成部分：中央处理器CPU（Central Process Unit）。CPU主要由四个部分组成：</p><ul><li>ALU，算数逻辑单元。负责执行所有的算术运算和逻辑运算。</li><li>寄存器。一组快速的存储位置，用于临时存储指令、数据和地址等信息。寄存器直接与ALU交互，比主存储器快得多。</li><li>中断系统。允许外部设备或软件中断当前的程序执行流程，以响应紧急事件或需求。</li><li>CU，控制单元。负责解释指令并生成控制信号，以协调CPU内部各部件的操作和其他系统组件。</li></ul><p>本章中，我们着力学习计算机的ALU部分。</p><p>这里主要复习计算机的内部运算和算术逻辑单元的实现，至于基础的机器数表示方法则不过多介绍，可以参考我在数字逻辑是做的笔记：<a href="https://adam8en.github.io/2023/10/07/%E8%AF%BE%E5%A0%82%E9%9A%8F%E7%AC%94/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%B0%8F%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E6%95%B0%E5%88%B6%E5%9F%BA%E7%A1%80/">数字逻辑小结（一）—— 数制基础 | Adam8en の 8log</a></p><p>这里只简单的介绍原码、反码、补码、移码的概念</p><ul><li>原码：一个二进制数，包括一个符号位和数值位。符号位等于0为正数，等于1为负数。</li><li>反码：正数的反码是它本身，负数的反码是除符号位外全部取反。</li><li>补码：正数的补码是它本身，负数的补码是它的反码末位+1。</li><li>移码：n为整数的位数，[x]<sub>移</sub>=2<sup>n</sup>+x；与补码的区别只有符号位相反。</li></ul><h3 id="数的定点表示"><a class="markdownIt-Anchor" href="#数的定点表示"></a> 数的定点表示</h3><p>在定点机中，定点表示有两种方式：小数定点机和整数定点机。</p><ul><li><p>在小数定点机中，小数点位于数符和数值部分之间，表示纯小数。</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617191648087.png" alt="image-20240617191648087" /></p></li><li><p>在整数定点机中，小数点位于数值部分末尾，表示纯整数。</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617191700990.png" alt="image-20240617191700990" /></p></li></ul><p>当机器处理的数不是一个纯小数或者纯整数时，必须要乘以一个“比例因子”，不然会产生溢出。</p><h3 id="数的浮点表示"><a class="markdownIt-Anchor" href="#数的浮点表示"></a> 数的浮点表示</h3><p>浮点数的一般表现形式为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><mi>S</mi><mo>×</mo><msup><mi>r</mi><mi>j</mi></msup></mrow><annotation encoding="application/x-tex">N=S\times r^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span></span></span></span>。</p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>为尾数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>为阶码，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>为基数；r可以取2、4、6、8、16等（一般取2）。</p><p>比如N=11.0101=1.10101×2<sup>1</sup>=0.110101×2<sup>10</sup>（二进制）。在计算机中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>是小数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>是整数，均可正可负。</p><h4 id="表示形式"><a class="markdownIt-Anchor" href="#表示形式"></a> 表示形式</h4><p>计算机中一般使用如下结构来表示一个浮点数：</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617192423991.png" alt="image-20240617192423991" /></p><ul><li>S<sub>f</sub>代表浮点数的符号</li><li>n反映浮点数的精度</li><li>m反映浮点数的表示范围</li><li>j<sub>f</sub>和m共同表示小数点的实际位置</li></ul><h4 id="表示范围"><a class="markdownIt-Anchor" href="#表示范围"></a> 表示范围</h4><p>这个不强求记忆，看看图理解就好了</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617193019750.png" alt="image-20240617193019750" style="zoom:50%;" /><h4 id="规格化形式"><a class="markdownIt-Anchor" href="#规格化形式"></a> 规格化形式</h4><p>规格化数，即要求尾数的最高位为1。</p><p>故N=11.0101的规格化数的表现形式为0.110101×2<sup>10</sup>。</p><p>规格化数中，原码不论正负数第一数位都为1，而补码符号位和第一数位不同。</p><ul><li>左规：尾数左移一位，阶码减 1，直到数符和第一数位不同为止。</li><li>右规：当 尾数溢出（ &gt;1）时，需右规；尾数右移一位，阶码加 1。</li></ul><blockquote><p>例题：将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo><mfrac><mn>19</mn><mn>128</mn></mfrac><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">+\frac{19}{128}\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord">+</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span></span></span>写成二进制定点数、浮点数及在定点机和浮点机中的机器数形式。其中数值部分均取 10 位，数符取 1 位，浮点数阶码取 5 位（含1位阶符）。</p><p>二进制形式：0.0010011</p><p>定点表示：0.0010011000</p><p>浮点化规格表示：0.1001100000×2<sup>-10</sup></p><p>定点机：[x]<sub>原</sub> = [x]<sub>补</sub> = [x]<sub>反</sub> = 0.0010011000</p><p>浮点机：[x]<sub>原</sub> = 1, 0010;  0. 1001100000</p><p>​[x]<sub>补</sub> = 1, 1110;  0. 1001100000</p><p>​[x]<sub>反</sub> = 1, 1101;  0. 1001100000</p></blockquote><h3 id="定点运算"><a class="markdownIt-Anchor" href="#定点运算"></a> 定点运算</h3><p>重要⚠️！复习提纲上没有涉及浮点数的四则运算，所以这就是Boss了。</p><h4 id="移位运算"><a class="markdownIt-Anchor" href="#移位运算"></a> 移位运算</h4><table border="2" >    <caption>算数移位规则·符号位不变</caption>    <tr ><td>真值</td>        <td>码制</td>        <td>添补代码</td></tr>    <tr ><td>正数</td>        <td>原码、补码、反码</td>        <td>0</td></tr><tr ><td rowspan="4">负数</td><td>原码</td>        <td>0</td></tr><tr ><td rowspan="2">补码</td>        <td>左移 添0</td></tr>    <tr ><td>右移 添1</td></tr>    <tr ><td>反码</td>        <td>1</td></tr></table><p>通过移位来进行加减法运算。</p><p>移位又分算术移位和逻辑移位，算术移位上述表格已经给出规则，适用于有符号数的运算。对于无符号数的运算，通常使用逻辑移位。</p><ul><li>逻辑左移：低位添0，高位移丢</li><li>逻辑右移：高位添0，低位移丢</li></ul><h4 id="加减法运算"><a class="markdownIt-Anchor" href="#加减法运算"></a> 加减法运算</h4><p>补码加减法运算公式有：</p><ol><li><p>加法：</p><ul><li>整数：[A]<sub>补</sub> + [B]<sub>补</sub>= [A+B]<sub>补</sub>（mod 2<sup>n+1</sup>）</li><li>小数：[A]<sub>补</sub> + [B]<sub>补</sub>= [A+B]<sub>补</sub>（mod <sup>2</sup>）</li></ul></li><li><p>减法：</p><p>即加上相反数的加法运算A-B=A+(-B)</p><ul><li>整数：[A – B]<sub>补</sub>= [A+(–B )]<sub>补</sub>= [A]<sub>补</sub> + [ – B]<sub>补</sub>(mod 2<sup>n+1</sup>)</li><li>小数：[A – B]<sub>补</sub>= [A+(–B )]<sub>补</sub>= [A]<sub>补</sub> + [ – B]<sub>补</sub>(mod 2)</li></ul></li></ol><p>即加上两数的补码，连同符号位一起相加，符号位产生的进位自然丢掉。</p><h4 id="溢出判断"><a class="markdownIt-Anchor" href="#溢出判断"></a> 溢出判断</h4><p>溢出有分两种情况：一位符号位的溢出与两位符号位的溢出</p><p>先讨论一位符号位的：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617205017557.png" alt="image-20240617205017557" style="zoom: 80%;" /><p>参加操作的两个数（减法时即为被减数和“求补”以后的减数）符号相同，其结果的符号与原操作数的符号不同时，即为溢出。</p><p>再来看两位符号位的溢出：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617205310191.png" alt="image-20240617205310191" style="zoom:80%;" /><p>即把符号位写两遍，然后进行运算。如果双符号位最终不同，就为溢出。</p><h4 id="乘法运算"><a class="markdownIt-Anchor" href="#乘法运算"></a> 乘法运算</h4><h5 id="原码一位乘"><a class="markdownIt-Anchor" href="#原码一位乘"></a> 原码一位乘</h5><p>观察下图，我们可以总结规律：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617205811311.png" alt="image-20240617205811311" style="zoom:50%;" /><p>概括一下定点原码一位乘的步骤：先在0上加一个被乘数，右移一位；再在部分积上逆序乘数加，同时被乘数继续右移一位。</p><p>乘法运算可用加和移位实现。当n = 4时，加 4 次，移 4 次。由乘数的末位决定被乘数是否与原部分积相加，然后右移1位形成新的部分积，同时乘数右移1位（末位移丢），空出高位存放部分积的低位。然后再将被乘数只与部分积的高位相加。</p><p>如果对象是小数，那么数值部分按以上规则用绝对值相乘，符号位部分单独做异或处理。</p><p>归纳成次序步骤可以总结如下：</p><ol><li>列出竖式，写出被乘数和乘数的数值部分</li><li>首先，初态为0，加上一个被乘数</li><li>得到的和应该和被乘数相等，然后右移一位得到第一个部分积。同时乘数也要右移一位。</li><li>此时，引入乘数，根据乘数的末尾值是否1来判断是否加上一个被乘数。如果为1，则加上一个被乘数；如果为0，则加上0。（这里假设末位为1）</li><li>部分积加上一个乘数，得到一个和。</li><li>将和右移一位得到新的部分积，同时乘数右移一位：低位直接移丢，空出来的高位用来存储部分积右移移丢的低位值。</li><li>重复以上步骤n次，n为被乘数与乘数的长度，最后的积即为部分积拼接上乘数，此时存储乘数的寄存器内存储的应该是被乘数部分积在不断右移中移丢的低位积部分。</li><li>符号位单独异或处理，判断正负。</li></ol><p>需要硬件实现：3个具有移位功能的寄存器，1个全加器。</p><p>以下竖式笔算计算机乘法（13×11=143=10001111）步骤供参考：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617210127927.png" alt="image-20240617210127927" style="zoom:50%;" /><p>拼接被乘数和乘数寄存器内的数值，最后结果为0.10001111，经验证正确。</p><p>原码一位乘的特点是：</p><ul><li>绝对值运算</li><li>用移位的次数判断乘法是否结束</li><li>逻辑移位</li></ul><h5 id="原码两位乘"><a class="markdownIt-Anchor" href="#原码两位乘"></a> 原码两位乘</h5><ul><li>原码乘的含义是：符号位和数值位部分分开运算</li><li>两位乘的含义是：每次用乘数的2位判断原部分积是否加和如何加被乘数</li></ul><p>运算法则如下表所示：</p><table><thead><tr><th>乘数y<sub>n-1</sub>y<sub>n</sub></th><th>新的部分积</th></tr></thead><tbody><tr><td>0 0</td><td>加0，右移两位</td></tr><tr><td>0 1</td><td>加1倍的被乘数，右移两位</td></tr><tr><td>1 0</td><td>加2倍的被乘数，右移两位</td></tr><tr><td>1 1</td><td>加3倍的被乘数，右移两位</td></tr></tbody></table><p>我们知道加1倍的被乘数就是直接算加法，两倍的被乘数就是先把被乘数进行算数左移1位后再与原部分积相加，那么3倍的被乘数怎么算呢？</p><p>答案是通过先减去1倍的被乘数再加上4倍的被乘数，也就是减去一个被乘数后再加上被乘数算数左移2位的值，我们需要留到下次再加，用一个进位标志C，来记录这次没加上的4倍。至于减法，我们选择计算加上其相反数的补码，这样可以方便运算。</p><p>引入进位标志C后，运算规律可以参考下列的表格，更加逻辑化：</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618144232292.png" alt="image-20240618144232292" /></p><p>这里给出一个例题，原码二位乘的运算过程可以参考如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618144436770.png" alt="image-20240618144436770" style="zoom:50%;" /><p>要加2x，和的绝对值可能大于2，因此小数点左边取3位，最高位才是真正的符号位。</p><p>注意：在乘数（偶数）前面加两个0/（奇数）前面加一个0，若仍有进位没处理时，可以处理掉，使C重新等于0。这些添加的0非乘数本身数值，因此最后一步不用移位</p><p>其中符号位仍然继续使用异或来判断。</p><p>原码二位乘加快了计算机的远算速度，有以下几个特点：</p><ol><li>绝对值的<strong>补码运算</strong></li><li>用移位的次数判断乘法是否结束</li><li>算术移位</li></ol><p>相比原码一位乘只是多了个补码运算，用于计算减法。</p><p>下表列出了原码一位乘和原码二位乘的比较：</p><table><thead><tr><th></th><th>原码一位乘</th><th>原码两位乘</th></tr></thead><tbody><tr><td>符号位</td><td>x<sub>0</sub>⊕y<sub>0</sub></td><td>x<sub>0</sub>⊕y<sub>0</sub></td></tr><tr><td>操作数</td><td>绝对值</td><td>绝对值的补码</td></tr><tr><td>移位</td><td>逻辑右移</td><td>算数右移</td></tr><tr><td>移位次数</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>n</mi><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>n</mi><mtext>为偶数</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{n}2(n为偶数)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">偶</span><span class="mord cjk_fallback">数</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>n</mi><mn>2</mn></mfrac><mo>+</mo><mn>1</mn><mo stretchy="false">(</mo><mi>n</mi><mtext>为奇数</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{n}2+1(n为奇数)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">奇</span><span class="mord cjk_fallback">数</span><span class="mclose">)</span></span></span></span></td></tr><tr><td>最多加法次数</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>n</mi><mn>2</mn></mfrac><mo>+</mo><mn>1</mn><mo stretchy="false">(</mo><mi>n</mi><mtext>为偶数</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{n}2+1(n为偶数)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">偶</span><span class="mord cjk_fallback">数</span><span class="mclose">)</span></span></span></span></td></tr></tbody></table><h5 id="补码一位乘"><a class="markdownIt-Anchor" href="#补码一位乘"></a> 补码一位乘</h5><p>我先给出PPT上的运算方法</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618161452567.png" alt="image-20240618161452567" style="zoom:50%;" /><p>补码一位乘，又称<strong>校正法</strong>。我不知道多少人是和我一样根本看不懂这一页是在讲什么的，但是好歹只是个求补码，我决定还是采用自己的方法去计算，即：除符号位全部取反后末位加1。</p><p>所以这里我们抛开晦涩的教材，自己来总结一下补码一位乘的计算方法，其实大致和原码一位乘的方法相似，特点如下：</p><ol><li>当被乘数符号任意，乘数为正时：运算规则同原码乘，但加和移位的方法要按照补码运算的规则，此时乘积的符号会自然形成而无非单独进行异或运算。</li><li>当被乘数符号任意，乘数为负时：乘数为[y]<sub>补</sub>，去掉符号位当成正数与被乘数进行运算，步骤同1。最后要加上[–x]<sub>补</sub>，进行<strong>校正</strong>。</li><li>运算时可能会出现绝对值大于1的情况，但此时并不是溢出，所以采用双符号位的方式计算。</li></ol><p>这里给出一道例题供参考：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/IMG_20240618_164350.jpg" alt="IMG_20240618_164350" style="zoom: 25%;" /><p>注意，最后加上[–x]<sub>补</sub>进行修正时，不需要再进行移位。</p><h5 id="booth算法"><a class="markdownIt-Anchor" href="#booth算法"></a> Booth算法</h5><p>Booth算法，又称<strong>比较法</strong>。适用于符号任意的被乘数与乘数，具有普适性。由于比较法的补码乘法运算规则不受符号约束，因此控制线路比较简明，在计算机中普遍采用。</p><p>比较法的公式过于抽象，这里就不再赘述，不方便理解。其实本质上还是继续加上[–x]<sub>补</sub>，然后右移一位的迭代过程。每次要不要加[–x]<sub>补</sub>，由y<sub>i+1</sub>和y<sub>i</sub>决定。其运算规律如下表所示：</p><table><thead><tr><th>y<sub>i</sub>y<sub>i+1</sub></th><th>y<sub>i+1</sub> -  y<sub>i</sub></th><th>操作</th></tr></thead><tbody><tr><td>0    0</td><td>0</td><td>右移一位</td></tr><tr><td>0    1</td><td>1</td><td>+[x]<sub>补</sub>，右移一位</td></tr><tr><td>1    0</td><td>-1</td><td>+[–x]<sub>补</sub>，右移一位</td></tr><tr><td>1    1</td><td>0</td><td>右移一位</td></tr></tbody></table><p>记住，比较法的最后一步不移位。</p><p>与校正法相比，比较法的部分积仍然取双符号位。乘数因为符号位参与运算，所以多取一位。</p><p>给出例题参考如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618165410762.png" alt="image-20240618165410762" style="zoom:50%;" /><h5 id="乘法小结"><a class="markdownIt-Anchor" href="#乘法小结"></a> 乘法小结</h5><p>介绍了原码乘法和补码乘法后，总结如下：</p><ul><li>整数乘法与小数乘法完全相同，可用逗号代替小数点</li><li>原码乘符号位单独处理；补码乘符号位自然形成</li><li>原码乘去掉符号位运算，即为无符号数乘法</li><li>不同的乘法运算需有不同的硬件支持</li></ul><h4 id="除法运算"><a class="markdownIt-Anchor" href="#除法运算"></a> 除法运算</h4><p>除法运算分为恢复除数法和不恢复除数法。恢复除数法即使用加法器不断的作负数补码的加法来试探减法，一旦结果小于0则恢复除数，右移一位继续。这种做法降低了计算的效率，所以我们这里只介绍不恢复余数法。两种除法均为原码运算，故符号位需要单独处理。</p><p>不恢复余数法的步骤可以概括如下，大抵和前面介绍的乘法原码计算步骤类似：</p><p>（注意，y*表示y的绝对值）</p><ol><li>列出被除数（也即余数，比如0.1011）、商（当n=4的情况下，初始化为0.0000）</li><li>首先加上[-y*]<sub>原</sub>，即被除数减去除数，判断是否溢出</li><li>如果余数的符号位为1，小于0：<ul><li>上商0</li><li>商与余数均逻辑左移一位</li><li>+[y*]<sub>原</sub>，即加上除数</li></ul></li><li>如果余数的符号位为0，大于0：<ul><li>上商1</li><li>商与余数均逻辑左移一位</li><li>+[-y*]<sub>原</sub>，即继续减去除数</li></ul></li><li>这个步骤重复上商n+1次，总共需要逻辑左移n次，用移位的次数判断除法是否结束</li><li>符号位最后单独进行异或运算</li></ol><p>下面给出例题作为参考：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618171714654.png" alt="image-20240618171714654" style="zoom:50%;" /><p>补码的除法运算这里略过不讲，期末大概不会考它。</p><h3 id="快速进位链"><a class="markdownIt-Anchor" href="#快速进位链"></a> 快速进位链</h3><p>我们已经在数学层面上学习了如何实现计算机的运算，接下来我们来讨论如何在硬件层面上设计计算机的运算系统，这里主要以ALU加法器为例。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618193730404.png" alt="image-20240618193730404" style="zoom:50%;" /><p>其中，A和B是输入变量，可以通过设置k工作信号的值，来选择ALU的功能，最后把结果输出到F。ALU没有记忆，因此需要在A、B和F处连接寄存器储存变量的值。在ALU中，最核心的组成部分就是快速进位链，接下来我们来学习如何设计快速进位链。</p><h4 id="并行加法器"><a class="markdownIt-Anchor" href="#并行加法器"></a> 并行加法器</h4><p>并行加法器由若干个全加器构成：</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618194314793.png" alt="image-20240618194314793" /></p><p>其中A和B是输入，C是进位信号，S是当前位数运算的值。可以看到，当操作的位数变多时，每一级的运算结果都要依赖于上一级的进位信号才能输出正确的结果，导致大部分时间前端的全加器都在等待，这是不可接受的。我们的任务就是优化计算进位的速度，也就是设计快速进位链。</p><p>根据全加器的逻辑表达式，我们可以很简单的构造出进位信号C的逻辑表达式：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><msub><mi>d</mi><mi>i</mi></msub><mo>+</mo><msub><mi>t</mi><mi>i</mi></msub><msub><mi>C</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C=d_i+t_iC_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>的含义图中均已给出。</p><p>根据C的表达式，我们就可以将逐级进位的结构转换为进位链的方式来实现快速进位。目前的进位链形式有<strong>串行</strong>和<strong>并行</strong>两种。</p><h4 id="串行进位链"><a class="markdownIt-Anchor" href="#串行进位链"></a> 串行进位链</h4><p>串行进位链就是指并行加法器中的进位信号通过串行传输，如图：</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618195152707.png" alt="image-20240618195152707" /></p><p>进位表达式可写为：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>0</mn></msub><mo>=</mo><msub><mi>d</mi><mn>0</mn></msub><mo>+</mo><msub><mi>t</mi><mn>0</mn></msub><msub><mi>C</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mover accent="true"><mrow><mover accent="true"><msub><mi>d</mi><mn>0</mn></msub><mo stretchy="true">‾</mo></mover><mo>⋅</mo><mover accent="true"><mrow><msub><mi>t</mi><mn>0</mn></msub><msub><mi>C</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></mrow><mo stretchy="true">‾</mo></mover></mrow><mo stretchy="true">‾</mo></mover></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><msub><mi>d</mi><mn>1</mn></msub><mo>+</mo><msub><mi>t</mi><mn>1</mn></msub><msub><mi>C</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>2</mn></msub><mo>=</mo><msub><mi>d</mi><mn>2</mn></msub><mo>+</mo><msub><mi>t</mi><mn>2</mn></msub><msub><mi>C</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>3</mn></msub><mo>=</mo><msub><mi>d</mi><mn>3</mn></msub><mo>+</mo><msub><mi>t</mi><mn>3</mn></msub><msub><mi>C</mi><mn>2</mn></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}C_{0}=d_{0}+t_{0} C_{-1}=\overline{\overline{d_{0}} \cdot \overline{t_{0} C_{-1}}} \\C_{1}=d_{1}+t_{1} C_{0} \\C_{2}=d_{2}+t_{2} C_{1} \\C_{3}=d_{3}+t_{3} C_{2}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.05444em;vertical-align:-2.27722em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7772200000000002em;"><span style="top:-4.777220000000001em;"><span class="pstrut" style="height:3.09444em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.09444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.89444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.81444em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span><span style="top:-4.0144400000000005em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span><span style="top:-3.57722em;"><span class="pstrut" style="height:3.09444em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3772200000000003em;"><span class="pstrut" style="height:3.09444em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.1772200000000004em;"><span class="pstrut" style="height:3.09444em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.27722em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></p><p>即我们先通过与非门计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">t_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>，再和低电平<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">d_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>信号通过一次与非门就能得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">C_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，同理可求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">C_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，设计出进位链。</p><p>让我们假设与非门的延迟是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">t_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9011879999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，那么n位全加器产生进位的全部时间就为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>n</mi><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">2nt_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，因为一个进位需要使用两个与非门。</p><h4 id="并行进位链"><a class="markdownIt-Anchor" href="#并行进位链"></a> 并行进位链</h4><p>并行进位链，又称先行进位或跳跃进位，是指并行加法器的进位信号理想情况下是同时产生的，但这么实现通常有困难。一般来说有两种实现方案：<strong>单重分组</strong>和<strong>双重分组</strong>。</p><p>我们之前得到了串行进位链的进位信号表达式，对该表达式进行变换，可以得到如下结果：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>0</mn></msub><mo>=</mo><msub><mi>d</mi><mn>0</mn></msub><mo>+</mo><msub><mi>t</mi><mn>0</mn></msub><msub><mi>C</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><msub><mi>d</mi><mn>1</mn></msub><mo>+</mo><msub><mi>t</mi><mn>1</mn></msub><msub><mi>C</mi><mn>0</mn></msub><mo>=</mo><msub><mi>d</mi><mn>1</mn></msub><mo>+</mo><msub><mi>t</mi><mn>1</mn></msub><msub><mi>d</mi><mn>0</mn></msub><mo>+</mo><msub><mi>t</mi><mn>1</mn></msub><msub><mi>t</mi><mn>0</mn></msub><msub><mi>C</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>2</mn></msub><mo>=</mo><msub><mi>d</mi><mn>2</mn></msub><mo>+</mo><msub><mi>t</mi><mn>2</mn></msub><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><msub><mi>d</mi><mn>2</mn></msub><mo>+</mo><msub><mi>t</mi><mn>2</mn></msub><msub><mi>d</mi><mn>1</mn></msub><mo>+</mo><msub><mi>t</mi><mn>2</mn></msub><msub><mi>t</mi><mn>1</mn></msub><msub><mi>d</mi><mn>0</mn></msub><mo>+</mo><msub><mi>t</mi><mn>2</mn></msub><msub><mi>t</mi><mn>1</mn></msub><msub><mi>t</mi><mn>0</mn></msub><msub><mi>C</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>3</mn></msub><mo>=</mo><msub><mi>d</mi><mn>3</mn></msub><mo>+</mo><msub><mi>t</mi><mn>3</mn></msub><msub><mi>C</mi><mn>2</mn></msub><mo>=</mo><msub><mi>d</mi><mn>3</mn></msub><mo>+</mo><msub><mi>t</mi><mn>3</mn></msub><msub><mi>d</mi><mn>2</mn></msub><mo>+</mo><msub><mi>t</mi><mn>3</mn></msub><msub><mi>t</mi><mn>2</mn></msub><msub><mi>d</mi><mn>1</mn></msub><mo>+</mo><msub><mi>t</mi><mn>3</mn></msub><msub><mi>t</mi><mn>2</mn></msub><msub><mi>t</mi><mn>1</mn></msub><msub><mi>d</mi><mn>0</mn></msub><mo>+</mo><msub><mi>t</mi><mn>3</mn></msub><msub><mi>t</mi><mn>2</mn></msub><msub><mi>t</mi><mn>1</mn></msub><msub><mi>t</mi><mn>0</mn></msub><msub><mi>C</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}C_{0}=d_{0}+t_{0} C_{-1} \\C_{1}=d_{1}+t_{1} C_{0}=d_{1}+t_{1} d_{0}+t_{1} t_{0} C_{-1} \\C_{2}=d_{2}+t_{2} C_{1}=d_{2}+t_{2} d_{1}+t_{2} t_{1} d_{0}+t_{2} t_{1} t_{0} C_{-1} \\C_{3}=d_{3}+t_{3} C_{2}=d_{3}+t_{3} d_{2}+t_{3} t_{2} d_{1}+t_{3} t_{2} t_{1} d_{0}+t_{3} t_{2} t_{1} t_{0} C_{-1}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.800000000000001em;vertical-align:-2.1500000000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></p><p>仔细分析表达式，均为与操作和或操作，所以我们可以设计出如下电路图：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618200308979.png" alt="image-20240618200308979" style="zoom:50%;" /><p>放心，这个图很复杂，看看就好，重点不在这里。</p><p>假设或非门的延迟时间为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1.5</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">1.5t_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><msub><mi>t</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_it_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>形成后，只需要<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2.5</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">2.5t_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>就可以产生全部的进位。</p><p>可以看到这个速度比串行进位链已经提升了很多，但是当位数比较大时（比如32位），这个电路的设计会肉眼可见的变得非常复杂。为了简化电路设计，我们给出了以下两种折中方案，也就是我们先前提到过的单重分组跳跃与双重分组跳跃。</p><h5 id="单重分组跳跃进位链"><a class="markdownIt-Anchor" href="#单重分组跳跃进位链"></a> 单重分组跳跃进位链</h5><p>我们将n位全加器分若干小组，小组中的进位同时产生，小组与小组之间采用串行进位。以n=16为例，我们将全加器分为四组，可以设计出如下的电路图：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618200932273.png" alt="image-20240618200932273" style="zoom:50%;" /><p>此时完成一个小组的用时为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2.5</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">2.5t_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，那么经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn><mo>×</mo><mn>2.5</mn><msub><mi>t</mi><mi>y</mi></msub><mo>=</mo><mn>10</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">4\times2.5t_y=10t_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>即可完成四组的进位信号生成，而如果采用串行进位链，则需要<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>32</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">32t_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">3</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>。</p><h5 id="双重分组跳跃进位链"><a class="markdownIt-Anchor" href="#双重分组跳跃进位链"></a> 双重分组跳跃进位链</h5><p>双重分组即n位全加器分若干大组，大组中又包含若干小组。每个大组中小组的最高位进位同时产生。大组与大组之间采用串行进位。以n=32为例，我们把32分为两个16的大组，再把16按照单重跳跃的方式进行分组，绘图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618201932503.png" alt="image-20240618201932503" style="zoom:50%;" /><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>15</mn></msub></mrow><annotation encoding="application/x-tex">C_{15}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>产生的进位信号作为串行进位输入到第一大组和第4小组中。此时特点可总结为：<font style="color:red">组内并行，组间串行。</font></p><p>本质上，双重分组跳跃链就是对单重分组跳跃链的一层抽象，我们还可以根据这种抽象思维设计出更多重的跳跃链。这就是<font style="color:blue;font-size:24px">A new level of abstraction</font>。</p><h6 id="大组进位分析"><a class="markdownIt-Anchor" href="#大组进位分析"></a> 大组进位分析</h6><p>上述的双重分组跳跃链只是一个简图，我们还没有讨论大组之间的电路是怎么设计的。</p><p>我们从第8小组为例，分析它的表达式。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>3</mn></msub><mo>=</mo><msub><mi>d</mi><mn>3</mn></msub><mo>+</mo><msub><mi>t</mi><mn>3</mn></msub><msub><mi>C</mi><mn>2</mn></msub><mo>=</mo><munder><munder><mrow><msub><mi>d</mi><mn>3</mn></msub><mo>+</mo><msub><mi>t</mi><mn>3</mn></msub><msub><mi>d</mi><mn>2</mn></msub><mo>+</mo><msub><mi>t</mi><mn>3</mn></msub><msub><mi>t</mi><mn>2</mn></msub><msub><mi>d</mi><mn>1</mn></msub><mo>+</mo><msub><mi>t</mi><mn>3</mn></msub><msub><mi>t</mi><mn>2</mn></msub><msub><mi>t</mi><mn>1</mn></msub><msub><mi>d</mi><mn>0</mn></msub></mrow><mo stretchy="true">⏟</mo></munder><msub><mi>D</mi><mn>8</mn></msub></munder><mo>+</mo><munder><munder><mrow><msub><mi>t</mi><mn>3</mn></msub><msub><mi>t</mi><mn>2</mn></msub><msub><mi>t</mi><mn>1</mn></msub><msub><mi>t</mi><mn>0</mn></msub><msub><mi>C</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></mrow><mo stretchy="true">⏟</mo></munder><msub><mi>T</mi><mn>8</mn></msub></munder></mrow><annotation encoding="application/x-tex">C_{3}=d_{3}+t_{3} C_{2}=\underbrace{d_{3}+t_{3} d_{2}+t_{3} t_{2} d_{1}+t_{3} t_{2} t_{1} d_{0}}_{D_{8}}+\underbrace{t_{3} t_{2} t_{1} t_{0} C_{-1}}_{T_{8}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.2708709999999996em;vertical-align:-1.5764310000000001em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944399999999997em;"><span style="top:-1.523669em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span class="svg-align" style="top:-2.202em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.798em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5764310000000001em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.318092em;vertical-align:-1.634762em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-1.465338em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span class="svg-align" style="top:-2.143669em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8563310000000001em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.634762em;"><span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>8</mn></msub></mrow><annotation encoding="application/x-tex">D_8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是第8小组的本地进位，和外来进位无关；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>8</mn></msub></mrow><annotation encoding="application/x-tex">T_8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是第8小组的传送条件，与外来进位无关，只是负责传递外来进位。</p><p>同理我们有：</p><ul><li>第7小组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>7</mn></msub><mo>=</mo><msub><mi>D</mi><mn>7</mn></msub><mo>+</mo><msub><mi>T</mi><mn>7</mn></msub><mo>+</mo><msub><mi>C</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">C_7=D_7+T_7+C_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>第6小组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>11</mn></msub><mo>=</mo><msub><mi>D</mi><mn>6</mn></msub><mo>+</mo><msub><mi>T</mi><mn>6</mn></msub><mo>+</mo><msub><mi>C</mi><mn>7</mn></msub></mrow><annotation encoding="application/x-tex">C_{11}=D_6+T_6+C_7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>第5小组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>15</mn></msub><mo>=</mo><msub><mi>D</mi><mn>5</mn></msub><mo>+</mo><msub><mi>T</mi><mn>5</mn></msub><mo>+</mo><msub><mi>C</mi><mn>11</mn></msub></mrow><annotation encoding="application/x-tex">C_{15}=D_5+T_5+C_{11}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul><p>依次代入展开可以得到如下表达式：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>3</mn></msub><mo>=</mo><msub><mi>D</mi><mn>8</mn></msub><mo>+</mo><msub><mi>T</mi><mn>8</mn></msub><msub><mi>C</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>7</mn></msub><mo>=</mo><msub><mi>D</mi><mn>7</mn></msub><mo>+</mo><msub><mi>T</mi><mn>7</mn></msub><msub><mi>C</mi><mn>3</mn></msub><mo>=</mo><msub><mi>D</mi><mn>7</mn></msub><mo>+</mo><msub><mi>T</mi><mn>7</mn></msub><msub><mi>D</mi><mn>8</mn></msub><mo>+</mo><msub><mi>T</mi><mn>7</mn></msub><msub><mi>T</mi><mn>8</mn></msub><msub><mi>C</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>11</mn></msub><mo>=</mo><msub><mi>D</mi><mn>6</mn></msub><mo>+</mo><msub><mi>T</mi><mn>6</mn></msub><msub><mi>C</mi><mn>7</mn></msub><mo>=</mo><msub><mi>D</mi><mn>6</mn></msub><mo>+</mo><msub><mi>T</mi><mn>6</mn></msub><msub><mi>D</mi><mn>7</mn></msub><mo>+</mo><msub><mi>T</mi><mn>6</mn></msub><msub><mi>T</mi><mn>7</mn></msub><msub><mi>D</mi><mn>8</mn></msub><mo>+</mo><msub><mi>T</mi><mn>6</mn></msub><msub><mi>T</mi><mn>7</mn></msub><msub><mi>T</mi><mn>8</mn></msub><msub><mi>C</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mn>15</mn></msub><mo>=</mo><msub><mi>D</mi><mn>5</mn></msub><mo>+</mo><msub><mi>T</mi><mn>5</mn></msub><msub><mi>C</mi><mn>11</mn></msub><mo>=</mo><msub><mi>D</mi><mn>5</mn></msub><mo>+</mo><msub><mi>T</mi><mn>5</mn></msub><msub><mi>D</mi><mn>6</mn></msub><mo>+</mo><msub><mi>T</mi><mn>5</mn></msub><msub><mi>T</mi><mn>6</mn></msub><msub><mi>D</mi><mn>7</mn></msub><mo>+</mo><msub><mi>T</mi><mn>5</mn></msub><msub><mi>T</mi><mn>6</mn></msub><msub><mi>T</mi><mn>7</mn></msub><msub><mi>D</mi><mn>8</mn></msub><mo>+</mo><msub><mi>T</mi><mn>5</mn></msub><msub><mi>T</mi><mn>6</mn></msub><msub><mi>T</mi><mn>7</mn></msub><msub><mi>T</mi><mn>8</mn></msub><msub><mi>C</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}C_{3}=D_{8}+T_{8} C_{-1} \\C_{7}=D_{7}+T_{7} C_{3}=D_{7}+T_{7} D_{8}+T_{7} T_{8} C_{-1} \\C_{11}=D_{6}+T_{6} C_{7}=D_{6}+T_{6} D_{7}+T_{6} T_{7} D_{8}+T_{6} T_{7} T_{8} C_{-1} \\C_{15}=D_{5}+T_{5} C_{11}=D_{5}+T_{5} D_{6}+T_{5} T_{6} D_{7}+T_{5} T_{6} T_{7} D_{8}+T_{5} T_{6} T_{7} T_{8} C_{-1}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.800000000000001em;vertical-align:-2.1500000000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></p><p>这又化成了只有与门和或门的形式，参照单重分组跳跃的方式，我们可以设计出大组间的跳跃电路：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618204246545.png" alt="image-20240618204246545" style="zoom:50%;" /><h6 id="小组进位分析"><a class="markdownIt-Anchor" href="#小组进位分析"></a> 小组进位分析</h6><p>讨论完双重进位链中的大组，我们再来研究小组间的电路该如何设计。</p><p>小组间的电路其实就是一个单重进位链，但是我们需要它提供<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>给大组的跳跃链，所以我们还是给出了小组间的电路设计图，以第8小组为例，它只产生低3位的进位和本小组的D8、T8：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618205146754.png" alt="image-20240618205146754" style="zoom:50%;" /><p>是否觉得很眼熟呢？我放出了原来的单重跳跃进位链作为对比</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618205122829.png" alt="image-20240618205122829" style="zoom:50%;" /><p>此时，我们就可以分析当n=16时的双重分组跳跃进位链的用时了，绘图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618205623246.png" alt="image-20240618205623246" style="zoom:50%;" /><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><msub><mi>t</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_it_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>形成后：</p><ul><li>经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2.5</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">2.5t_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，产生<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>2</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>1</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>0</mn></msub><mtext>、</mtext><msub><mi>D</mi><mn>5</mn></msub><mo>∼</mo><msub><mi>D</mi><mn>8</mn></msub><mtext>、</mtext><msub><mi>T</mi><mn>5</mn></msub><mo>∼</mo><msub><mi>T</mi><mn>8</mn></msub></mrow><annotation encoding="application/x-tex">C_2、C_1、C_0、D_5\sim D_8、T_5\sim T_8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">5t_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，产生<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>15</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>11</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>7</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">C_{15}、C_{11}、C_7、C_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7.5</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">7.5t_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">7</span><span class="mord">.</span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，产生<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>14</mn></msub><mo>∼</mo><msub><mi>C</mi><mn>12</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>10</mn></msub><mo>∼</mo><msub><mi>C</mi><mn>8</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>6</mn></msub><mo>∼</mo><msub><mi>C</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">C_{14}\sim C_{12}、C_{10}\sim C_8、C_6\sim C_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul><p>而如果使用串行进位链，则需要<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>32</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">32t_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">3</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></p><p>如果使用单重分组跳跃进位链，则需要<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">10t_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>当n=32时，绘图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240618210425045.png" alt="image-20240618210425045" style="zoom:50%;" /><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><msub><mi>t</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_it_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>形成后：</p><ul><li><p>经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2.5</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">2.5t_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，产生<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>2</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>1</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>0</mn></msub><mtext>、</mtext><msub><mi>D</mi><mn>1</mn></msub><mo>∼</mo><msub><mi>D</mi><mn>8</mn></msub><mtext>、</mtext><msub><mi>T</mi><mn>1</mn></msub><mo>∼</mo><msub><mi>T</mi><mn>8</mn></msub></mrow><annotation encoding="application/x-tex">C_2、C_1、C_0、D_1\sim D_8、T_1\sim T_8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">5t_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，产生<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>15</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>11</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>7</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">C_{15}、C_{11}、C_7、C_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7.5</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">7.5t_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">7</span><span class="mord">.</span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，产生<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>18</mn></msub><mo>∼</mo><msub><mi>C</mi><mn>16</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>14</mn></msub><mo>∼</mo><msub><mi>C</mi><mn>12</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>10</mn></msub><mo>∼</mo><msub><mi>C</mi><mn>8</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>6</mn></msub><mo>∼</mo><msub><mi>C</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">C_{18}\sim C_{16}、C_{14}\sim C_{12}、C_{10}\sim C_8、C_6\sim C_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>​<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>31</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>27</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>23</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>19</mn></msub></mrow><annotation encoding="application/x-tex">C_{31}、C_{27}、C_{23}、C_{19}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">10t_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，产生<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>30</mn></msub><mo>∼</mo><msub><mi>C</mi><mn>28</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>26</mn></msub><mo>∼</mo><msub><mi>C</mi><mn>24</mn></msub><mtext>、</mtext><msub><mi>C</mi><mn>22</mn></msub><mo>∼</mo><msub><mi>C</mi><mn>20</mn></msub></mrow><annotation encoding="application/x-tex">C_{30}\sim C_{28}、C_{26}\sim C_{24}、C_{22}\sim C_{20}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></li></ul><p>如果使用串行进位链，则需要<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>64</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">64t_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">6</span><span class="mord">4</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></p><p>如果使用单重分组跳跃进位链，则需要<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>20</mn><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">20t_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>……</p><p>……</p><p>第三部分到此结束！敬请阅读第四部分🎆</p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/118769966_p0.jpg" alt="118769966_p0" /></p>]]></content>
    
    
    <summary type="html">计算机指北的第三部分！介绍了计算机的输入输出系统与其内部的运算机制。</summary>
    
    
    
    <category term="计算机组成指北" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E6%8C%87%E5%8C%97/"/>
    
    
    <category term="计算机组成原理" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="输入输出系统" scheme="http://example.com/tags/%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="计算机运算方法" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BF%90%E7%AE%97%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成指北（二）</title>
    <link href="http://example.com/posts/df375e9fefb4/"/>
    <id>http://example.com/posts/df375e9fefb4/</id>
    <published>2024-09-27T03:42:23.000Z</published>
    <updated>2024-09-27T03:42:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第四章-存储器"><a class="markdownIt-Anchor" href="#第四章-存储器"></a> 第四章 存储器</h2><blockquote><p>存储器存放了程序和数据存储程序的思想，使得计算机从专用走向通用。</p><p>存储器 ROM和RAM<br />存储器的图不要求画，但是需要知道特点，能看懂就行。需要了解刷新计算。<br /><strong>非常重要</strong>的是动态RAM和静态RAM的比较表<br /><strong>绝对会考</strong>存储器的电路图，而且占比分高，重中之重。参考教材PPT和作业<br />单体多体了解一下就行。<br />cache编码映射率概念肯定要会算的，都得背。知道地址编码后，给一种映射能不能算这种映射方式下主存如何编码。还要算利用率。</p></blockquote><p>前面我们提到了CPU通过总线与计算机的各个部件间进行通信，那么现在，我们就来学习占用计算机结构最大的部分：存储器。计算机大部分信息，都存储在存储器内。</p><p>按存取方式可分为两类存储器：随机存储器（RAM）和只读存储器（ROM）。前者在程序执行过程中可读可写，后者则只读。</p><p>按在计算机中的作用分类如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616195445786.png" alt="image-20240616195445786" style="zoom:50%;" /><p>主存储器：即内存，直接和CPU交互信息，速度快，容量小，价位高；对应内存条。</p><p>辅助存储器：即外存，存放暂时不用的程序和数据，速度慢，容量大，价位低；对应硬盘。</p><p>缓冲存储器：用在两种速度不同的部件中，即Cache，通过映射加快数据读取效率。</p><p>现在的计算机运用层次存储器系统，旨在实现：以最低的价格提供尽可能大的存储空间，以最快速的技术实现高速访问。于是选用生产与运行成本不同的、存储容量不同的、读写速度不同的多种存储介质，组成一个统一的存储器系统，使每种介质都处于不同的地位，发挥不同的作用，充分发挥各自在速度、容量、成本方面的优势，从而达到最优性能价格比，以满足使用要求。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617152036076.png" alt="image-20240617152036076" style="zoom:50%;" /><h3 id="随机存取存储器ram"><a class="markdownIt-Anchor" href="#随机存取存储器ram"></a> 随机存取存储器RAM</h3><h4 id="静态ramsram"><a class="markdownIt-Anchor" href="#静态ramsram"></a> 静态RAM（SRAM）</h4><ul><li>利用触发器工作原理存储信息</li><li>信息读出后，仍保持原状态</li><li>电源断电后，原存信息丢失</li><li>速度快、能耗高、存储密度低</li></ul><h4 id="动态ramdram"><a class="markdownIt-Anchor" href="#动态ramdram"></a> 动态RAM（DRAM）</h4><ul><li>利用电容存储电荷的原理来存储信息</li><li>即使电源不断电，信息也会自动消失</li><li>集成度高、容量大、功耗低、速度慢</li></ul><p>一般来说，DRAM组成内存条，而SRAM则充当内存条和主存之间的Cache。</p><p>因为动态RAM的信息容易丢失，所以需要刷新RAM以维持信息。刷新即对所有存储单元回复一次原状态的过程。先将原信息读出，再由刷新放大器形成原信息重新写入。刷新周期即对动态ROM的全部基本单元电路作一次刷新的时间。</p><p>刷新方法有三种：集中刷新、分散刷新和异步刷新</p><p>集中刷新是在规定的时间内，对全部存储单元集中一段时间进行逐行刷新，此时必须停止读写操作。这样做会出现“死区”。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616204944733.png" alt="image-20240616204944733" style="zoom:50%;" /><p>分散刷新时指对每个存储单元的刷新分散到每个存取周期完成，即把存储周期分为两段，前半段用来读写或维持信息，后半段用来刷新。这样做没有死区，且128us就可全部刷新一遍，但是存取周期变长了，整体系统变慢了。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616205127898.png" alt="image-20240616205127898" style="zoom:50%;" /><p>异步刷新则结合了分散刷新和集中刷新，将集中刷新分散到了2ms内。如果将刷新安排在指令译码阶段，将不会出现死区。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616210200154.png" alt="image-20240616210200154" style="zoom:50%;" /><h3 id="动态ram和静态ram的比较"><a class="markdownIt-Anchor" href="#动态ram和静态ram的比较"></a> 动态RAM和静态RAM的比较</h3><p>重点！需要加强记忆。</p><table><thead><tr><th></th><th>DRAM主存</th><th>SRAM缓存</th></tr></thead><tbody><tr><td>存储原理</td><td>电容</td><td>触发器</td></tr><tr><td>集成度</td><td>高</td><td>低</td></tr><tr><td>芯片引脚</td><td>少</td><td>多</td></tr><tr><td>功耗</td><td>小</td><td>大</td></tr><tr><td>价格</td><td>低</td><td>高</td></tr><tr><td>速度</td><td>慢</td><td>快</td></tr><tr><td>刷新</td><td>有</td><td>无</td></tr></tbody></table><h3 id="只读存储器rom"><a class="markdownIt-Anchor" href="#只读存储器rom"></a> 只读存储器ROM</h3><p>有掩膜ROM等。了解就好。</p><h3 id="存储器与cpu的连接"><a class="markdownIt-Anchor" href="#存储器与cpu的连接"></a> 存储器与CPU的连接</h3><p>这节是重点之一，其中会涉及到非常多的图像。</p><h4 id="存储器容量的扩展"><a class="markdownIt-Anchor" href="#存储器容量的扩展"></a> 存储器容量的扩展</h4><p>先从最基本的一步开始，了解如何扩大存储器的容量。</p><p>首先了解一个概念：如何表示存储芯片的容量？正如前面所介绍的，一个存储体能够存储多少容量取决于MAR和MDR的宽度。如果地址总线宽度为10，数据总线宽度为1，那么总容量就为：2<sup>10</sup>*1=1K。要拓展存储量，可以使用<strong>位扩展</strong>和<strong>字扩展</strong>两种方法。</p><h5 id="位扩充"><a class="markdownIt-Anchor" href="#位扩充"></a> 位扩充</h5><p>我们可以通过增加存储字长的方法来扩展存储容量。</p><p>同理，我们可以用2片1K×4位（10根地址线，4根数据线）的存储芯片组成1K×8位（10根地址线，8根数据线）的存储器。画图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616211043971.png" alt="image-20240616211043971" style="zoom:50%;" /><p>其中A<sub>0</sub>~A<sub>9</sub>是地址线，D<sub>0</sub>~D<sub>7</sub>是数据线；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>C</mi><mi>S</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{CS}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>是片选信号，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>W</mi><mi>E</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{WE}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>是写允许信号，两者低电平有效。画图的时候不必深究，只需要记得上面连地址线，下面连数据线，再依次从右边接上<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>C</mi><mi>S</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{CS}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>W</mi><mi>E</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{WE}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>就好。</p><h5 id="字拓展"><a class="markdownIt-Anchor" href="#字拓展"></a> 字拓展</h5><p>还可以通过增加存储字的数量来扩充内存。</p><p>用2片1K × 8位（10根地址线，8根数据线） 存储芯片组成 2K × 8位（11根地址线，8根数据线） 的存储器。画图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616211921979.png" alt="image-20240616211921979" style="zoom:50%;" /><p>与位扩展不同的是，除了地址线和数据线的数量，还有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>C</mi><mi>S</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{CS}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>片选信号的改变。这里把A<sub>10</sub>当做片选信号，并使用一个反相器来选择芯片。当A<sub>10</sub>分别为正负电平时，机器会选中左或右两块存储芯片，以达到扩展字长的目的。仅用一根片选信号线和反相器就替代了再额外添加地址线（还是多加了一根）。</p><h5 id="字位扩展"><a class="markdownIt-Anchor" href="#字位扩展"></a> 字位扩展</h5><p>结合上述两种方法，可以用8片 1K × 4位 存储芯片组成 4K × 8位 的存储器。</p><blockquote><p>计算小tip：在计算用几片已有芯片组成指定芯片存储器时，分别用地址线和数据线除以原地址线和数据线根数，再将得到的倍数相乘就好了。比如8片＝4K/1K×8位/4位</p></blockquote><p>结合上述两种方式的方法，可作图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616212735930.png" alt="image-20240616212735930" style="zoom:50%;" /><p>首先确定最后共有8位数据线，12根地址线；有4K/1K=4个芯片作为一组来进行字扩充，有8位/4位=2个芯片一组作为位扩充；再根据有4块作为字扩充的区域需要额外的2根地址线作为片选信号扩展（2根地址线能索引2<sup>2</sup>=4个区域），最终作图如上。</p><h5 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h5><p>总结扩充存储容量的画图方法：</p><ol><li>计算需要多少块芯片才能扩展成要求的芯片容量：直接用容量相除可得片数</li><li>计算最终需要多少根地址线、数据线以及作为片选信号的额外地址线：<ul><li>计算数据线：很简单，即扩充后位的数量</li><li>计算地址线：与原芯片的地址线相同，注意1K=10根地址线，1M=20根地址线</li><li>计算片选信号额外地址线：计算字扩充的倍数得到要选择的片数n，然后计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi></mrow><annotation encoding="application/x-tex">log_2n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span></span></span></span>即可得到需要的额外地址线</li></ul></li><li>连接<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>W</mi><mi>E</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{WE}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>C</mi><mi>S</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{CS}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>。前者直接在数据线下补充，后者则经过一个反相器或者片选编码器。两者均连接在芯片的右侧。</li></ol><h4 id="存储器与-cpu-的连接"><a class="markdownIt-Anchor" href="#存储器与-cpu-的连接"></a> 存储器与 CPU 的连接</h4><p>在了解存储器如何扩展容量后，我们就得到了符合要求的存储器。接下来就需要把存储器连接到CPU，其中要点如下：</p><ol><li>地址线的连接</li><li>数据线的连接</li><li>读/写命令线的连接</li><li>片选线的连接</li><li>合理选择存储芯片</li><li>其他</li><li>时序、负载</li></ol><p>我们在设计CPU与存储器连接电路时，主要关注1~5点。即：地址线、数据线、读写命令线、片选线、芯片选择。</p><p>我们就直接从一道例题开始学习。</p><h5 id="例题一"><a class="markdownIt-Anchor" href="#例题一"></a> 例题一</h5><blockquote><p>设CPU有16根地址线，8根数据线</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>M</mi><mi>R</mi><mi>E</mi><mi>O</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{MREO}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>：访存控制信号</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>W</mi><mi>E</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{WE}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>:读/写控制信号</p><p>可使用芯片:<br />1K*4位RAM、4K*8位RAM、8K*8位RAM、2K*8位ROM、4K*8位ROM、8K*8位ROM</p><p>74138译码器</p><p>要求：</p><p>主存地址分配空间：</p><p>6000H~67FFH为系统存储区</p><p>6800H~6BFFH为用户程序</p></blockquote><p>要解答这道题我们要进行一下几个步骤：</p><ol><li>写出对应的二进制地址码</li><li>确定芯片的数量和类型</li><li>分配地址线</li><li>确定片选信号，画图</li></ol><p>首先我们先写二进制地址码，如图：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617135802810.png" alt="image-20240617135802810" style="zoom:50%;" /><p>因为题给条件有16根地址线，所以我们列出A<sub>15</sub>~A<sub>0</sub>十六位，然后依次<strong>把地址范围用二进制表示</strong>。</p><p>比如系统存储区6000H~67FFH就是对应二进制数：</p><ul><li>0110 0000 0000 0000</li><li>0110 0111 1111 1111</li></ul><p>可以看到，16位地址线中只有11位是不同的，剩下5位自始至终都保持01100没有改变。也就是说，存储系统的存储器只需要11位的地址线足矣，对应2×2<sup>10</sup>=2K。而CPU有8根数据线，故存储系统的存储器容量应为<font color="red"><strong>2K×8位</strong></font>。</p><p>同理，用户存储区6800H~6BFFH对应二进制数：</p><ul><li>0110 1000 0000 0000</li><li>0110 1011 1111 1111</li></ul><p>只有10位发生了改变，也就是分配10根地址线。最终存储用户程序的存储器容量应为<font color="red"><strong>1K×8位</strong></font>。</p><p><strong>接着我们来确定芯片的类型与数量</strong>。系统存储器应该是可读存储器，故使用ROM芯片来作为存储器。只需要1片题给的2K×8位ROM就可以满足条件；而用户存储器应该储存在可读可写存储器中，于是我们选用2片题给的1K×4位RAM，通过位扩充即可满足要求。</p><p><strong>之后我们来分配地址线</strong>。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617141527051.png" alt="image-20240617141527051" style="zoom:50%;" /><p>可以看到，ROM和RAM分别分配了对应于它们地址线根数的地址线。其中，A<sub>11</sub>~A<sub>13</sub>被分配至A、B、C接口（稍后介绍74138译码器会提到）。A<sub>14</sub>~A<sub>15</sub>则和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>M</mi><mi>R</mi><mi>E</mi><mi>O</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{MREO}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>（访存信号，低电平有效）被用来作为片选信号。</p><p>关于74138译码器，可以参考下图：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617141942379.png" alt="image-20240617141942379" style="zoom:50%;" /><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mn>1</mn></msub><mo separator="true">,</mo><mover accent="true"><msub><mi>G</mi><mrow><mn>2</mn><mi>A</mi></mrow></msub><mo stretchy="true">‾</mo></mover><mo separator="true">,</mo><mover accent="true"><msub><mi>G</mi><mrow><mn>2</mn><mi>B</mi></mrow></msub><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">G_1,\overline{G_{2A}},\overline{G_{2B}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>是控制端，只有三接口均有效才能使译码器正常工作（注意后两者是低电平有效，即需要保证第一个接口为高电平，后两个接口为低电平才能正常工作）；A、B、C是功能端，用来输入二进制数；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>Y</mi><mn>0</mn></msub><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{Y_0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03333em;vertical-align:-0.15em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>等端口则是十进制输出端，对应功能端输入的二进制数，同样是低电平有效。</p><p>最后，我们确定片选信号，并画出CPU与存储器的连接图。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617142423776.png" alt="image-20240617142423776" style="zoom:50%;" /><p>由74138译码器输入逻辑关系可知,必须保证控制端<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mn>1</mn></msub><mo separator="true">,</mo><mover accent="true"><msub><mi>G</mi><mrow><mn>2</mn><mi>A</mi></mrow></msub><mo stretchy="true">‾</mo></mover><mo separator="true">,</mo><mover accent="true"><msub><mi>G</mi><mrow><mn>2</mn><mi>B</mi></mrow></msub><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">G_1,\overline{G_{2A}},\overline{G_{2B}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>第一个接口为高电平，后两个接口为低电平，才能使译码器正常工作。根据第一步写出的存储器地址范围得出，A<sub>15</sub>始终为低电平，A<sub>14</sub>始终为高电平,它们正好可分别与译码器的G低，G高对应。而访存控制信号 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>M</mi><mi>R</mi><mi>E</mi><mi>O</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{MREO}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>（低电平有效）又正好可与G（低）对应。故分配两个低电平信号连接低电平有效的接口，高电平信号连接高电平有效的接口。</p><p>剩下的A<sub>13</sub>、A<sub>12</sub>、A<sub>11</sub>可分别接到译码器的C、B、A输入端。其输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>Y</mi><mn>4</mn></msub><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{Y_4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03333em;vertical-align:-0.15em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>有效时，选中1片ROM；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>Y</mi><mn>5</mn></msub><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{Y_5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03333em;vertical-align:-0.15em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>与A<sub>10</sub>同时有效均为低电平时，与门输出选2片RAM。这里之所以没有把<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>Y</mi><mn>5</mn></msub><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{Y_5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03333em;vertical-align:-0.15em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>和RAM单独连接是因为，当出现<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>Y</mi><mn>5</mn></msub><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{Y_5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03333em;vertical-align:-0.15em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>和A<sub>10</sub>高电平时，此时表示的范围超出了题给范围，不应该继续选择RAM，所以必须限定A<sub>10</sub>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>Y</mi><mn>5</mn></msub><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{Y_5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03333em;vertical-align:-0.15em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>同时为低电平才可以。</p><p>图中ROM 芯片的PD/progr端接地，以确保在读出时低电平有效（因为需要始终确保系统运行，所以直接用接地低电平信号启动ROM）。RAM芯片的读写控制端与CPU的读写命令端<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>W</mi><mi>R</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{WR}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>相连。ROM的8根数据线直接与CPU的8根数据线相连,2片RAM的数据线分别与CPU数据总线的高4位和低4位相连。</p><p>小小总结一下，比起存储器的扩展，连接CPU和存储器多了CPU和译码器两个要素，归纳一下要点如下：</p><ul><li>先画出CPU，译码器。将访存信号、译码器控制端连接好。</li><li>从下至上依次画出数据线和地址线。</li><li>画出ROM和RAM，注意如果需要扩展存储器使用的是位扩展还是字扩展，并连接好数据线、地址线、写入信号和PD接地信号。</li><li>将译码器的端口输出和门电路组合成片选信号，原理类似于字扩展，但是这里用来选择系统存储器和用户存储器。</li><li>将片选信号连接至存储器</li></ul><h5 id="例题二"><a class="markdownIt-Anchor" href="#例题二"></a> 例题二</h5><blockquote><p>假设同前，要求最小 8K为系统程序区，相邻 16K为用户程序区，接着又有最大4K为系统程序工作区</p></blockquote><p>同样按照四步走：写出地址二进制码、确定芯片数量和类型、分配地址线、确定片选信号。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617144922150.png" alt="image-20240617144922150" style="zoom:50%;" /><p>过程不再给出证明。不过这里请留意，RAM选用了两片8K×8位的芯片组成了16K×8位的用户存储器，这里是字扩展。并且第三块区域是“系统工作区”而非系统存储区，所以选用RAM而非ROM。</p><p>接着分配地址线并确定片选信号：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617145120310.png" alt="image-20240617145120310" style="zoom:50%;" /><p>这里地址线最大的是8K的存储器，故一共使用了2<sup>3</sup>×2<sup>10</sup>=2<sup>13</sup>共13根地址线，剩下3根地址线用作译码器的功能端。可以看到，当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>Y</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>端口：</p><ul><li>输出为0时，CPU选择第一块系统存储器ROM；</li><li>当输出为1、2时，CPU选择用户存储器RAM；1和2又分别对应16K×8位RAM中使用了字扩展的两块8K×8位RAM。</li><li>当输出为7时，CPU选择第二块系统工作区存储器RAM。</li></ul><p>最后，画图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617145539789.png" alt="image-20240617145539789" style="zoom:50%;" /><p>同理，这里之所以要把A<sub>12</sub>的信号与一个非门连接最后和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>Y</mi><mn>7</mn></msub><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{Y_7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03333em;vertical-align:-0.15em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>做与非运算，就是为了确保选择系统工作区RAM的唯一性。</p><p>至此关于CPU和存储器连接的重难点就讲解完毕了，相信大家都能够画出正确的图。最后再强调一遍画图总结：</p><ul><li>先画出CPU，译码器。将访存信号、译码器控制端连接好。</li><li>从下至上依次画出数据线和地址线。</li><li>画出ROM和RAM，注意如果需要扩展存储器使用的是位扩展还是字扩展，并连接好数据线、地址线、写入信号和PD接地信号。</li><li>将译码器的端口输出和门电路组合成片选信号，原理类似于字扩展，但是这里用来选择系统存储器和用户存储器。</li><li>将片选信号连接至存储器</li></ul><h3 id="提高访存速度的措施"><a class="markdownIt-Anchor" href="#提高访存速度的措施"></a> 提高访存速度的措施</h3><p>计算机不断发展，访问主存的速度成为计算机发展的掣肘。为了提高访存效率，先前我们已经介绍过两种方法，即：采用高速器件和层次结构。要么是提升硬件的属性，要么是在层次结构中使用Cache让快速器件更快的访问数据而避免耗时长的内存索引。</p><p>但是Cache的造价昂贵，所以不能普遍推广到计算机整体，而只能把钱花在刀刃上。所以，我们还可以通过第三种方法，即<strong>调整主存结构</strong>。主存结构有两种：单体多字系统和多体并行系统。掌握概念就好。</p><h4 id="单体多字系统"><a class="markdownIt-Anchor" href="#单体多字系统"></a> 单体多字系统</h4><p>结构图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617153022511.png" alt="image-20240617153022511" style="zoom:50%;" /><p>原理很简单：假设指令在内存中时连续存取的，那么地址寄存器只需要储存第一条指令的地址，设位数为w。当主存控制器取指令时，就直接按地址在一个存储周期内读出4×w位数据，能使主存的带宽提高4倍。但是当遇到转移指令或者操作数不连续存放时，这种效果就不明显。</p><h4 id="多体并行系统"><a class="markdownIt-Anchor" href="#多体并行系统"></a> 多体并行系统</h4><p>多体的特点在于一个体正在与CPU交换信息时，其他体可以与外设交互，实现多个体并行工作，加快了访存效率。</p><p>多体并行系统分为<strong>高位交叉编址顺序存放</strong>和<strong>低位交叉编址交叉存放</strong>。前者高位存储体号，低位存储体内地址；后者反之。结构图分别如下：</p><p>高位交叉：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617154154913.png" alt="image-20240617154154913" style="zoom:50%;" /><p>低位交叉：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617154229272.png" alt="image-20240617154229272" style="zoom:50%;" /><p>低位交叉能在不改变存取周期的前提下，增加存储器的带宽。因为高位交叉的信息是按顺序存储在一个体内，导致该模块成为瓶颈；而低位交叉存储则可以通过并行的方式读取来加快效率。</p><blockquote><p>例题：设4个模块组成的四体存储器结构，每个体的存储字长为32位，存取周期200ns，数据总线宽度32位，总线传输周期为50ns，求顺序存储和交叉存储的存储器带宽。</p><ol><li><p>顺序存储：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>不增加带宽</mtext></mrow><annotation encoding="application/x-tex">不增加带宽</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">增</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>读出一个字的时间为</mtext><mn>200</mn><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">读出一个字的时间为200ns</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">读</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">字</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mord cjk_fallback">为</span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>带宽为：</mtext><mn>32</mn><mi mathvariant="normal">/</mi><mn>200</mn><mi>n</mi><mi>s</mi><mo>=</mo><mn>16</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>7</mn></msup><mi>b</mi><mi>p</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">带宽为：32/200ns=16×10^7bps</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">：</span><span class="mord">3</span><span class="mord">2</span><span class="mord">/</span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mord mathnormal">b</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span></span></span></span></p></li><li><p>交叉存储：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>读出</mtext><mn>4</mn><mtext>个字的时间为</mtext><mn>200</mn><mi>n</mi><mi>s</mi><mo>+</mo><mn>50</mn><mi>n</mi><mi>s</mi><mo>×</mo><mo stretchy="false">(</mo><mn>4</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mn>350</mn><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">读出4个字的时间为200ns+50ns×(4-1)=350ns</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">读</span><span class="mord cjk_fallback">出</span><span class="mord">4</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">字</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mord cjk_fallback">为</span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mord">0</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">5</span><span class="mord">0</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>带宽为</mtext><mo>:</mo><mo stretchy="false">(</mo><mn>32</mn><mo>×</mo><mn>4</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>350</mn><mi>n</mi><mi>s</mi><mo>=</mo><mn>37</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>7</mn></msup><mi>b</mi><mi>p</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">带宽为:(32×4)/350ns=37×10^7bps</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span><span class="mord cjk_fallback">为</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">3</span><span class="mord">5</span><span class="mord">0</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mord mathnormal">b</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span></span></span></span></p></li></ol></blockquote><p>我们在 DRAM 的芯片内 集成 了一个由 SRAM 组成的 Cache ，有利于 猝发式读取 ，这就体现了计算机的层次结构运用。可见很多时候提高访存速度的手段是结合起来运用的。</p><h3 id="高速缓冲存储器cache"><a class="markdownIt-Anchor" href="#高速缓冲存储器cache"></a> 高速缓冲存储器Cache</h3><p>我们之前提到了，可以用单体或者多体来一次性将多条指令或数据读入高速缓存Cache或者是通过并行工作从主存中将数据读入Cache再送入CPU中。</p><p>但是，这么做还是不够快。研究发现：最近被访问的信息和临近的信息很可能还要被访问。比如我们在程序中调用多个函数或者过程。此时，如果每次都去从主存中读取数据到Cache中会浪费时间。所以，我们选择<strong>一次性将最近被访问的信息项临近的信息一起装入到Cache中</strong>。这样就可以避免CPU在原地空等Cache去从主存中读取信息了，提高了计算机访存效率。</p><p>我们在在这一节主要介绍Cache编码、命中率的计算以及映射方式、利用率的概念。<strong>非常</strong>重要，要求掌握。</p><h4 id="cache的工作原理"><a class="markdownIt-Anchor" href="#cache的工作原理"></a> Cache的工作原理</h4><p>参考下图：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617160906983.png" alt="image-20240617160906983" style="zoom:50%;" /><p>我们把主存地址划分为两部分：假设一个字n位，前m位储存主存块号，后b位字储存块内地址。这样就把主存按块划分，共有M=2<sup>m</sup>块；同理，将Cache的地址也划分为两部分，其中c位存储缓存块号，b位存储块内地址，C=2<sup>c</sup>反映了缓存块的数量，2<sup>b</sup>代表了块的大小，其中M&gt;&gt;C。通过这样做就建立起了Cache和主存间的映射关系，主存块号用标记记录与某缓存块建立了对应关系。</p><h4 id="命中与未命中"><a class="markdownIt-Anchor" href="#命中与未命中"></a> 命中与未命中</h4><p>在建立对应关系后，CPU欲读取主存某字有两种结果：主存已在Cache中，那么就直接从Cache中读取一个字，在较高层次的存储器中发现要访问的内容成为<strong>Cache命中</strong>；如果主存不在Cache中，那么就从主存中将整个字块一起调入Cache，再传入CPU，称为<strong>Cache未命中</strong>。</p><h4 id="cache-的命中率"><a class="markdownIt-Anchor" href="#cache-的命中率"></a> Cache 的命中率</h4><p>Cache 的命中率是CPU欲访问的信息在Cache 中的比率，命中率与 Cache 的容量与块长有关。一般每块可职4~8 个字，块长取一个存取周期内从主存调出的信息长度。</p><p>设N<sub>c</sub>是访问Cache的总命中次数，N<sub>m</sub>是访问主存的总次数，则命中率h为：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>=</mo><mfrac><msub><mi>N</mi><mi>c</mi></msub><mrow><msub><mi>N</mi><mi>c</mi></msub><mo>+</mo><msub><mi>N</mi><mi>m</mi></msub></mrow></mfrac><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">h=\frac{N_c}{N_c+N_m}\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3335309999999998em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span></span></span></p><h4 id="cache的效率"><a class="markdownIt-Anchor" href="#cache的效率"></a> Cache的效率</h4><p>效率e与命中率有关。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo>=</mo><mfrac><mrow><mtext>访问</mtext><mi>C</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mtext>的时间</mtext></mrow><mtext>平均访问时间</mtext></mfrac><mo>×</mo><mn>100</mn><mi mathvariant="normal">%</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">e=\frac{访问Cache的时间}{平均访问时间}×100\%\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">平</span><span class="mord cjk_fallback mtight">均</span><span class="mord cjk_fallback mtight">访</span><span class="mord cjk_fallback mtight">问</span><span class="mord cjk_fallback mtight">时</span><span class="mord cjk_fallback mtight">间</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">访</span><span class="mord cjk_fallback mtight">问</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">时</span><span class="mord cjk_fallback mtight">间</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">%</span></span><span class="mspace newline"></span></span></span></p><p>设Cache命中率为h，访问Cache的时间为t<sub>c</sub>，访问主存的时间t<sub>m</sub>，则有：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo>=</mo><mfrac><msub><mi>t</mi><mi>c</mi></msub><mrow><mi>h</mi><mo>×</mo><msub><mi>t</mi><mi>c</mi></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>h</mi><mo stretchy="false">)</mo><mo>×</mo><msub><mi>t</mi><mi>m</mi></msub></mrow></mfrac><mo>×</mo><mn>100</mn><mi mathvariant="normal">%</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">e=\frac{t_c}{h×t_c+(1-h)×t_m}×100\%\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3606559999999999em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8406559999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">h</span><span class="mclose mtight">)</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">%</span></span><span class="mspace newline"></span></span></span></p><blockquote><p>例题：设CPU共访问Cache命中2000次，访问主存50次。 Cache存取周期为50ns，主存存取周期为200ns，求Cache -主存系统的命中率和效率</p><ol><li><p>命中率：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>2000</mn><mrow><mn>2000</mn><mo>+</mo><mn>50</mn></mrow></mfrac><mo>=</mo><mn>0.97</mn><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">\frac{2000}{2000+50}=0.97\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mbin mtight">+</span><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">7</span></span><span class="mspace newline"></span></span></span></p></li><li><p>效率</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo>=</mo><mfrac><mrow><mn>50</mn><mi>n</mi><mi>s</mi></mrow><mrow><mn>0.97</mn><mo>×</mo><mn>50</mn><mi>n</mi><mi>s</mi><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>0.97</mn><mo stretchy="false">)</mo><mo>×</mo><mn>200</mn><mi>n</mi><mi>s</mi></mrow></mfrac><mo>×</mo><mn>100</mn><mi mathvariant="normal">%</mi><mo>=</mo><mn>91.7</mn><mi mathvariant="normal">%</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">e=\frac{50ns}{0.97×50ns+(1-0.97)×200ns}×100\%=91.7\%\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.365108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">7</span><span class="mbin mtight">×</span><span class="mord mtight">5</span><span class="mord mtight">0</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">s</span><span class="mbin mtight">+</span><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">7</span><span class="mclose mtight">)</span><span class="mbin mtight">×</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">%</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">9</span><span class="mord">1</span><span class="mord">.</span><span class="mord">7</span><span class="mord">%</span></span><span class="mspace newline"></span></span></span></p></li></ol></blockquote><h4 id="cache的基本结构"><a class="markdownIt-Anchor" href="#cache的基本结构"></a> Cache的基本结构</h4><p>下图清晰的显示出了Cache的工作流程：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617164528821.png" alt="image-20240617164528821" style="zoom:50%;" /><p>Cache的替换机构后续会详细介绍。</p><h4 id="cache的读与写"><a class="markdownIt-Anchor" href="#cache的读与写"></a> Cache的读与写</h4><p>更加底层，Cache是如何进行读写操作的呢？</p><p>当CPU要读取Cache信息时，结构图如下，也是我们主要讨论的：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617164924128.png" alt="image-20240617164924128" style="zoom:50%;" /><p>当CPU要对Cache执行写入操作时，有两种方法：写直达法和写回法。前者同时写入Cache和主存；而后者仅写入Cache，当Cache的数据要被替换出去时才把数据写入主存。</p><h4 id="cache的改进"><a class="markdownIt-Anchor" href="#cache的改进"></a> Cache的改进</h4><p>可以通过增加Cache的级数和统一与分立缓存来实现。</p><h3 id="cache-主存的地址映射"><a class="markdownIt-Anchor" href="#cache-主存的地址映射"></a> Cache-主存的地址映射</h3><p>重点小节，需要掌握。</p><p>Cache与主存通过划分块的方式实现映射，而映射地址的方式又有三种：直接映射（固定的映射方式）、全相连映射（灵活性大的映射关系）、组相联映射（前两者的折中）</p><h4 id="全相联映射"><a class="markdownIt-Anchor" href="#全相联映射"></a> 全相联映射</h4><p>结构图如图所示：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617165537981.png" alt="image-20240617165537981" style="zoom:50%;" /><p>这种方式的主存中的任一块可以映射到缓存中的任一块，Cache的标记位就是主存的字块号。利用率高，但比较电路的成本太高。标志位要有m位。如果Cache有n块，则需要有n个比较电路</p><h4 id="直接映射"><a class="markdownIt-Anchor" href="#直接映射"></a> 直接映射</h4><p>结构如图所示：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617165814185.png" alt="image-20240617165814185" style="zoom:50%;" /><p>这种方式把主存划分为跟整个Cache大小相同的块，Cache的标记位就是主存高地址t位。先找到Cache字块号，然后比较标记位和地址高t位</p><p>比较电路的成本低。如果主存空间有2<sup>m</sup>块，Cache中字块有2<sup>c</sup>块，则标志位只要有m-c位。且仅需要比较一次。</p><p>计算主存和Cache的映射关系公式为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mi>j</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><msup><mn>2</mn><mi>c</mi></msup></mrow><annotation encoding="application/x-tex">i=j\bmod2^c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span></span></span>，或者<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mi>j</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>C</mi></mrow><annotation encoding="application/x-tex">i=j\bmod C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>。总之就是主存块的序号对Cache的块数取模。</p><h4 id="组相联映射"><a class="markdownIt-Anchor" href="#组相联映射"></a> 组相联映射</h4><p>结构如图所示：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617170541668.png" alt="image-20240617170541668" style="zoom:50%;" /><p>此时映射关系为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mi>j</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><msup><mn>2</mn><mi>q</mi></msup></mrow><annotation encoding="application/x-tex">i=j\bmod2^q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>=</mo><mi>c</mi><mo>−</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">q=c-r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>。即此时可以任意指定映射的长度。</p><blockquote><p>例题：共2<sup>5</sup>=32个字块，分为2<sup>4</sup>=16个组，每组2<sup>1</sup>=2块c=5，q=4，r=1。画出组相联映射的结构图。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240617170901889.png" alt="image-20240617170901889" style="zoom:50%;" /></blockquote><p>这里的例题值得细读，但是篇幅有点多，日后再补上。</p><p>……</p><p>……</p><p>第二部分到此结束！敬请阅读第三部分😃</p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/121455066_p0.jpg" alt="121455066_p0" /></p>]]></content>
    
    
    <summary type="html">计算机指北笔记的第二部分！介绍了存储器的知识点，属于重要考点！</summary>
    
    
    
    <category term="计算机组成指北" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E6%8C%87%E5%8C%97/"/>
    
    
    <category term="计算机组成原理" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="存储器" scheme="http://example.com/tags/%E5%AD%98%E5%82%A8%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成指北（一）</title>
    <link href="http://example.com/posts/89bd5abd9854/"/>
    <id>http://example.com/posts/89bd5abd9854/</id>
    <published>2024-09-27T03:42:06.000Z</published>
    <updated>2024-09-27T03:42:06.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>写在开头</p><p>本笔记初次完成于2024年6月21日。由于原文篇幅过长，导致网页渲染极为卡顿，出现了严重的性能问题。因此，原文被分为多个章节进行重新整理，内容保持不变。本文旨在帮助应对期末考试，如果您的目标是考研或深造，请另寻他处。如果是为了计算机组成原理考试，请务必核对教材信息的一致性，以免知识点出现冲突。</p><p>本文能为你做什么？</p><p>有了本文，你可以豪爽的翘掉一个学期的计组。没错，这不是在吹牛，因为现在大部分的学校计组老师只会念PPT，你去了也听不进去的。而且，老师授课时往往把所有的知识一视同仁的灌输给你，缺少层次性。这就给记忆带来了极大的难度，仿佛抱着一个篮球那么大的苹果不知道何从下口，囫囵吞枣的效果极差。而真正的精华——划重点的复习PPT往往要拖到复习周才给你（因为老师知道如果提前发了大家就都不会听课了）。</p><p>所以本文能为你做的，就是在尽量丰富一些重难点的讲解同时，剔除精简掉一些庞杂或者不予考察的知识，并指出本章节的考点所在。力求重点突出，事半功倍。</p><p>如何食用？</p><p>本文是笔者在复习周时参照教材、复习PPT和网课整理而成，主要归纳了计算机组成原理的核心内容，并针对一些疑难点融入了笔者自己的思考和资料。所以推荐读者一边参照教材/PPT一边阅读本文，以阅读本文为主，教参为辅，并多做例题验证思路。如此，计组80+是完全没有问题的。倘若追求90+甚至更高，那么最好自己把教材啃一遍，这篇文章仅做参考就好。</p><p>助阅读愉快！</p><p>：）</p></blockquote><h1 id="计算机组成原理速成版"><a class="markdownIt-Anchor" href="#计算机组成原理速成版"></a> 计算机组成原理速成版</h1><p>计算机组成原理速成版，五天整理出来的一篇小笔记，对标期末重点做出来的博客。教你从一名普通的大学牲逐渐成长为冯·诺依曼:)</p><p>本文基于教材《计算机组成原理》·唐朔飞、学校教学PPT，部分参考了<a href="https://www.bilibili.com/video/BV1t4411e7LH?p=1&amp;vd_source=5e421b52b9103cce8e012430aa932553">计算机组成原理（哈工大刘宏伟）135讲（全）高清</a>整理而成。预计共有四大部分：</p><ul><li>第一部分：对应教材的1~2章，主要介绍一些计算机的基础知识，重在概念考察，难度较为简单。</li><li>第二部分：对应教材的3~5章，介绍了系统总线、储存器和I/O系统。存储器部分涉及到设计，需要重点掌握。</li><li>第三部分：对应教材的6~7章，介绍了计算机的运算方法和指令系统，重点是ALU的原理与设计，非常重要。</li><li>第四部分：对应教材的8~10章，涵盖了CU和CPU所有功能设计，题目比较关键，也最为复杂。</li></ul><p>当然，为了便于排版和查找，本文还是按照传统的章节来逐章介绍，列出部分是为了帮助读者快速归纳定位到自己想要学习的知识，对整本书的知识体系有一个大概的概念。</p><p>Now, let’s begin.</p><h2 id="第一-二章-概论"><a class="markdownIt-Anchor" href="#第一-二章-概论"></a> 第一、二章 概论</h2><blockquote><p>基础知识的理解，常见于选择判断题。<br />如：第一台计算机的名字和时间，计算机的层次结构、储存体基本名词。着重记忆。<br />要记住冯诺依曼计算机的基本特点</p></blockquote><h3 id="基础知识"><a class="markdownIt-Anchor" href="#基础知识"></a> 基础知识</h3><p>ENIAC，全称为Electronic Numerical Integrator And Computer，即电子数字积分计算机，于1946年诞生于美国，是世界上第一台计算机。（有争议，百度上指出ABC计算机才是第一台，但是以教材为准）</p><p>目前的计算机的层次结构，可以划分为五种：</p><ol><li>虚拟机器M4，用编译程序将高级语言翻译成汇编语言程序</li><li>虚拟机器M3，用汇编程序将汇编语言翻译成机器语言程序</li><li>虚拟机器M2，用机器语言解释操作系统</li><li>虚拟机器M1：用微指令解释机器指令</li><li>虚拟机器M0：由硬件直接执行微指令</li></ol><p>其中M4~M2由软件实现，M1~M0由硬件实现。计组只要讨论的是M1~M0。</p><p>冯·诺依曼体系计算机的特点：</p><ol><li>计算机由五大部件组成：运算器、存储器、控制器、输入设备和输出设备</li><li>指令和数据以同等地位存于存储器，可按地址寻访</li><li>指令和数据用二进制表示</li><li>指令由操作码和地址码组成</li><li>存储程序，指令在储存器内按顺序存放</li><li>机器以运算器为中心</li></ol><p>硬件结构框图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616134051396.png" alt="image-20240616134051396" style="zoom: 33%;" /><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616134256787.png" alt="image-20240616134256787" style="zoom:33%;" /><h3 id="存储器的基本组成"><a class="markdownIt-Anchor" href="#存储器的基本组成"></a> 存储器的基本组成</h3><p>存储器包含：</p><ul><li>MAR（存储器地址寄存器）</li><li>MDR（存储器数据寄存器）</li><li>存储体（存储数据的内存）</li></ul><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616134805357.png" alt="image-20240616134805357" style="zoom:33%;" /><p><strong>存储体</strong>又包含<strong>存储单元</strong>和<strong>存储元件（0/1）</strong>。三者的关系依次对应于：大楼、房间、床位（无人/有人）。<strong>存储单元</strong>内存放一串二进制代码，每个存储单元被赋予一个地址号；<strong>存储字</strong>是存储单元内存放的二进制代码的组合，即存放不同的存储字；<strong>存储字长</strong>即存储字的位数，即一个字内有几个存储元件。</p><p>MAR是存储器地址寄存器，反映存储单元的个数。MDR是存储器数据寄存器，反映存储字长。若MAR=4，MDR=8，则有2<sup>4</sup>=16个存储单元，存储字长为8。</p><p>除了存储字长，还有一个机器字长需要区分：机器字长是CPU一次能处理数据的位数，与CPU中寄存器的位数有关。一般机器字长等于ALU（算术逻辑单元）和寄存器之间的数据传输宽度和寄存器的位数。</p><table><thead><tr><th>机器字长</th><th>存储字长</th></tr></thead><tbody><tr><td>机器字长通常指的是CPU一次性能处理的数据的位数。它是计算机体系结构的一个基本参数，决定了CPU内部运算和处理数据的能力。</td><td>存储字长是指存储系统中一次性能读写的数据的位数。它与存储设备的设计有关，如RAM的组织方式。</td></tr><tr><td>机器字长影响着CPU的寄存器大小、指令集的设计以及数据的宽度。例如，一个32位的CPU意味着其寄存器和大多数指令都是32位宽。</td><td>存储字长可以与机器字长相同，也可以不同。例如，一个32位的CPU可能使用16位的存储字长，这意味着每次读写操作涉及两个存储单元。</td></tr><tr><td>机器字长直接关系到计算机的寻址能力和数据处理能力。一个较长的机器字长通常意味着更高的性能和更复杂的计算能力。</td><td>存储字长影响数据的存储效率和访问速度。较长的存储字长可以减少读写操作的次数，提高数据访问速度。</td></tr></tbody></table><p>两者的主要区别在于它们的应用领域和影响范围：</p><ul><li>机器字长主要影响CPU的运算能力和指令集的设计。</li><li>存储字长主要影响数据的存储方式和访问效率。</li></ul><p>在实际应用中，机器字长和存储字长可能会相互影响。例如，如果存储字长小于机器字长，CPU在一次读写操作中无法获取或存储完整的机器字数据。这意味着CPU需要进行多次存储访问才能完成一次完整的数据传输，从而降低数据传输效率。反之，如果存储字长大于机器字长，每次存储访问都传输多于CPU实际需要的数据，可能导致资源浪费。例如，一个32位的CPU使用64位的存储字长，每次访问存储器都会传输64位的数据，但实际只处理32位的数据。</p><p>掌握这些概念后就可以计算存储容量了，如下图：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616143832648.png" alt="image-20240616143832648" style="zoom:50%;" /><h2 id="第三章-系统总线"><a class="markdownIt-Anchor" href="#第三章-系统总线"></a> 第三章 系统总线</h2><blockquote><p>总线带宽需要会计算，每秒钟传送字节的个数，总线标准的概念了解，总线结构不要求会设计，但是要知道有什么优缺点。<br />总线判优，通信方式</p></blockquote><p>我们已经对计算机的结构有了一个初步的了解，接下来我们从总线部分开始入手，先从计算机的各个部件直接如何通信讲起。</p><h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3><p>什么是总线？</p><p>总线是连接各个部件的信息传输线，是各个部件共享的传输介质。CPU通过总线来与其他部件进行通信。</p><h3 id="分类"><a class="markdownIt-Anchor" href="#分类"></a> 分类</h3><p>总线分为<strong>片内总线</strong>、<strong>系统总线</strong>和<strong>通信总线</strong>。</p><p>片内总线指芯片内部的总线，例如CPU内部各部件进行通信的总线。</p><p>系统总线则是计算机各部件之间的信息传输线</p><ul><li>数据总线，双向，与机器字长、存储字长有关。宽度代表CPU一次能传输数据的大小。</li><li>地址总线，单向，与存储地址、I/O地址有关。宽度代表CPU能寻址的范围大小。</li><li>控制总线，有出有入。宽度代表CPU能进行指令调控的能力大小。比如存储器读写指令、终端确认、总线允许等。</li></ul><p>通信总线指计算机系统之间或计算机系统与其他系统之间的通信，比如USB数据线，鼠标线等。</p><h3 id="性能指标"><a class="markdownIt-Anchor" href="#性能指标"></a> 性能指标</h3><p>总线的性能指标有许多，这里只介绍比较重要的几个：</p><ol><li>总线宽度：数据线的根数</li><li>总线带宽：每秒传输的最大<strong>字节</strong>数（MBps）</li></ol><blockquote><p>例题：总线工作频率为33MHz，总线宽度为32位，求总线带宽</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>33</mn><mo>×</mo><mo stretchy="false">(</mo><mn>32</mn><mo>÷</mo><mn>8</mn><mo stretchy="false">)</mo><mo>=</mo><mn>132</mn><mi>M</mi><mi>B</mi><mi>p</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">33×(32÷8)=132MBps</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">8</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">3</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span></span></span></span></p><p>总线宽度为32位，对应32/8=4个字节。工作频率为33MHz，即一秒内工作33M次，则每秒传输最大字节数为4Byte*33M=132MBps</p><p>细节：注意单位是MBps，即 <em>Million Byte per second</em>，每秒传输字节数（带宽）。</p></blockquote><h3 id="总线标准"><a class="markdownIt-Anchor" href="#总线标准"></a> 总线标准</h3><p>总线标准是指在计算机系统中用于数据传输的一组规范和协议，这些规范定义了数据如何在不同的硬件组件之间传输。这些协议对双方都是透明的，只要一方的设备按照标准实现了相应的接口，另一方就可以实现对接口的调用，而无须关系对方设备的具体细节（有点类似Go的接口哈）。</p><p>常见的总线标准有：PCI（现代计算机最常用的总线之一）、USB、SATA等。</p><p>更详细的内容就不介绍了，内容太多，请读者自行查阅资料扩展。</p><h3 id="总线结构"><a class="markdownIt-Anchor" href="#总线结构"></a> 总线结构</h3><p>这一节比较重要，虽然不要求设计，但是要掌握各个结构有什么优缺点。</p><h4 id="单总线结构"><a class="markdownIt-Anchor" href="#单总线结构"></a> 单总线结构</h4><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616151609261.png" alt="image-20240616151609261" style="zoom:50%;" /><p>所有组件通过单一的总线连接，数据、地址和控制信号都通过这个总线传输。</p><ul><li>优点：设计简单，成本较低，适用于小型或简单的系统。</li><li>缺点：由于所有组件共享同一总线，因此<strong>数据传输速率受限</strong>，不适合高速或高容量的系统。</li></ul><h4 id="双总线结构"><a class="markdownIt-Anchor" href="#双总线结构"></a> 双总线结构</h4><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616151918355.png" alt="image-20240616151918355" style="zoom:50%;" /><p>将速度较低的设备从总线上剥离下来，形成两个总线I/O设备种类很多，功能差距很大，速度差距也很大，CPU将一部分功能下放给通道，由通道对I/O统一管理。系统中存在两条总线，通常一条是主存总线（连接CPU和内存），另一条是I/O总线（连接外设）。</p><ul><li>优点：将CPU与内存的高速通信和I/O设备的通信分离，减少了总线争用，提高了整体性能。</li><li>缺点：需要桥接器或控制器在两个总线之间进行数据传输。</li></ul><h4 id="三总线结构"><a class="markdownIt-Anchor" href="#三总线结构"></a> 三总线结构</h4><p>三总线结构有两种形式，第一种：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616153302977.png" alt="image-20240616153302977" style="zoom:50%;" /><p>特点是有一条主存总线用于CPU和主存的传输；I/O总线连接CPU和各种外设交换信息；DMA总线用于高速I/O设备（磁盘、磁带等）与主存交换信息。</p><ul><li>优点：比单总线结构来说加快了效率</li><li>缺点：在三总线结构中任一时刻只能使用一条总线，效率瓶颈</li></ul><p>第二种结构：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616154443499.png" alt="image-20240616154443499" style="zoom:50%;" /><p>CPU和Cache（高速缓冲存储器）利用局部总线相连，Cache控制器将Cache连接到局部总线和系统总线上。主存通过Cache和CPU间接传递数据</p><p>主存与I/O设备传输不需要经过CPU，扩展总线将各个接口部件连接起来，每个接口又可以连一堆设备，扩展总线利用扩展总线接口与系统总线相连。</p><ul><li>优点：工作效率明显提高</li><li>缺点：设计更加复杂</li></ul><h4 id="四总线结构"><a class="markdownIt-Anchor" href="#四总线结构"></a> 四总线结构</h4><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616155838820.png" alt="image-20240616155838820" style="zoom:50%;" /><p>增加一条高速总线。各个外设速度也并不相同，高速总线桥不用经过系统总线，使得这些高速设备与CPU关系更密切。</p><ul><li>优点：对高速设备而言，自身的工作可以更少依赖CPU，同时又比拓展总线上的低速设备更加靠近CPU，对于高性能设备和CPU来说，各自的效率将获得更大的提高。</li><li>缺点：实现更加复杂</li></ul><p>以下是关于单总线、双总线、三总线和四总线结构的总结表格：</p><table><thead><tr><th>总线结构</th><th>描述</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td><strong>单总线结构</strong></td><td><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616151609261.png" alt="单总线结构" style="zoom:50%;" /></td><td>- 设计简单<br>- 成本较低<br>- 适用于小型或简单的系统</td><td>- 数据传输速率受限<br>- 不适合高速或高容量的系统</td></tr><tr><td><strong>双总线结构</strong></td><td><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616151918355.png" alt="双总线结构" style="zoom:50%;" /></td><td>- 将CPU与内存的高速通信和I/O设备的通信分离<br>- 减少总线争用，提高整体性能</td><td>- 需要桥接器或控制器在两个总线之间进行数据传输</td></tr><tr><td><strong>三总线结构（第一种）</strong></td><td><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616153302977.png" alt="三总线结构第一种" style="zoom:50%;" /></td><td>- 比单总线结构加快效率</td><td>- 在任一时刻只能使用一条总线，效率瓶颈</td></tr><tr><td><strong>三总线结构（第二种）</strong></td><td><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616154443499.png" alt="三总线结构第二种" style="zoom:50%;" /></td><td>- 工作效率明显提高</td><td>- 设计更加复杂</td></tr><tr><td><strong>四总线结构</strong></td><td><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616155838820.png" alt="四总线结构" style="zoom:50%;" /></td><td>- 高速设备与CPU关系更密切，效率更高<br>- 高性能设备和CPU的效率获得更大的提高</td><td>- 实现更加复杂</td></tr></tbody></table><h3 id="总线控制"><a class="markdownIt-Anchor" href="#总线控制"></a> 总线控制</h3><p>设备分有<strong>主设备</strong>和<strong>从设备</strong>两种模块。主设备对总线有控制权，从设备响应从主设备发来的总线命令。要实现总线控制设备，就需要解决多个主设备发出请求时的总线仲裁权分配问题。总线仲裁的原则是：<strong>优先权、公平性</strong>。优先权高的设备优先使用设备，优先权同级别的设备则按照时间先后来公平分配。</p><p>总线的判优控制分为两种，集中式和分布式。前者将逻辑控制集中在一处（比如CPU中），后者把逻辑控制分散在与总线相连的各个部件或设备上。</p><p>集中式包括：</p><ul><li>链式查询</li><li>计数器定时查询</li><li>独立请求方式</li></ul><p>分布式的特点是：</p><ul><li>自我选择：大家都把标志号放在总线上</li><li>碰撞检测：随便穿传，撞上了就重来，比如以太网</li></ul><h4 id="链式查询方式"><a class="markdownIt-Anchor" href="#链式查询方式"></a> 链式查询方式</h4><p>链式查询的结构图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616161557901.png" alt="image-20240616161557901" style="zoom:50%;" /><p>BR或实现，只要多于一个请求，BR就为1，但总线不在意哪个设备的请求。BG串行实现。BS总线忙，表示接口占用了总线。</p><p>BG的总线同意请求从第一个I/O接口开始依次往下传，如果有一个I/O接口请求使用总线，那么BG信号就停止往下传输，并且建立BS总线忙信号，表示它占用了总线。在链式查询中，离总线控制部门最近的设备拥有最高的优先级。</p><ul><li>优点：简单。只要很少的几根线就能实现总线控制，且很容易实现设备扩充，对电路故障敏感。</li><li>缺点：优先级低的设备很难获得总线使用权。</li></ul><h4 id="计数器定时查询方式"><a class="markdownIt-Anchor" href="#计数器定时查询方式"></a> 计数器定时查询方式</h4><p>结构图如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616162129156.png" alt="image-20240616162129156" style="zoom:50%;" /><p>多了个设备地址线，少了总线同意线BG，当某个请求的接口的设备地址与计数器一致时，获得使用权。</p><p>在接收到BR总线请求时，总线控制设备中的计数器开始计数，并通过设备地址线，向各设备发出一组地址信号。当某个请求占用总线的设备地址与计数值一致时，获得总线使用权，终止计数查询。特点是：计数终止后，可以选择归零重新计数，这样就按照设备的优先级来分配使用权；也可以选择从上一次断点继续开始计数，此时所有设备的优先级相同。计数器的初始值还可以由程序设置，故优先次序也可以改变，</p><ul><li>优点：可以改变优先次序，比链式查询更加灵活。</li><li>缺点：实现更加复杂，对电路故障的敏感度不如链式查询。</li></ul><h4 id="独立请求方式"><a class="markdownIt-Anchor" href="#独立请求方式"></a> 独立请求方式</h4><p>结构如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616163313158.png" alt="image-20240616163313158" style="zoom:50%;" /><p>独立请求即每个设备都有配套的BR请求线和BG同意线，总线控制部门内置一个排队电路，可以根据优先次序确定响应哪一台设备的请求。</p><ul><li>优点：响应速度快，优先次序控制更加灵活（可以用软件实现）</li><li>缺点：总线控制更加复杂，控制线数量多。链式查询中仅用两根线确定总线使用权属于哪个设备，计数器查询中使用log<sub>2</sub>n根线，而独立请求中要2n根线，其中n是允许接纳的最大设备数。</li></ul><h3 id="通信控制"><a class="markdownIt-Anchor" href="#通信控制"></a> 通信控制</h3><p>我们定义一个总线传输周期为完成一次总线操作的时间，一共有四个阶段：</p><ol><li>申请分配阶段：主模块申请，总线仲裁决定</li><li>寻址阶段：主模块向从模块给出地址和命令</li><li>传数阶段：主模块和从模块交换数据</li><li>结束阶段：主模块撤销有关信息，让出总线使用权</li></ol><p>解决了总线判优的逻辑后，接下来涉及到的就是具体的总线控制。通信控制主要解决双方如何获知传输开始和传输结束，以及双方如何协调配合。通常有四种方式：</p><ul><li>同步通信：由统一时标控制数据传送</li><li>异步通信：采用应答方式，没有公共时钟标准</li><li>半同步通信：同步和异步相结合</li><li>分离式通信：充分挖掘系统总线每个瞬间的动力</li></ul><h4 id="同步通信"><a class="markdownIt-Anchor" href="#同步通信"></a> 同步通信</h4><ul><li>优点：实现简单</li><li>缺点：<ol><li>总线上所有设备必须按相同的时钟频率工作，导致设备必然使用速度最慢的部件来设计公共时钟，严重降低了总线的工作效率</li><li>为防止时钟信号扭曲，高速工作时，总线距离必须足够短</li></ol></li></ul><blockquote><p>例题：假设总线时钟频率为100MHz，总线传输周期为4个时钟周期，总线宽度位32位，求总线数据传输率。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>一个时钟周期</mtext><mo>:</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>100</mn><mi>M</mi><mi>H</mi><mi>z</mi><mo>=</mo><mn>0.01</mn><mi>u</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">一个时钟周期:1/100MHz=0.01us</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">钟</span><span class="mord cjk_fallback">周</span><span class="mord cjk_fallback">期</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">1</span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>总线传输周期</mtext><mo>:</mo><mn>0.01</mn><mi>u</mi><mi>s</mi><mo>×</mo><mn>4</mn><mo>=</mo><mn>0.04</mn><mi>u</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">总线传输周期:0.01us×4=0.04us</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">总</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">周</span><span class="mord cjk_fallback">期</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">1</span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">4</span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>总线数据传输率</mtext><mo>:</mo><mo stretchy="false">(</mo><mn>32</mn><mo>÷</mo><mn>8</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>0.04</mn><mi>μ</mi><mi>s</mi><mo>=</mo><mn>100</mn><mi>M</mi><mi>B</mi><mi>p</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">总线数据传输率:(32÷8)/0.04μs=100MBps</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">总</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">8</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">4</span><span class="mord mathnormal">μ</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span></span></span></span></p></blockquote><h4 id="异步通信"><a class="markdownIt-Anchor" href="#异步通信"></a> 异步通信</h4><p>采用应答方式。在主、从模块间增加两条应答线，主模块发送请求信号时，等到从模块返回响应信号后完成握手，再开始通信。</p><p>异步通信的应答方式又分为：不互锁、半互锁和全互锁三种：</p><ul><li>不互锁：请求过一段时间后，确认从模块已经收到请求信号，撤销请求信号，CPU先后将地址、写命令、数据全给出。向CPU主存写信息即这种方式</li><li>半互锁：请求信号必须等到收到回答信号才能撤销，多CPU访问共享存储器，必须未被占用，才能执行后续操作。在多机系统中CPU访问某个共享存储器。</li><li>全互锁：回答信号必须等到请求信号撤销后才能撤销。比如网络通信。</li></ul><blockquote><p>例题：假设每秒传输120个数据帧，字符格式规定1个起始位，8个数据位，1个校验位，1个终止位</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240616194751115.png" alt="image-20240616194751115" style="zoom:67%;" /><p>波特率：单位时间信号（或波形）改变状态的次数，单位为Baud（波特）</p><p>比特率：单位时间传递2进制数据的位数，单位为bps（位/秒）</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>一帧包含</mtext><mn>1</mn><mo>+</mo><mn>8</mn><mo>+</mo><mn>1</mn><mo>+</mo><mn>1</mn><mo>=</mo><mn>11</mn><mtext>位</mtext></mrow><annotation encoding="application/x-tex">一帧包含1+8+1+1=11位</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">帧</span><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">含</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord cjk_fallback">位</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>波特率：</mtext><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>8</mn><mo>+</mo><mn>1</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>×</mo><mn>120</mn><mo>=</mo><mn>1320</mn><mi>B</mi><mi>a</mi><mi>u</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">波特率：(1+8+1+1)×120=1320Baud</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">波</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">率</span><span class="mord cjk_fallback">：</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">3</span><span class="mord">2</span><span class="mord">0</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">a</span><span class="mord mathnormal">u</span><span class="mord mathnormal">d</span></span></span></span></p><p>一帧包含11位，其中有效数据位为8位</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>比特率：</mtext><mn>8</mn><mo>×</mo><mn>120</mn><mo>=</mo><mn>960</mn><mi>b</mi><mi>p</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">比特率：8×120=960bps</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">率</span><span class="mord cjk_fallback">：</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">9</span><span class="mord">6</span><span class="mord">0</span><span class="mord mathnormal">b</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>比特率：</mtext><mfrac><mn>8</mn><mn>11</mn></mfrac><mo>×</mo><mn>1320</mn><mi>B</mi><mi>a</mi><mi>u</mi><mi>d</mi><mo>=</mo><mn>960</mn><mi>b</mi><mi>p</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">比特率：\frac{8}{11}×1320Baud=960bps</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">率</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">3</span><span class="mord">2</span><span class="mord">0</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">a</span><span class="mord mathnormal">u</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">9</span><span class="mord">6</span><span class="mord">0</span><span class="mord mathnormal">b</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span></span></span></span></p></blockquote><h4 id="半同步通信"><a class="markdownIt-Anchor" href="#半同步通信"></a> 半同步通信</h4><p>半同步通信是同步和异步相结合。</p><p>同步方面：发送方用系统时钟前沿发送信号，接收方用系统时钟后延判断与识别。</p><p>异步方面：允许不同速度模块的和谐工作，增加了一条“等待”响应信号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>W</mi><mi>A</mi><mi>I</mi><mi>T</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{WAIT}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>。</p><p>小结一下</p><p>以上三种通信方式都有几个共同点，在一个总线传输周期内：</p><ul><li>主模块发送地址和命令，占用总线</li><li>从模块准备数据，总线空闲</li><li>从模块向主模块发送数据，占用总线</li></ul><p>说明还有空闲，没有充分挖掘出总线每个时间的潜力。</p><h4 id="分离式通信"><a class="markdownIt-Anchor" href="#分离式通信"></a> 分离式通信</h4><p>分离式通信能实现总线利用的效率最大化，它把一个时钟周期拆成两部分。</p><ul><li>子周期1：主模块将地址、命令、主模块号放到系统总线上，一旦发送完，立即放弃总线使用权</li><li>子周期2：经选择、译码、读取一系列内部操作后，将A模块编号，B模块地址，所需数据放到总线上</li></ul><p>两个传输周期都是单方向的，每个模块都变成了主模块</p><p>特点是：</p><ol><li>各模块有权申请占用总线</li><li>采用同步方式通信，不等对方回答</li><li>各模块准备数据时，不占用总线</li><li>总线被占用时，无空闲</li></ol><p>……</p><p>……</p><p>第一部分暂时结束，敬请阅读第二部分^^</p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/60e6e4dec743523c13ccc9fcabd56171.png" alt="60e6e4dec743523c13ccc9fcabd56171" /></p>]]></content>
    
    
    <summary type="html">对标期末重点整理出来的计算机组成原理笔记。可以放心翘课，有它足矣。本章主要介绍计组的前导概论和总线部分。</summary>
    
    
    
    <category term="计算机组成指北" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E6%8C%87%E5%8C%97/"/>
    
    
    <category term="计算机组成原理" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="概论" scheme="http://example.com/tags/%E6%A6%82%E8%AE%BA/"/>
    
    <category term="系统总线" scheme="http://example.com/tags/%E7%B3%BB%E7%BB%9F%E6%80%BB%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>6月总结·2024</title>
    <link href="http://example.com/posts/b55416ea8e21/"/>
    <id>http://example.com/posts/b55416ea8e21/</id>
    <published>2024-07-14T02:48:29.000Z</published>
    <updated>2024-07-14T02:48:29.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="6月总结2024"><a class="markdownIt-Anchor" href="#6月总结2024"></a> 6月总结·2024</h1><p>终于有时间写一写总结了，6月份的总结拖到七月下旬写是不是很奇怪……也没办法，一来复习周+期末周真的耗费了大量的精力，二来因为纯粹是在复习和考试也没有做成多少事，更别说学点Go什么其他的了。</p><p>不过还是浅浅的总结一下6月份吧，看我还记得多少。</p><h2 id="比赛篇"><a class="markdownIt-Anchor" href="#比赛篇"></a> 比赛篇</h2><h3 id="cet6"><a class="markdownIt-Anchor" href="#cet6"></a> CET·6</h3><p>想了半天还是把六级放了进来，毕竟这个月我唯一参加的比较大型的考试就只有六级。为了准备六级，我也还是稍微花了点心思去背背单词和刷题。大概做了六套卷子吧，感觉差不多了。最后考完自认为感觉良好，除了作文由于长期缺乏相关训练写出来的东西只能用悲剧来形容，其他的部分倒也还好，抛开听力不谈只错了4道完型填空和1道阅读，通过应该是没有太大问题。</p><p>虽然六级结束了，不过好歹把背单词的习惯保持了下来，感谢Duolingo:)</p><h2 id="书籍篇"><a class="markdownIt-Anchor" href="#书籍篇"></a> 书籍篇</h2><p>在5月总结中原定于6月完成的Go语言学习并没有完成，因为我大部分时间都去准备六级和复习了。所以6月份其实没有看多少编程相关的书籍~~，只能写写其他的水点字数。~~</p><h3 id="罪与罚"><a class="markdownIt-Anchor" href="#罪与罚"></a> *罪与罚</h3><p>在6月头几天抽空把《罪与罚》读完了，为后面的学习腾出精力。本来想要单独写一篇关于《罪与罚》的书评，但一来写一篇完整的书评咬文嚼字太耗费精力，二来距离我读完这本书也过去了一月有余，细节部分已经记不太清了，于是只好作罢。</p><p>我一开始为什么想要看这本书呢？貌似是在刷知乎时看到有人推荐《罪与罚》中的心理描写和人物刻画写的极其出彩，于是便想要自己亲自品味一番。但是看完全书后，我发现《罪与罚》与我想象中的形象有所差别。书的内容其实并不多，讲述的不过是一个男青年在杀人后与自己内心相搏斗挣扎后最终选择自首的故事。“罪”的内容只占很小一部分，而剩下的大部分内容都是在写“罚”。而“罚”中乃至全书都充斥着海量无比详细生动的心理描写。作者很擅长把握人的心理动作，能把人物的想法刻画的如此细节又不失冗杂无用是一项了不起的本事——不过对我而言多少还是有点太长了haha，有时候大版大版主人公的心理活动真是让我看的昏昏欲睡，要啃下这些也不是一件容易事。依我之见，陀思妥夫斯基多少有点水稿费之嫌，只不过低级作家水稿费写的烂，顶级作家水稿费还能写得好。</p><p>再来谈谈这本书的内核。这本书的内核是撕裂的，或者说其所想要传达的价值观，我并不完全认可，甚至连陀翁本人也未见得能够全盘接受。拉斯柯尔尼科夫深受无政府主义“高一等的人”思想毒害，而作者在拉斯柯尔尼科夫赎罪的过程中有力的批判了无政府主义等其他天马行空的“歪理”，但是最后作品却导向了宗教，否定了所有暴力反抗的道路，倡导书中女主角索尼娅“包容一切”的心态，也即文学史上著名的“索尼娅道路”。这一点必然和作者本人就是基督徒有所关系</p><p>面对个人无能为力难以左右的黑暗局势，我们要以怎样的心态活着？作者笔下真实露骨的俄罗斯社会是窒息的，马尔美拉陀夫一家的遭遇不忍卒读，拉斯柯尔尼科夫的困境令人嗟叹，上层社会却依旧歌舞升平，小人彼特罗维奇、伪君子斯维里加洛夫之流大行其道。时代的尘埃压得人根本喘不过气。</p><blockquote><p>对黑暗现实的描绘和批判，如他揭示的城市贫民生活的艰辛，对卢仁的冷酷卑鄙和极端利己主义，对地主斯维里加洛夫的荒淫无耻的批判，都突破了作家的反动说教，闪耀着清醒的现实主义的光芒。因而，这部作品才具有超越时间与空间的艺术力量，在世界范围内广泛流传。</p></blockquote><p>对处于历史“垃圾时间”的人们来说，该用什么样的信念支撑自己继续生活？作者认为，一切以暴力抗恶的作法都不足取，因为人无法逃避内心的惩罚，在毁灭他人的同时也毁灭了自身。相对的，他选择了索菲亚作为答案：</p><blockquote><p>听从内心的良知，谦卑下来，用牺牲的、看似微不足道的爱来改变这个罪恶世界的窄路。这似乎颇像圣经中对弥赛亚的记载：他来到这个世界，不是要带领十二营的天使暴力征服世界，建立他的国度，而是借着温柔的服侍、牺牲的爱，征服世界的罪，把罪的国度变成爱与义的国度。</p></blockquote><p>只不过，在我看来，弥赛亚的背后起码还有着十二营的天使，而索菲亚除了把一切交付给上帝逆来顺受根本没有所谓选择。选择用爱与正义去感化黑暗的世界，可能是这本现实主义鸿篇巨著中最不现实主义的一点。这也许是生活在“王侯将相，宁有种乎”这片土地上的我们永远也无法理解的事情。</p><blockquote><p>作者还力图把拉斯柯尔尼科夫的犯罪行为归结为抛弃了对上帝的信仰所致。陀思妥耶夫斯基在小说中宣扬的这些宗教思想，与整部作品所显示的强大批判力量是不相协调的：这里充分表现出作者世界观的尖锐矛盾。</p></blockquote><p>《罪与罚》也被人称作是一本政治小说，在我看来的确所言非虚。抛开宗教的理念不谈，作者对如何对抗“罪”的思考值得人们反复揣摩。</p><blockquote><p>用“罪”的形式对抗这个罪恶的世界，但是灵魂却陷入了无边的痛苦。</p><p>面对罪恶充斥的世界究竟该怎么做?能否凭借高尚的动机用罪恶的形式来对抗罪恶?这实在是一个艰难的问题。</p><p>回答不可以么?杀人是罪，但是粉碎旧世界带来进步的革命就是鲜血写成，且法律本身也判处死刑。</p><p>所以回答可以么?那么私刑为何不可?一个存在大量劫富济贫“侠盗”的武侠社会是否是理想国?</p><p>我们难以回答，是因为我们不过是人。我们深知自己的劣根性和不足。我们既无法拥有一架上帝的天平，可以把刑罚当做砝码称量出一个绝对公平的世界，也无法拥有一把上帝的宝剑，可以瞬间粉碎旧世界回归伊甸园。事实上，在这个充斥罪恶的世界里，我们不得不提炼出“罪恶”矿石中的暴力、欺骗…铸造一柄双刃剑来对抗罪恶，而为了减少这柄剑的反噬，我们选择了多人或者说国家来执掌它，而这柄双刃剑是否仍旧是罪恶，究竟是可以根据结果或者执剑人的动机来判断，又或是罪终究是罪?而执剑人的动机又能否保证全然是善，如同罗佳在砍下斧头的时候，是否完全没想过谋财?(显然不是)</p><p>我们仍旧难以回答，因为我们不过是人。我们只能在超越我们认知、经验的问题上努力探索，但是无法凭借一介人类之身定义整个人类。</p></blockquote><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><p>期末复习期间整理出了几篇博客，姑且算在里面吧。其中关于计算机组成方面投入精力最多，个人认为<a href="https://adam8en.github.io/2024/06/21/%E8%AF%BE%E5%A0%82%E9%9A%8F%E7%AC%94/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E6%8C%87%E5%8C%97/">计算机组成指北 | Adam8enの8log</a>就是我最后的波纹了，虽然最后成绩也实在是谈不上满意，对不住与之相称的期望（苦笑）。</p><h2 id="随便写点"><a class="markdownIt-Anchor" href="#随便写点"></a> 随便写点</h2><p>鉴于现在已经7月下旬，我也难以复刻出6月的想法，就写写当下一些想说的话吧，顺带对上个学期再做一个反思。</p><p>先说结论吧：实在是差强人意。</p><p>回顾整个大二下学期，应该是我入学以来最为忙碌的一个学期，但是收获感却并不高。就像是在跑步机上狂奔，抬头一看仍然人在原地。我打了很多比赛，经手了很多项目，能带给我回报的机会却并不多。如果站在功利的角度来看，过去的那四个月里起码我可以去玩两个月艾尔登法环。尤其是期末考试的绩点也并不理想，虽然有较大进步，但距离预期仍然很远。</p><p>是我在自欺欺人吗？是我太好大喜功了吗？我不时扪心自问，但永远得不到一个恒定的答案。</p><p>大学也已经过去了一半了，我不得不直面那个曾经怎么也不愿意承认的事实：努力并不一定就会有回报，而在高考后更是如此。类似想说的话还有很多很多，但自从我进入大学后目睹的一些滑稽现实已经多到让我记不请了。逆天改命的故事之所以久久被人传颂，正是因为它只能停留在绝大多数人抬头仰视的幻想之中，如海市蜃楼让人心向往焉；而拨开人们对未来点缀的云雾，现实往往还是龙生龙凤生凤。</p><p>这是命运吗？</p><p>起码此时此刻，我仍然有拒绝的权利。</p><p>最近又接手了一个项目，我们拭目以待吧。</p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/116493728_p0.png" alt="116493728_p0" /></p>]]></content>
    
    
    <summary type="html">6月份的个人总结</summary>
    
    
    
    <category term="月度总结" scheme="http://example.com/categories/%E6%9C%88%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>浅谈求逆元</title>
    <link href="http://example.com/posts/442cd081ad6f/"/>
    <id>http://example.com/posts/442cd081ad6f/</id>
    <published>2024-06-23T12:04:33.000Z</published>
    <updated>2024-06-23T12:04:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="浅谈求逆元"><a class="markdownIt-Anchor" href="#浅谈求逆元"></a> 浅谈求逆元</h1><p>本篇博客是对密码学中数论部分的整理，主要关注如何求同余运算中的逆元。重点是欧几里得算法和扩展欧几里得算法的应用，难度中等偏下，但是十分重要。之后再介绍费马小定理求解逆元，利用快速幂算法，应该能够比较快速的求出解。</p><p>本文假设读者已经掌握基础的数论知识，故基础部分略过不讲。本文章将按照欧几里得算法、扩展欧几里得算法、费马小定理的顺序讲解。后续还可以扩展到中国剩余定理，参见文章<a href="https://adam8en.github.io/2024/04/21/%E8%AF%BE%E5%A0%82%E9%9A%8F%E7%AC%94/%E6%B5%85%E8%B0%88%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/">浅谈中国剩余定理 | Adam8en の 8log</a>。</p><p>🚀🚀🚀</p><h2 id="欧几里得算法"><a class="markdownIt-Anchor" href="#欧几里得算法"></a> 欧几里得算法</h2><p>在介绍欧几里得算法前，我们先引入最大公约数的概念。</p><blockquote><p>定理：设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">a,b,c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span></span></span></span>是任意不全为零的整数，且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mi>q</mi><mi>b</mi><mo>+</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">a=qb+c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>是整数。</p></blockquote><p>则有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\gcd(a,b)=\gcd(b,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>，即被除数和除数的最大公因子与除数和余数的最大公因子相同。</p><blockquote><p>例如：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>18</mn><mo separator="true">,</mo><mn>12</mn><mo stretchy="false">)</mo><mo>=</mo><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>12</mn><mo separator="true">,</mo><mn>6</mn><mo stretchy="false">)</mo><mo>=</mo><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo><mo>=</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">\gcd(18,12)=\gcd(12,6)=\gcd(6,0)=6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span></span></span></span></p></blockquote><p>于是这个定理被总结为<strong>欧几里得算法（Euclidean Algorithm）</strong>，因此也得名辗转相除法。</p><p>任给两个整数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span></span></span></span>，设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>&gt;</mo><mi>b</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a&gt;b&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则有：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.15999999999999992em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo>=</mo><mi>b</mi><msub><mi>q</mi><mn>0</mn></msub><mo>+</mo><msub><mi>r</mi><mn>0</mn></msub><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo>&lt;</mo><msub><mi>r</mi><mn>0</mn></msub><mo>&lt;</mo><mi>b</mi><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>b</mi><mo>=</mo><msub><mi>r</mi><mn>0</mn></msub><msub><mi>q</mi><mn>1</mn></msub><mo>+</mo><msub><mi>r</mi><mn>1</mn></msub><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo>&lt;</mo><msub><mi>r</mi><mn>1</mn></msub><mo>&lt;</mo><msub><mi>r</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"/><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>r</mi><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>=</mo><msub><mi>r</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><msub><mi>q</mi><mi>n</mi></msub><mo>+</mo><msub><mi>r</mi><mi>n</mi></msub><mo separator="true">,</mo><mspace width="1em"/><mn>0</mn><mo>&lt;</mo><msub><mi>r</mi><mi>n</mi></msub><mo>&lt;</mo><msub><mi>r</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>r</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi mathvariant="normal">r</mi><mi mathvariant="normal">n</mi></msub><msub><mi mathvariant="normal">q</mi><mrow><mi mathvariant="normal">n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi mathvariant="normal">r</mi><mrow><mi mathvariant="normal">n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mspace width="1em"/><msub><mi mathvariant="normal">r</mi><mrow><mi mathvariant="normal">n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{c}\begin{array}{cc}a=b q_{0}+r_{0}, &amp; 0&lt;r_{0}&lt;b, \\b=r_{0} q_{1}+r_{1}, &amp; 0&lt;r_{1}&lt;r_{0}\end{array}\\\quad......\\\begin{array}{c}r_{n-2}=r_{n-1} q_{n}+r_{n}, \quad 0&lt;r_{n}&lt;r_{n-1} \\r_{n-1}=\mathrm{r}_{\mathrm{n}} \mathrm{q}_{\mathrm{n}+1}+\mathrm{r}_{\mathrm{n}+1}, \quad \mathrm{r}_{\mathrm{n}+1}=0\end{array}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.7500000000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:-3.4599999999999995em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span><span style="top:-1.6500000000000001em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">r</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathrm">q</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span></span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">r</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span></span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">r</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span></span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></p><p>因为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>&gt;</mo><msub><mi>r</mi><mn>0</mn></msub><mo>&gt;</mo><msub><mi>r</mi><mn>1</mn></msub><mo>&gt;</mo><msub><mi>r</mi><mn>2</mn></msub><mo>&gt;</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">b&gt;r_0&gt;r_1&gt;r_2&gt;...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.10556em;vertical-align:0em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span>，故经过有限次除法后，总可以得到一个余数是零，即上式中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>r</mi><mi>n</mi></msub><mo>=</mo><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r_{n+1}=0,r_n=\gcd(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>。</p><p>以下是一个运用欧几里得算法求最大公约数的例子：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240623174423469.png" alt="image-20240623174423469" style="zoom:50%;" /><h2 id="扩展欧几里得算法"><a class="markdownIt-Anchor" href="#扩展欧几里得算法"></a> 扩展欧几里得算法</h2><p>扩展欧几里得算法是最通用且效率较高的方法之一。它不仅可以求解逆元，还可以用于求解线性同余方程和多项式逆元。</p><p>在介绍扩展欧几里得算法前，我们先引入一个定理：</p><blockquote><p>定理：任给整数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>&gt;</mo><mi>b</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a&gt;b&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则存在两个整数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x,y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mi>a</mi><mo>+</mo><mi>y</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">\gcd(a,b)=xa+yb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">b</span></span></span></span>（贝祖等式）</p></blockquote><p>如何证明这个算法呢，通过逆向运用欧几里得算法就可以实现，而这个过程就是扩展欧几里得算法。</p><p>回到欧几里得算法的最后一项，依次将后一项代入前一项。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>r</mi><mi>n</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>r</mi><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>−</mo><msub><mi>r</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><msub><mi>q</mi><mi>n</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>r</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>r</mi><mrow><mi>n</mi><mo>−</mo><mn>3</mn></mrow></msub><mo>−</mo><msub><mi>r</mi><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msub><msub><mi>q</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>r</mi><mn>1</mn></msub><mo>=</mo><mi>b</mi><mo>−</mo><msub><mi>r</mi><mn>0</mn></msub><msub><mi>q</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>r</mi><mn>0</mn></msub><mo>=</mo><mi>a</mi><mo>−</mo><mi>b</mi><msub><mi>q</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{c}\begin{aligned}r_{n} &amp; =r_{n-2}-r_{n-1} q_{n} \\r_{n-1} &amp; =r_{n-3}-r_{n-2} q_{n-1}\end{aligned}\\.\\.\\.\\\begin{array}{c}r_{1}=b-r_{0} q_{1} \\r_{0}=a-b q_{0}\end{array}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9em;vertical-align:-4.25em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.750000000000001em;"><span style="top:-6.750000000000001em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-3.4599999999999995em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-2.2599999999999993em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-0.4500000000000004em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></p><p>即可得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">r_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>由<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>的线性组合表示。</p><p>下面给出扩展欧几里得算法的应用举例：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240623180432893.png" alt="image-20240623180432893" style="zoom:50%;" /><p>稍作变换，当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\gcd(a,m)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>时，应用扩展欧几里得定理，最后得到：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>=</mo><mi>a</mi><mi>x</mi><mo>+</mo><mi>m</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">1=ax+my</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></p><p>两边同时模<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>x</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>m</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">ax\bmod m=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>即此时的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">a^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，即所求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>的逆元。</p><p>为了加深印象，再给出一个应用扩展欧几里得算法求逆元的例子：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240623180927143.png" alt="image-20240623180927143" style="zoom:50%;" /><p>可以看到，大致的流程就是先正向应用一遍欧几里得算法，然后再依次把每个式子的余数倒着代回原式，最后就可以逆推得到关于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\gcd(a,b)=ax+by</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>的式子，解出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x,y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>。</p><h2 id="费马小定理"><a class="markdownIt-Anchor" href="#费马小定理"></a> 费马小定理</h2><p>可以看到运用扩展欧几里得定理虽然效率较高，但是仍然要先应用一遍正向的欧几里得算法再反推回去，稍显麻烦。在某些时候我们可以用费马小定理来提升计算效率。</p><p>费马小定理对素数模数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>特别有用。具体来说，如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>互质（即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\gcd(a,p)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>），那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>≡</mo><mn>1</mn><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">a^{p-1}\equiv 1\bmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>。因此逆元可以表示为：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>≡</mo><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>2</mn></mrow></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">a^{-1}\equiv a^{p-2}\bmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span></p><p>对于大数的幂运算，通常还使用快速幂算法来进一步提高效率。</p><h3 id="快速幂算法"><a class="markdownIt-Anchor" href="#快速幂算法"></a> 快速幂算法</h3><p>假设我们要求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>模<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>的逆元，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>是素数。则我们需要求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>2</mn></mrow></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">a^{p-2}\bmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>。</p><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>特别大时，计算幂的操作将会变得复杂。我们引入了快速幂算法，他能将朴素的计算幂时间复杂度从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>优化到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p><p>假设我们需要计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>b</mi></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>m</mi></mrow><annotation encoding="application/x-tex">a^b\bmod m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>。首先可以把<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>表示为二进制的形式。例如，若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>=</mo><mn>13</mn></mrow><annotation encoding="application/x-tex">b=13</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">3</span></span></span></span>，则其二进制表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>110</mn><msub><mn>1</mn><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">1101_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。根据二进制表示，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>13</mn></mrow><annotation encoding="application/x-tex">13</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">3</span></span></span></span>可以表示为：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>13</mn><mo>=</mo><mn>1</mn><mo separator="true">⋅</mo><msup><mn>2</mn><mn>3</mn></msup><mo>+</mo><mn>1</mn><mo separator="true">⋅</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><mn>0</mn><mo separator="true">⋅</mo><msup><mn>2</mn><mn>1</mn></msup><mo>+</mo><mn>1</mn><mo separator="true">⋅</mo><msup><mn>2</mn><mn>0</mn></msup></mrow><annotation encoding="application/x-tex">13=1·2^3+1·2^2+0·2^1+1·2^0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></p><p>因此：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mn>13</mn></msup><mo>=</mo><msup><mi>a</mi><mrow><msup><mn>2</mn><mn>3</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>0</mn></msup></mrow></msup><mo>=</mo><msup><mi>a</mi><msup><mn>2</mn><mn>3</mn></msup></msup><mo separator="true">⋅</mo><msup><mi>a</mi><msup><mn>2</mn><mn>2</mn></msup></msup><mo separator="true">⋅</mo><msup><mi>a</mi><msup><mn>2</mn><mn>0</mn></msup></msup></mrow><annotation encoding="application/x-tex">a^{13}=a^{2^{3}+2^2+2^0}=a^{2^3}·a^{2^2}·a^{2^0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>通过这种表示方式，可以避免直接计算大幂次，而是通过迭代平方来逐步得到结果。</p><p>应用快速幂算法的步骤如下：</p><ol><li>初始化结果为1：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>u</mi><mi>l</mi><mi>t</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">result=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li><li>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">exp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span></span></span></span>大于0时，重复以下步骤：<ul><li>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">exp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span></span></span></span>是奇数（即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mi mathvariant="normal">%</mi><mn>2</mn><mo>=</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">exp\%2==1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.94444em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mord">%</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>），则更新结果：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>u</mi><mi>l</mi><mi>t</mi><mo>=</mo><mo stretchy="false">(</mo><mi>r</mi><mi>e</mi><mi>s</mi><mi>u</mi><mi>l</mi><mi>t</mi><mo separator="true">⋅</mo><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mi>m</mi><mi>o</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">result=(result·base)\%mod</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">t</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mord">%</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span></span></span></span></li><li>将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">base</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span></span></span></span>平方，并对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>o</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">mod</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span></span></span></span>取模：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mo>=</mo><mo stretchy="false">(</mo><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mo separator="true">⋅</mo><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mi>m</mi><mi>o</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">base=(base·base)\% mod</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mord">%</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span></span></span></span>。</li><li>将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">exp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span></span></span></span>右移一位（即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mo>=</mo><mi>e</mi><mi>x</mi><mi>p</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">exp=exp//2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mord">/</span><span class="mord">/</span><span class="mord">2</span></span></span></span>）</li></ul></li></ol><p>为方便理解，这里给出实现快速幂算法的Python代码。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fast_pow</span>(<span class="params">base, exp, mod</span>):</span><br><span class="line">    result = <span class="number">1</span>  <span class="comment"># 初始化结果</span></span><br><span class="line">    base = base % mod  <span class="comment"># 确保 base 小于 mod，避免不必要的大数运算</span></span><br><span class="line">    <span class="keyword">while</span> exp &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> exp % <span class="number">2</span> == <span class="number">1</span>:  <span class="comment"># 如果 exp 是奇数</span></span><br><span class="line">            result = (result * base) % mod  <span class="comment"># 更新结果</span></span><br><span class="line">        base = (base * base) % mod  <span class="comment"># 将 base 平方</span></span><br><span class="line">        exp //= <span class="number">2</span>  <span class="comment"># 将 exp 右移一位</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">base = <span class="number">3</span></span><br><span class="line">exp = <span class="number">13</span></span><br><span class="line">mod = <span class="number">11</span></span><br><span class="line"><span class="built_in">print</span>(fast_pow(base, exp, mod))  <span class="comment"># 输出应为 5，因为 3^13 ≡ 5 (mod 11)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下面我们运用费马小定理+快速幂算法来解一道题。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/IMG_20240623_200107.jpg" alt="IMG_20240623_200107" style="zoom: 25%;" /><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/101292197_p0.jpg" alt="101292197_p0" /></p>]]></content>
    
    
    <summary type="html">介绍了运用扩展欧几里得算法和费马小定理求逆元的两种方法。</summary>
    
    
    
    <category term="课堂随笔" scheme="http://example.com/categories/%E8%AF%BE%E5%A0%82%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="扩展欧几里得算法" scheme="http://example.com/tags/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/"/>
    
    <category term="费马小定理" scheme="http://example.com/tags/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86/"/>
    
    <category term="快速幂" scheme="http://example.com/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>浅谈古典密码</title>
    <link href="http://example.com/posts/28dc7859a946/"/>
    <id>http://example.com/posts/28dc7859a946/</id>
    <published>2024-06-23T07:25:56.000Z</published>
    <updated>2024-06-23T07:25:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="浅谈古典密码"><a class="markdownIt-Anchor" href="#浅谈古典密码"></a> 浅谈古典密码</h1><p>根据密码学的考纲和PPT，简单的归纳一下古典密码学的做法。一般来说都会作为大题考察，因为考察近现代密码用手算不是很现实……</p><p>代替密码是指先建立一个替换表，加密时将需要加密的明文依次通过查表，替换为相应的字符。明文字符被逐个替换后，生成无任何意义的字符串，即密文。代替密码的密钥就是其替换表。</p><p>根据密码算法加解密时使用替换表多少的不同，代替密码又可分为单表代替密码和多表代替密码。</p><ul><li>单表代替密码：密码算法加解密时使用一个固定的替换表</li><li>多表代替密码：密码算法加解密时使用多个替换表</li></ul><p>我们简单的把古典密码分为单标代替和多表代替来讨论。单表代替的重点是仿射密码，多表代替的重点是希尔密码。虽然古典密码相对比较简单，但还是推荐读者多动笔计算一下。</p><p>那么就开始吧。</p><h2 id="单表代替"><a class="markdownIt-Anchor" href="#单表代替"></a> 单表代替</h2><p>单表代替密码密钥量很小，不能抵抗穷尽搜索攻击。且没有将明文字母出现的概率掩藏起来，很容易受到统计分析的攻击。</p><p>单表代替密码主要介绍三种：</p><ul><li>移位密码</li><li>使用密钥的单表代替密码</li><li>仿射密码</li></ul><h3 id="移位密码"><a class="markdownIt-Anchor" href="#移位密码"></a> 移位密码</h3><p>移位密码非常简单，就是把明文对应的字符移动对应的位数即可得到密文，再移回来就可以得到明文。</p><p>加密变换：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mo stretchy="false">{</mo><mi>E</mi><mo>:</mo><msub><mi>Z</mi><mn>26</mn></msub><mo>→</mo><msub><mi>Z</mi><mn>26</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mo>+</mo><mi>k</mi><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi>p</mi><mo>∈</mo><mi>P</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>K</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">E=\{E:Z_{26}\rightarrow Z_{26},E_k(p)=p+k(\bmod26)|p\in P,k\in K \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">}</span></span></span></span></p><p>解密变换：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>=</mo><mo stretchy="false">{</mo><mi>D</mi><mo>:</mo><msub><mi>Z</mi><mn>26</mn></msub><mo>→</mo><msub><mi>Z</mi><mn>26</mn></msub><mo separator="true">,</mo><msub><mi>D</mi><mi>k</mi></msub><mo>=</mo><mi>c</mi><mo>−</mo><mi>k</mi><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi>c</mi><mo>∈</mo><mi>C</mi><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mi>K</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">D=\{D:Z_{26}\rightarrow Z_{26},D_k=c-k(\bmod 26)|c\in C,k\in K \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">}</span></span></span></span></p><p>当移位密码的密钥<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">k=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>时，就是著名的凯撒密码。</p><p>此时：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>e</mi><mi>a</mi><mi>s</mi><mi>a</mi><mi>r</mi><mtext> </mtext><mi>c</mi><mi>i</mi><mi>p</mi><mi>h</mi><mi>e</mi><mi>r</mi><mo>→</mo><mi>F</mi><mi>D</mi><mi>H</mi><mi>V</mi><mi>D</mi><mi>U</mi><mtext> </mtext><mi>F</mi><mi>L</mi><mi>S</mi><mi>K</mi><mi>H</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">ceasar\ cipher\rightarrow FDHVDU\ FLSKHU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace"> </span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">p</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></p><h3 id="使用密钥的单表代替加密"><a class="markdownIt-Anchor" href="#使用密钥的单表代替加密"></a> 使用密钥的单表代替加密</h3><p>选用一个英文短语或者单词串作为密钥，去掉其中重复的字母得到一个无重复字母的字母串，然后将字母表中的其他字母依次写于此字母串之后，就可构造出一个字母代替表。</p><h4 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h4><p>给定密钥为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>a</mi><mi>c</mi><mi>u</mi><mi>l</mi><mi>a</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">spectacular</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span></p><p>明文：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>B</mi><mi>C</mi><mi>D</mi><mi>E</mi><mi>F</mi><mi>G</mi><mi>H</mi><mi>I</mi><mi>J</mi><mi>K</mi><mi>L</mi><mi>M</mi><mi>N</mi><mi>O</mi><mi>P</mi><mi>Q</mi><mi>R</mi><mi>S</mi><mi>T</mi><mi>U</mi><mi>V</mi><mi>W</mi><mi>X</mi><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">ABCDEFGHIJKLMNOPQRSTUVWXYZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">Q</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></p><p>密文：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>a</mi><mi>u</mi><mi>l</mi><mi>r</mi><mi>b</mi><mi>d</mi><mi>f</mi><mi>g</mi><mi>h</mi><mi>i</mi><mi>j</mi><mi>k</mi><mi>m</mi><mi>n</mi><mi>o</mi><mi>q</mi><mi>v</mi><mi>w</mi><mi>x</mi><mi>y</mi><mi>z</mi></mrow><annotation encoding="application/x-tex">spectaulrbdfghijkmnoqvwxyz</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">b</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">m</span><span class="mord mathnormal">n</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span></p><p>如果明文为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>h</mi><mi>i</mi><mi>n</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">China</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">a</span></span></span></span>，则对应密文为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mi>l</mi><mi>r</mi><mi>h</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">elrhs</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">h</span><span class="mord mathnormal">s</span></span></span></span></p><h3 id="仿射密码"><a class="markdownIt-Anchor" href="#仿射密码"></a> 仿射密码</h3><p>仿射密码是加强版的移位密码。移位密码的密钥空间只有26，但是仿射密码的密钥空间有312.虽然比移位密码更强大，但数据量仍然不大，在现代计算机面前通过爆破破解明文轻而易举。同时，没有隐藏</p><p>仿射密码是一种线性变换。仿射密码的明文空间和密文空间与移位密码相同，但密钥空间为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>2</mn></msub><mo>∈</mo><msub><mi>Z</mi><mn>26</mn></msub><mo separator="true">,</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><mn>26</mn><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">K=\{(k_1,k_2)|k_1,k_2\in Z_{26},gcd(k_1,26)=1 \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span>。即需要两个密钥<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">k_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">k_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">k_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>必须和26互素。否则会出现多个明文字母对应同一密文字母的情况。</p><p>对任意的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>∈</mo><mi>P</mi><mo separator="true">,</mo><mi>c</mi><mo>∈</mo><mi>C</mi><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>∈</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">p\in P,c\in C,k=(k_1,k_2)\in K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>，</p><p>定义加密变换为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>=</mo><msub><mi>E</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>k</mi><mn>1</mn></msub><mi>p</mi><mo>+</mo><msub><mi>k</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c=E_k(p)=k_1p+k_2(\bmod26)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span></span></span></span></p><p>相应的解密变换为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><msub><mi>D</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>c</mi><mo>−</mo><msub><mi>k</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p=D_k(c)=k^{-1}(c-k_2)(\bmod 26)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub><msubsup><mi>k</mi><mn>1</mn><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>=</mo><mn>1</mn><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k_1k_1^{-1}=1(\bmod26)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.120547em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.433692em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>k</mi><mn>1</mn><mrow><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">k_1^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.120547em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.433692em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">k_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的逆元。</p><h4 id="例题-2"><a class="markdownIt-Anchor" href="#例题-2"></a> 例题</h4><p>设明文消息为China，密钥<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>7</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k = (k_1, k_2) = (7, 3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span>，用仿射密码对其进行加密，然后再进行解密。</p><p>利用扩展欧几里得算法求出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>k</mi><mn>1</mn><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>=</mo><msub><mn>7</mn><mrow><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>15</mn><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k_1^{-1}=7_{-1}=15(\bmod26)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.120547em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.433692em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.852771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord">7</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span></span></span></span>，加密函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mn>7</mn><mo>×</mo><mi>p</mi><mo>+</mo><mn>3</mn><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E_k(p)=7\times p+3(\bmod26)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span></span></span></span>，对应的解密函数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mn>15</mn><mo>×</mo><mo stretchy="false">(</mo><mi>c</mi><mo>−</mo><mn>3</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo><mo>=</mo><mn>15</mn><mi>c</mi><mo>−</mo><mn>19</mn><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D_k(c)=15\times (c-3)(\bmod26)=15c-19(\bmod26)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">9</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span></span></span></span>。</p><p>明文消息<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>h</mi><mi>i</mi><mi>n</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">China</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">a</span></span></span></span>对应的数字序列为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>7</mn><mo separator="true">,</mo><mn>8</mn><mo separator="true">,</mo><mn>13</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(2,7,8,13,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>，用仿射密码对明文进行加密：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>=</mo><msub><mi>E</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mn>7</mn><mo>×</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>13</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>+</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>17</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>52</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>59</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>94</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>17</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>16</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>R</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>A</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>H</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Q</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>D</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">c=E_{k}(p)=7 \times\left[\begin{array}{c}2 \\7 \\8 \\13 \\0\end{array}\right]+\left[\begin{array}{l}3 \\3 \\3 \\3 \\3\end{array}\right]=\left[\begin{array}{c}17 \\52 \\59 \\94 \\3\end{array}\right] \bmod 26=\left[\begin{array}{c}17 \\0 \\7 \\16 \\3\end{array}\right]=\left[\begin{array}{c}R \\A \\H \\Q \\D\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:6.00503em;vertical-align:-2.75004em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">3</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:6.00503em;vertical-align:-2.75004em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:6.00503em;vertical-align:-2.75004em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">7</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span><span class="mord">2</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span><span class="mord">9</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span><span class="mord">4</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:6.00503em;vertical-align:-2.75004em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">7</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">6</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:6.00503em;vertical-align:-2.75004em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Q</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>对应密文消息为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>A</mi><mi>H</mi><mi>Q</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">RAHQD</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal">Q</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span></p><p>解密：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mn>15</mn><mo>×</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>17</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>16</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>−</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>19</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>19</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>19</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>19</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>19</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>236</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>19</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>86</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>221</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>26</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>13</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>C</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>H</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>I</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>N</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>A</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">D_{k}(c)=15 \times\left[\begin{array}{c}17 \\0 \\7 \\16 \\3\end{array}\right]-\left[\begin{array}{c}19 \\19 \\19 \\19 \\19\end{array}\right]=\left[\begin{array}{c}236 \\-19 \\86 \\221 \\26\end{array}\right] \bmod 26=\left[\begin{array}{c}2 \\7 \\8 \\13 \\0\end{array}\right]=\left[\begin{array}{c}C \\H \\I \\N \\A\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:6.00503em;vertical-align:-2.75004em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">7</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">6</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:6.00503em;vertical-align:-2.75004em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">9</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">9</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">9</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">9</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:6.00503em;vertical-align:-2.75004em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">3</span><span class="mord">6</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span><span class="mord">9</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span><span class="mord">6</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">2</span><span class="mord">1</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:6.00503em;vertical-align:-2.75004em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">3</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:6.00503em;vertical-align:-2.75004em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span></span></span></span></span></p><h2 id="多表代替密码"><a class="markdownIt-Anchor" href="#多表代替密码"></a> 多表代替密码</h2><p>多表代替密码使用从明文字母到密文字母的<strong>多个映射</strong>来隐藏单字母出现的频率的分布，其中每个映射都是单表代替密码中的一对一映射。一般来说，我们的做法都是将明文字母划分为长度相同的消息单元，称为明文分组，对明文字母成组地进行代替。</p><p>多表代替密码的特点是使用两个或者两个以上的表。</p><p>我们主要介绍以下三个多表代替密码：</p><ul><li>普莱菲尔密码（Playfair Cipher）</li><li>维吉尼亚密码（Vigenere Cipher）</li><li>希尔密码（Hill Cipher）</li></ul><h3 id="playfair密码"><a class="markdownIt-Anchor" href="#playfair密码"></a> Playfair密码</h3><p>Playfair密码加密流程如下：</p><ol><li><p>将明文中的双字母作为一个单元对待，并将这些单元转换为密文字母组合</p></li><li><p>基于一个5×5字母矩阵，使用一个关键词（密钥）来构造</p></li><li><p>构造方法：从左至右，从上至下依次填入关键词的字母（去除重复的字母），然后再以字母表顺序依次填入其他的字母。加密时字母I和J被算作一个字母</p><p>例如，密钥<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi><mi>f</mi><mi>a</mi><mi>i</mi><mi>r</mi><mtext> </mtext><mi>i</mi><mi>s</mi><mtext> </mtext><mi>a</mi><mtext> </mtext><mi>d</mi><mi>i</mi><mi>g</mi><mi>r</mi><mi>a</mi><mi>m</mi><mtext> </mtext><mi>c</mi><mi>i</mi><mi>p</mi><mi>h</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">k= playfair\ is\ a\ digram\ cipher</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace"> </span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mspace"> </span><span class="mord mathnormal">a</span><span class="mspace"> </span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">m</span><span class="mspace"> </span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">p</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>，去除重复字母后，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi><mi>f</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>d</mi><mi>g</mi><mi>m</mi><mi>c</mi><mi>h</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">k= playfirsdgmche</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">s</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span></span></span></span>，可得字母矩阵如下</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240623140740165.png" alt="" /></p></li><li><p>对每一对明文字母P1, P2的加密方法如下：</p><ul><li>若P1、P2在同一行，密文C1、C2分别是紧靠P1、P2右端的字母。其中第一列被看作是最后一列的右方；（解密时反向）</li><li>若P1、P2在同一列，密文C1、C2分别是紧靠P1、P2下方的字母。其中第一行看作是最后一行的下方；（解密时反向）</li><li>若P1、P2不在同一行，也不在同一列，则C1、C2是由P1、P2确定的矩形其它两角的字母，且C1和P1在同一行，C2和P2在同一行；（解密时处理方法相同）</li><li>若P1＝P2，则两个字母间插入一个预先约定的字母，如q，并用前述方法处理；如balloon，则以ba lq lo on 来加密。</li><li>若明文字母数为奇数，则在明文尾填充约定字母。</li></ul></li></ol><h4 id="例题-3"><a class="markdownIt-Anchor" href="#例题-3"></a> 例题</h4><p>密钥不变，延续上文的字母矩阵。明文为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi><mi>f</mi><mi>a</mi><mi>i</mi><mi>r</mi><mtext> </mtext><mi>c</mi><mi>i</mi><mi>p</mi><mi>h</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">p = playfair\ cipher</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace"> </span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">p</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>，用playfair密码进行加密。</p><p>明文分组：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>l</mi><mtext> </mtext><mi>a</mi><mi>y</mi><mtext> </mtext><mi>f</mi><mi>a</mi><mtext> </mtext><mi>i</mi><mi>r</mi><mtext> </mtext><mi>c</mi><mi>i</mi><mtext> </mtext><mi>p</mi><mi>h</mi><mtext> </mtext><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">pl\ ay\ fa\ ir\ ci\ ph\ er</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace"> </span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mspace"> </span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace"> </span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mspace"> </span><span class="mord mathnormal">p</span><span class="mord mathnormal">h</span><span class="mspace"> </span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span></p><p>密文分组：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>A</mi><mtext> </mtext><mi>Y</mi><mi>F</mi><mtext> </mtext><mi>P</mi><mi>Y</mi><mtext> </mtext><mi>R</mi><mi>S</mi><mtext> </mtext><mi>M</mi><mi>R</mi><mtext> </mtext><mi>A</mi><mi>M</mi><mtext> </mtext><mi>C</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">LA\ YF\ PY\ RS\ MR\ AM\ CD</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">A</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace"> </span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span></p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240623140740165.png" alt="" /></p><h4 id="特点"><a class="markdownIt-Anchor" href="#特点"></a> 特点</h4><ul><li>虽然仅有26个字母，但有26×26＝676种双字母组合．因此识别各种双字母组合要困难得多</li><li>各个字母组的频率要比单字母呈现出大得多的范围，使得频率分析困难得多</li><li>仍然使许多明文语言的结构保存完好，使得密码分析者能够利用</li></ul><h3 id="vigenere密码"><a class="markdownIt-Anchor" href="#vigenere密码"></a> Vigenere密码</h3><p>Vigenere密码是最著名的多表代替密码的例子，它使用一个词组作为密钥，密钥中每一个字母用来确定一个代替表，每一个密钥字母用来加密一个明文字母，等所有密钥字母使用完后，密钥又再循环使用</p><p>设密钥<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>𝑘</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>𝑘</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>𝑘</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mo separator="true">,</mo><msub><mi>𝑘</mi><mi>𝑑</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">𝑘 = (𝑘_1, 𝑘_2, ⋯ , 𝑘_𝑑)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，明文：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>𝑝</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>𝑝</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>𝑝</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mo separator="true">,</mo><msub><mi>𝑝</mi><mi>𝑛</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">𝑝 = (𝑝_1, 𝑝_2, ⋯ , 𝑝_𝑛)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，密文：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>𝑐</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>𝑐</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>𝑐</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mo separator="true">,</mo><msub><mi>𝑐</mi><mi>𝑛</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">𝑐 = (𝑐_1, 𝑐_2, ⋯ , 𝑐_𝑛)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p><p>加密变换：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>𝐸</mi><mi>𝑘</mi></msub><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>𝑐</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>𝑐</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mo separator="true">,</mo><msub><mi>𝑐</mi><mi>𝑛</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">𝐸_𝑘(p)= (𝑐_1, 𝑐_2, ⋯ , 𝑐_𝑛)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>𝑐</mi><mi>𝑖</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>𝑝</mi><mi>𝑖</mi></msub><mo>+</mo><msub><mi>𝑘</mi><mi>𝑖</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo><mtext>，</mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">𝑐_𝑖 = (𝑝_𝑖 + 𝑘_𝑖)(\bmod 26)，i =1, 2, …, n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span></span></span></span></p><p>解密变换：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>𝐷</mi><mi>𝑘</mi></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>𝑝</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>𝑝</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mo separator="true">,</mo><msub><mi>𝑝</mi><mi>𝑛</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">𝐷_𝑘(c)= (𝑝_1, 𝑝_2, ⋯ , 𝑝_𝑛)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>𝑝</mi><mi>𝑖</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>𝑐</mi><mi>𝑖</mi></msub><mtext>−</mtext><msub><mi>𝑘</mi><mi>𝑖</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo><mtext>，</mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">𝑝_𝑖 = (𝑐_𝑖 − 𝑘_𝑖)(\bmod 26)，i =1, 2, …, n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span></span></span></span></p><p>即对每一个字母都用不同的表去进行移位代替。</p><h4 id="例题-4"><a class="markdownIt-Anchor" href="#例题-4"></a> 例题</h4><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>i</mi><mi>e</mi><mi>d</mi><mi>c</mi><mi>r</mi><mi>y</mi><mi>p</mi><mi>t</mi><mi>o</mi><mi>s</mi><mi>y</mi><mi>s</mi><mi>t</mi><mi>e</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">p = appliedcryptosystem</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">p</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mi>c</mi><mi>i</mi><mi>p</mi><mi>h</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">k = cipher</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">p</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>，用Vigenere密码对其进行加密。</p><p>由<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mi>c</mi><mi>i</mi><mi>p</mi><mi>h</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">k=cipher</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">p</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>得n=6。密钥对应的数字序列为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>8</mn><mo separator="true">,</mo><mn>15</mn><mo separator="true">,</mo><mn>17</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mn>17</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(2,8,15,17,4,17)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">7</span><span class="mclose">)</span></span></span></span>。将明文按照每6个字母进行分组，并将这些明文字母转换为相应的数字，再用模26加上对应的密钥数字，加密过程如图所示：</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240623143319986.png" alt="image-20240623143319986" /></p><h3 id="hill密码"><a class="markdownIt-Anchor" href="#hill密码"></a> Hill密码</h3><p><font style="color:red">注意，由于Hill密码涉及到矩阵的乘法，所以运算顺序的不同会影响最终的结果。网络上的资料多为密钥右乘，而本文章遵循的是学校PPT教材，采取的方式是密钥左乘（即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>×</mo><mi>p</mi><mi mathvariant="normal">/</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">k\times p/c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord">/</span><span class="mord mathnormal">c</span></span></span></span>），务必留意。</font></p><p>基本思想：将<em>n</em>个明文字母通过线性变换，将它们转换为<em>n</em>个密文字母。解密只需做一次逆变换即可。</p><p>算法的密钥为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>Z</mi><mn>26</mn></msub><mtext>上的</mtext><mi>n</mi><mo>×</mo><mi>n</mi><mtext>可逆矩阵</mtext><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">k=\{Z_{26}上的n\times n可逆矩阵 \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">逆</span><span class="mord cjk_fallback">矩</span><span class="mord cjk_fallback">阵</span><span class="mclose">}</span></span></span></span>，明文p与密文c均为n维向量，记为：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>p</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>p</mi><mn>2</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>p</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mspace width="1em"/><mi>c</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>c</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>c</mi><mn>2</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>c</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mi>k</mi><mo>=</mo><msub><mrow><mo fence="true">(</mo><msub><mi>k</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">)</mo></mrow><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mn>12</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mrow><mn>1</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mrow><mi>n</mi><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mrow><mi>n</mi><mn>2</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mrow><mi>n</mi><mi>n</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">p=\left(\begin{array}{c}p_{1} \\p_{2} \\\vdots \\p_{n}\end{array}\right), \quad c=\left(\begin{array}{c}c_{1} \\c_{2} \\\vdots \\c_{n}\end{array}\right), k=\left(k_{i j}\right)_{n \times n}=\left[\begin{array}{cccc}k_{11} &amp; k_{12} &amp; \cdots &amp; k_{1 n} \\\vdots &amp; \ddots &amp; &amp; \vdots \\\vdots &amp; &amp; \ddots &amp; \vdots \\k_{n 1} &amp; k_{n 2} &amp; \cdots &amp; k_{n n}\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.459999999999999em;vertical-align:-2.4799999999999995em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.950035em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.4999950000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.0950050000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.6900150000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.7100150000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.950035000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.950035em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.4999950000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.0950050000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.6900150000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.7100150000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.950035000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.459999999999999em;vertical-align:-2.4799999999999995em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.950035em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.4999950000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.0950050000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.6900150000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.7100150000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.950035000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.950035em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.4999950000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.0950050000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.6900150000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.7100150000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.950035000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.144139em;vertical-align:-0.394139em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.072523em;"><span style="top:-2.364192em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394139em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:6.120000000000001em;vertical-align:-2.8100000000000005em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.310000000000001em;"><span style="top:-6.1575000000000015em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.2975em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.4374999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.2374999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8100000000000005em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.310000000000001em;"><span style="top:-5.9700000000000015em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.11em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-2.2499999999999996em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"></span></span><span style="top:-1.0499999999999996em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8100000000000005em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.310000000000001em;"><span style="top:-5.9700000000000015em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.11em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"></span></span><span style="top:-2.2499999999999996em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.0499999999999996em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8100000000000005em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.310000000000001em;"><span style="top:-6.1575000000000015em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.2975em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.4374999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.2374999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8100000000000005em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2549900000000003em;"><span style="top:-1.0499800000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.1999800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-2.79598em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.39198em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.9879800000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.0139700000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-5.25499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75004em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>加密变换：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mi>k</mi><mo separator="true">⋅</mo><mi>p</mi><mo>=</mo><mi>c</mi><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E_k(p)=k·p=c(\bmod26)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span></span></span></span></p><p>解密变换：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo separator="true">⋅</mo><mi>c</mi><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D_k(c)=k^{-1}·c=p(\bmod26)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">k^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>被称为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>在模26上的逆矩阵。逆矩阵涉及到线性代数，因此我们需要特别定义一下密钥矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>，来保证其逆矩阵存在。</p><p>假设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A=(a_{ij})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>为一个定义在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Z</mi><mn>26</mn></msub></mrow><annotation encoding="application/x-tex">Z_{26}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n\times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>矩阵，如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span>在模26上可逆，则有：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><msup><mi>A</mi><mo>∗</mo></msup><mi mathvariant="normal">/</mi><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A^{-1}=A^*/det(A)(\bmod26)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span></span></span></span>。</p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">det(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span>的行列式，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">A^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span>的伴随矩阵，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>A</mi><mrow><mi>j</mi><mo separator="true">,</mo><mi>i</mi></mrow><mo>∗</mo></msubsup><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mrow><mi>i</mi><mo>+</mo><mi>j</mi></mrow></msup><msub><mi>M</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">A^*_{j,i}=(-1)^{i+j}M_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0834679999999999em;vertical-align:-0.394772em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1107719999999999em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">M_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>为矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span>去掉第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>行、第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>列后剩余元素所组成的矩阵行列式。注意，伴随矩阵需要进行<strong>转置</strong>处理。</p><blockquote><p>对于一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n×n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span>，其伴随矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>adj</mtext><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{adj}(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">adj</span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span> 是由 A 的代数余子式构成的矩阵的转置。</p></blockquote><p>在n=2时，有下列推论：</p><p>假设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>2</mn></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mrow><mn>2</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mn>2</mn><mo separator="true">,</mo><mn>2</mn></mrow></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">A=\left(\begin{array}{c}a_{1,1},a_{1,2} \\a_{2,1},a_{2,2} \\\end{array}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span>是一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Z</mi><mn>26</mn></msub></mrow><annotation encoding="application/x-tex">Z_{26}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>上的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2\times 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>矩阵，它的行列式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>a</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><msub><mi>a</mi><mrow><mn>2</mn><mo separator="true">,</mo><mn>2</mn></mrow></msub><mo>−</mo><msub><mi>a</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>2</mn></mrow></msub><msub><mi>a</mi><mrow><mn>2</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">det(A)=a_{1,1}a_{2,2}-a_{1,2}a_{2,1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，那么有：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mo stretchy="false">(</mo><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mrow><mn>2</mn><mo separator="true">,</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>−</mo><msub><mi>a</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>2</mn></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msub><mi>a</mi><mrow><mn>2</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">A^{-1}=(det(A))^{-1}\left(\begin{array}{c}a_{2,2},-a_{1,2} \\-a_{2,1},a_{1,1} \\\end{array}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></p><h4 id="例题-5"><a class="markdownIt-Anchor" href="#例题-5"></a> 例题</h4><p>设明文消息为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>o</mi><mi>o</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">good</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span></span></span></span>，试用<em>n</em>＝2，密钥<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>11</mn><mo separator="true">,</mo><mn>8</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3</mn><mo separator="true">,</mo><mn>7</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">k=\left(\begin{array}{c}11,8 \\3,7 \\\end{array}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">8</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span>的Hill密码对其进行加密，然后再进行解密（明密文分组列向量表示）</p><p>因为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>11</mn><mo separator="true">,</mo><mn>8</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3</mn><mo separator="true">,</mo><mn>7</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">k=\left(\begin{array}{c}11,8 \\3,7 \\\end{array}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">8</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span>，故<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>det</mtext><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>11</mn><mo separator="true">,</mo><mn>8</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3</mn><mo separator="true">,</mo><mn>7</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>=</mo><mn>11</mn><mo>×</mo><mn>7</mn><mo>−</mo><mn>3</mn><mo>×</mo><mn>8</mn><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo><mo>=</mo><mn>53</mn><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\text{det}\left(\begin{array}{c}11,8 \\3,7 \\\end{array}\right)=11\times 7-3\times 8(\bmod26)=53(\bmod)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord text"><span class="mord">det</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">8</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">8</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mord">3</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>11</mn><mo separator="true">,</mo><mn>8</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3</mn><mo separator="true">,</mo><mn>7</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>=</mo><msup><mn>1</mn><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>×</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>7</mn><mo separator="true">,</mo><mo>−</mo><mn>8</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>3</mn><mo separator="true">,</mo><mn>11</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>11</mn><mo separator="true">,</mo><mn>18</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>23</mn><mo separator="true">,</mo><mn>7</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn></mrow><annotation encoding="application/x-tex">k^{-1}=\left(\begin{array}{c}11,8 \\3,7 \\\end{array}\right)=1^{-1}\times \left(\begin{array}{c}7,-8 \\-3,11 \\\end{array}\right)=\left(\begin{array}{c}11,18 \\23,7 \\\end{array}\right)\bmod26</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">8</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">8</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">8</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">6</span></span></span></span></p><p>将明文划分为两组：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>g</mi><mo separator="true">,</mo><mi>o</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>o</mi><mo separator="true">,</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(g,o),(o,d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">o</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathnormal">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>14</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>14</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(6,14),(14,3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span>，加密过程如下：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><msub><mi>c</mi><mn>1</mn></msub><msub><mi>c</mi><mn>2</mn></msub></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mi>k</mi><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><msub><mi>p</mi><mn>1</mn></msub><msub><mi>p</mi><mn>2</mn></msub></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>11</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mn>6</mn><mn>14</mn></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mn>178</mn><mn>116</mn></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mn>22</mn><mn>12</mn></mfrac><mo fence="true">)</mo></mrow><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo><mo>⇒</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>w</mi><mi>m</mi></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><msub><mi>c</mi><mn>3</mn></msub><msub><mi>c</mi><mn>4</mn></msub></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mi>k</mi><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><msub><mi>p</mi><mn>3</mn></msub><msub><mi>p</mi><mn>4</mn></msub></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>11</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mn>14</mn><mn>3</mn></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mn>178</mn><mn>63</mn></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mn>22</mn><mn>11</mn></mfrac><mo fence="true">)</mo></mrow><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo><mo>⇒</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>w</mi><mi>l</mi></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}\binom{c_{1}}{c_{2}}=k\binom{p_{1}}{p_{2}}=\left(\begin{array}{ll}11 &amp; 8 \\3 &amp; 7\end{array}\right)\binom{6}{14}=\binom{178}{116}=\binom{22}{12}(\bmod 26) \Rightarrow\binom{w}{m} \\\binom{c_{3}}{c_{4}}=k\binom{p_{3}}{p_{4}}=\left(\begin{array}{cc}11 &amp; 8 \\3 &amp; 7\end{array}\right)\binom{14}{3}=\binom{178}{63}=\binom{22}{11}(\bmod 26) \Rightarrow\binom{w}{l}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-4.65003em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.745392em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.745392em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8951079999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">4</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8951079999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">7</span><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8951079999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7453919999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.745392em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.745392em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8951079999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8951079999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">3</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">7</span><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8951079999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7453919999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></p><p>因此，good的加密结果是wmwl。显然，明文不同位置的字母“o”加密成的密文字母不同。</p><p>解密变换：由前面计算有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>7</mn><mo separator="true">,</mo><mn>18</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>23</mn><mo separator="true">,</mo><mn>11</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">k^{-1}=\left(\begin{array}{c} 7,18 \\ 23,11 \\ \end{array}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">8</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span>，可由密文解密计算出明文，过程如下：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><msub><mi>p</mi><mn>1</mn></msub><msub><mi>p</mi><mn>2</mn></msub></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><msub><mi>c</mi><mn>1</mn></msub><msub><mi>c</mi><mn>2</mn></msub></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>18</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>23</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>11</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mn>22</mn><mn>12</mn></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mn>370</mn><mn>638</mn></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mn>6</mn><mn>14</mn></mfrac><mo fence="true">)</mo></mrow><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo stretchy="false">)</mo><mo>⇒</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>g</mi><mi>o</mi></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><msub><mi>p</mi><mn>3</mn></msub><msub><mi>p</mi><mn>4</mn></msub></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><msub><mi>c</mi><mn>3</mn></msub><msub><mi>c</mi><mn>4</mn></msub></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>18</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>23</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>11</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mn>22</mn><mn>11</mn></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mn>352</mn><mn>627</mn></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mn>14</mn><mn>3</mn></mfrac><mo fence="true">)</mo></mrow><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>26</mn><mo>⇒</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>o</mi><mi>d</mi></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}\binom{p_{1}}{p_{2}}=k^{-1}\binom{c_{1}}{c_{2}}=\left(\begin{array}{cc}7 &amp; 18 \\23 &amp; 11\end{array}\right)\binom{22}{12}=\binom{370}{638}=\binom{6}{14}(\bmod 26) \Rightarrow\binom{g}{o} \\\binom{p_{3}}{p_{4}}=k^{-1}\binom{c_{3}}{c_{4}}=\left(\begin{array}{cc}7 &amp; 18 \\23 &amp; 11\end{array}\right)\binom{22}{11}=\binom{352}{627}=\binom{14}{3} \bmod 26 \Rightarrow\binom{o}{d}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-4.65003em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.745392em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.745392em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">8</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8951079999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8951079999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">3</span><span class="mord mtight">8</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">7</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8951079999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">4</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7453919999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.745392em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.745392em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">8</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8951079999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8951079999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">2</span><span class="mord mtight">7</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">5</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8951079999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7453919999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></p><p>因此，解密得到正确的密文“good”。</p><h4 id="特点-2"><a class="markdownIt-Anchor" href="#特点-2"></a> 特点</h4><ul><li>可以较好地抑制自然语言的统计特性，不再有单字母替换的一一对应关系，对抗“唯密文攻击”有较高安全强度。</li><li>密钥空间较大，在忽略密钥矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>可逆限制条件下，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>k</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mn>2</mn><msup><mn>6</mn><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">|k|=26^{n×n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord"><span class="mord">6</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></li><li>易受已知明文攻击及选择明文攻击</li></ul><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/101268797_p0.jpg" alt="101268797_p0" /></p>]]></content>
    
    
    <summary type="html">归纳了常见的几种易考的古典密码，主要是单标代替和多表代替。</summary>
    
    
    
    <category term="课堂随笔" scheme="http://example.com/categories/%E8%AF%BE%E5%A0%82%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="古典密码" scheme="http://example.com/tags/%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81/"/>
    
    <category term="仿射密码" scheme="http://example.com/tags/%E4%BB%BF%E5%B0%84%E5%AF%86%E7%A0%81/"/>
    
    <category term="Hill Cipher" scheme="http://example.com/tags/Hill-Cipher/"/>
    
    <category term="Vigenere Cipher" scheme="http://example.com/tags/Vigenere-Cipher/"/>
    
    <category term="Playfair Cipher" scheme="http://example.com/tags/Playfair-Cipher/"/>
    
  </entry>
  
  <entry>
    <title>算法笔记之复杂性理论</title>
    <link href="http://example.com/posts/f4c69437cf30/"/>
    <id>http://example.com/posts/f4c69437cf30/</id>
    <published>2024-06-22T16:31:46.000Z</published>
    <updated>2024-06-22T16:31:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言</h2><p>在前面的章节中，我们解决了不同复杂性的问题。一些算法具有较低的增长率，而另一些具有较高的增长率。增长率低的问题被称为简单问题(或易于解决的问题)，而增长率高的问题被称为难题(或难以解决的问题)。这种分类是根据算法解决问题的运行时间(或内存)来进行的。</p><table><thead><tr><th>时间复杂度</th><th>数量级</th><th>例子</th><th>问题类别</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td><td>常数阶</td><td>将元素插入链表头部</td><td>易于解决的问题</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td><td>对数阶</td><td>在二叉搜索树中搜索元素</td><td>易于解决的问题</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td><td>线性阶</td><td>在无序数组中查找元素</td><td>易于解决的问题</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td><td>线性对数阶</td><td>归并排序</td><td>易于解决的问题</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td>平方阶</td><td>图中两个顶点的最短路径</td><td>易于解决的问题</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td>立方阶</td><td>矩阵相乘</td><td>易于解决的问题</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td>指数阶</td><td>汉诺塔问题</td><td>难以解决的问题</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">!</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n!)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">!</span><span class="mclose">)</span></span></span></span></td><td>阶乘阶</td><td>字符串排列</td><td>难以解决的问题</td></tr></tbody></table><p>有许多我们并不知道如何求解的问题。到目前为止，我们所看到的所有问题都是那些可以通过计算机在确定性时间内解决的问题。在开始本章的讨论之前，让我们看看本章中需要使用到的基本术语。</p><p>在计算机科学中，为了理解不存在解决方案的问题，将问题分为不同的类，我们称之为复杂性类(complexity class)。在复杂性理论中，复杂性类是一组与复杂性有关的问题。它是计算理论的一个分支，主要研究为了求解一个给定问题的计算过程中所需的资源。</p><p>最常见的资源有时间(算法需要花费多少时间代价来解决问题)和空间(算法需要花费多少内存代价来解决问题)。</p><h2 id="复杂性类的类型"><a class="markdownIt-Anchor" href="#复杂性类的类型"></a> 复杂性类的类型</h2><h3 id="p类"><a class="markdownIt-Anchor" href="#p类"></a> P类</h3><p>P类问题是可以用多项式时间求解的确定性机器来求解的一组判定性问题（P代表多项式时间）。P类问题是一组容易找到解决方案的问题。</p><p>代表：排序、图的连通性、最短路径等问题。</p><h3 id="np类"><a class="markdownIt-Anchor" href="#np类"></a> NP类</h3><p>NP（代表非确定性多项式时间）类问题是可以通过多项式时间的非确定性机器求解的一组判定性问题。NP类问题是指一组难以找到解决方案但易于验证的问题。这意味着，如果有人解决了NP类问题，我们可以在多项式时间内告诉他这个问题是否正确。</p><p>代表：旅行商问题（TSP）、布尔可满足性问题（SAT）等。</p><h3 id="co-np类问题"><a class="markdownIt-Anchor" href="#co-np类问题"></a> Co-NP类问题</h3><p>Co-NP问题是NP问题的补集，也就是与NP问题相反。如果Co-NP问题中的答案是否定的，那么这个事实就可以用多项式时间来检查。</p><table><thead><tr><th>P</th><th>可以在多项式时间内求解</th></tr></thead><tbody><tr><td>NP</td><td><strong>是</strong>实例可以在多项式时间内验证</td></tr><tr><td>Co-NP</td><td><strong>否</strong>实例可以在多项式时间内验证</td></tr></tbody></table><p>代表：全称可满足性问题（TAUT，是否所有的布尔公式都为真）等。</p><h3 id="p类-np类和co-np类的关系"><a class="markdownIt-Anchor" href="#p类-np类和co-np类的关系"></a> P类、NP类和Co-NP类的关系</h3><p>P类问题也是NP类问题。如果一个问题是P类问题，那么我们可以在多项式时间内验证它的是实例。类似地，P类问题也是Co-NP类问题。</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/NP%E4%B8%8EP.drawio.png" alt="NP与P.drawio" /></p><p>计算机中一个很重要的开放性问题是证明是否P=NP。直观上P≠NP，但是没人知道怎么证明。另一个开放性问题是NP和Co-NP是否不同。即我们可以快速验证每个是实例，也不能认为我们同样可以快速验证某个否实例。一般认为NP≠Co-NP，但也没有人知道如何证明。</p><h3 id="np难类"><a class="markdownIt-Anchor" href="#np难类"></a> NP难类</h3><p>NP中的每个问题都可以<strong>归约</strong>（后续会介绍）为NP难（NP-hard）问题。由于NP难问题可能不在NP中（即，可能没有多项式时间解法的问题），因此需要很长的时间才能验证他们。如果有人给出了NP难问题的解，我们需要很长的时间来验证给出的解是否正确。</p><p>如果K是NP难问题，那么蕴含着：如果K能够在多项式时间内被求解，则可证P=NP（因为所有的NP问题都可以被归结为NP难）。</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/NP%E4%B8%8ENP%E9%9A%BE.png" alt="NP与NP难" /></p><p>代表：包含很多的优化问题和决策问题，比如旅行商问题的优化版本、3-SAT等</p><h3 id="np完全类"><a class="markdownIt-Anchor" href="#np完全类"></a> NP完全类</h3><p>最后，如果一个问题既是NP难问题和NP问题，那么该问题是NP完全（NP-complete/NPC）问题。NP完全问题是NP中最难的问题。如果有人能发现一个NP完全问题的多项式时间算法，那么就可以找到每个NP完全问题的多项式时间算法。</p><p>这意味着我们可以快速检查答案，并且NP中的每个问题都可以归约到该问题。</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/NPC%E9%97%AE%E9%A2%98.png" alt="NPC问题" /></p><p>代表：经典的NP完全问题包括3-SAT、顶点覆盖问题（Vertex Cover）、哈密顿回路问题（Hamiltonian Circuit）等。</p><h3 id="npc和np难的关系"><a class="markdownIt-Anchor" href="#npc和np难的关系"></a> NPC和NP难的关系</h3><ul><li>NP难问题至少和NPC问题一样难。</li><li>NPC问题肯定是NP难的，但是反之不一定</li></ul><p>因为NPC问题虽然目前无法在多项式时间内给出解法，但是可以在多项式时间内验证解的正确性；而NP难问题则可能无法保证能在多项式时间内验证解。</p><h3 id="各类关系"><a class="markdownIt-Anchor" href="#各类关系"></a> 各类关系</h3><p>我们可以总结出P类、NP类、Co-NP类、NP难类和NP完全类的关系，如图所示（请注意这些目前还只是一个假设）：</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/%E5%90%84%E7%B1%BB%E5%85%B3%E7%B3%BB.png" alt="各类关系" /></p><p>NP难问题是NP完全问题的严格超集(superset)。一些问题(如停机问题)是NP难问题，但不是NP问题。一般而言，NP难问题可能无法解决。我们可以给出NP难问题和NP完全问题困难性之间的不同，因为NP类包含了所有比“最棘手”问题更容易的事情——如果一个问题不在NP中，那么该问题比NP中的所有问题都要困难。</p><h3 id="pnp吗"><a class="markdownIt-Anchor" href="#pnp吗"></a> P==NP吗？</h3><blockquote><p>美国麻省的Clay数学研究所于2000年5月24日在巴黎法兰西学院宣布：对七个“千年数学难题”中的每一个均悬赏100万美元，而问题NP =？P位列其首:</p><ol><li>P问题对NP问题</li><li>霍奇猜想</li><li>庞加莱猜想(2002.11-2003.7，俄罗斯数学家佩雷尔曼在3篇论文预印本中证明了几何化猜想，2006被授予菲尔兹奖)</li><li>黎曼假设</li><li>杨－米尔斯存在性和质量缺口</li><li>纳维叶－斯托克斯方程的存在性与光滑性</li><li>贝赫和斯维讷通－戴尔猜想</li></ol></blockquote><p>如果P=NP，这意味着每个可以被快速验证的问题都可以被快速解决。</p><p>这是一个世界性难题，目前没有人知道答案，因为现在没有人能证明P是否等于NP。许多NP完全问题至今还没有找到快速的解决方法。如果P=NP，那么就意味着有办法在多项式时间内解决这些NP完全问题。“快速”意味着解决这些问题不需要试错法。目前，求解这些问题可能需要数百万年，而未来的计算机可能将这数百万年的计算时间缩短到几分钟以内。</p><h3 id="归约"><a class="markdownIt-Anchor" href="#归约"></a> 归约</h3><p>假如我们想解问题X，但是X又非常复杂。这时候，我们想到有类似X的问题（假设为问题Y），那么我们可以尝试把X映射成Y，并通过解决Y来解决X。这个过程被称为<strong>归约</strong>。</p><p>我们需要一些算法将问题X映射到问题Y，这可能需要花费线性或者更多的时间。基于这一点，解决问题X的成本可以表达如下：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>解决</mtext><mi>X</mi><mtext>的成本</mtext><mo>=</mo><mtext>解决</mtext><mi>Y</mi><mtext>的成本</mtext><mo>+</mo><mtext>归约的时间</mtext></mrow><annotation encoding="application/x-tex">解决X的成本=解决Y的成本+归约的时间</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">决</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">本</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">决</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">本</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">归</span><span class="mord cjk_fallback">约</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span></span></span></span></p><p>有时候我们可能需要多次调用使用Y的算法去解决问题X，则此时X的成本可以表示为：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>解决</mtext><mi>X</mi><mtext>的成本</mtext><mo>=</mo><mtext>调用次数</mtext><mo>×</mo><mtext>解决</mtext><mi>Y</mi><mtext>的成本</mtext><mo>+</mo><mtext>归约的时间</mtext></mrow><annotation encoding="application/x-tex">解决X的成本=调用次数\times 解决Y的成本 + 归约的时间</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">决</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">本</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">调</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">次</span><span class="mord cjk_fallback">数</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">决</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">本</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">归</span><span class="mord cjk_fallback">约</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span></span></span></span></p><p>NP完全问题涉及的主要问题就是归约。这意味着，我们可以将给定的NP完全问题归约为其他已知的归约完全问题。由于NP完全问题很难被解决，并且为了证明给定的NP完全问题是困难的，我们可以选择一个已知的难题（已经证明了难题的困难性），通过将给定问题映射到该难题上的方法证明给定问题的困难性。</p><p>将给定难题归约到已知难题并不是强制的。有时候，我们也会将已知难题归约到给定难题。</p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/100852589_p0.jpg" alt="100852589_p0" /></p>]]></content>
    
    
    <summary type="html">介绍了算法中的复杂性理论，作为概念需要了解。</summary>
    
    
    
    <category term="算法笔记" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="复杂性理论" scheme="http://example.com/tags/%E5%A4%8D%E6%9D%82%E6%80%A7%E7%90%86%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>汇编味小饼干</title>
    <link href="http://example.com/posts/6e1e8506b86f/"/>
    <id>http://example.com/posts/6e1e8506b86f/</id>
    <published>2024-06-12T05:44:03.000Z</published>
    <updated>2024-06-12T05:44:03.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编味浓缩饼干"><a class="markdownIt-Anchor" href="#汇编味浓缩饼干"></a> 汇编味浓缩饼干</h1><p>为备考而制作的知识点汇总，方便考生快速而准确的浏览到汇编语言中的重点。内容简单干脆，小巧精美。希望每一个阅读的考生都能像嚼饼干一样轻松的拿下汇编。</p><p>本汇编知识点汇总基于8086操作系统总结而成，参考教科书《汇编语言》·王爽著。</p><h2 id="基础知识"><a class="markdownIt-Anchor" href="#基础知识"></a> 基础知识</h2><p>一些8086组成原理的基本介绍，属于汇编中的开胃小菜。</p><h3 id="储存单元"><a class="markdownIt-Anchor" href="#储存单元"></a> 储存单元</h3><ul><li><p>一个双字（dword）有两个字（word）</p><p>双字：4f  00  24  c2</p><p>字：24  c2</p></li><li><p>一个字（word）有两个字节（byte）</p><p>字：24  c2</p><p>字节：24、c2  （十六进制下）</p></li><li><p>一个字节（byte）有8个位（bit）</p><p>字节：c2</p><p>位：11000010  （1个低位字节十六进制展开对应4个二进制位，一个字节展开就是8个位）</p></li></ul><p>通常来说，8086的内存单元即指代的是一个字节。</p><p>注意8086机器大多采用<strong>小端序</strong>，即低位在前高位在后。所谓低位字节/字即<strong>右</strong>半部分，高位即<strong>左</strong>半部分。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240611200053470.png" alt="image-20240611200053470" style="zoom:67%;" /><p>比如AX=100111000100000，则填充AX为16位：01001110 00100000，AH=01001110，AL=00100000。</p><h3 id="cpu的读写功能"><a class="markdownIt-Anchor" href="#cpu的读写功能"></a> CPU的读写功能</h3><p>CPU对内存及存储器的读写依赖于<strong>三根总线</strong>：</p><ul><li>地址总线</li><li>数据总线</li><li>控制总线</li></ul><p>具体工作流程如下：</p><ol><li>通过地址线发出地址信息</li><li>通过控制线发出内存读写命令</li><li>通过数据线传入/传出数据</li></ol><h3 id="三大总线"><a class="markdownIt-Anchor" href="#三大总线"></a> 三大总线</h3><p>总线的根数成为<strong>宽度</strong>。</p><p>地址总线的宽度决定了它的寻址能力。比如地址总线宽度为10，说明有10根线，每根线对应高低电平可以视为二进制，那么这个地址总线就具备2<sup>n</sup>的寻址能力。</p><p>数据总线的宽度决定了它的传输能力。8086CPU的数据总线宽度为16，有16根线，那么每次就能传送16位数据，也就是两个字节/一个字。</p><p>控制总线是一些不同控制线的集合，有多少根控制总线，意味着CPU对外部器件提供了多少种控制。</p><h3 id="16位cpu"><a class="markdownIt-Anchor" href="#16位cpu"></a> 16位CPU</h3><p>8086是16位机，经过对三大总线的宽度介绍，我们现在可以很轻松的理解16位结构（16位机、字长为16位）的含义。概括的说，有以下三个特性：</p><ul><li>运算器一次最多可以处理16位的数据。</li><li>寄存器最大宽度为16位。</li><li>寄存器与运算器之间的通路为16位。</li></ul><h3 id="存储器芯片与内存地址空间"><a class="markdownIt-Anchor" href="#存储器芯片与内存地址空间"></a> 存储器芯片与内存地址空间</h3><p>一般由读写属性可分为两类：随机存储器（RAM）和只读存储器（ROM）。随机存储器可读可写，但是必须带电存储，关机后存储内容丢失；只读存储器只能读不能写，关机后内容不丢失。</p><p>基于以上特性，RAM常被用来存放供CPU使用的绝大部分程序与数据，包括主存储器、显存和接口卡上的存储器。而ROM常被用来存储BIOS（Basic Input/Output System）。</p><p>地址空间分配如下：</p><ul><li>0~7fffh的32kb为主随机存储器的地址空间</li><li>8000h~9fffh的8kb空间为显存地址空间</li><li>a000h~ffffh的24kb为各个ROM的地址空间</li></ul><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240611195132240.png" alt="image-20240611195132240" style="zoom:67%;" /><h3 id="8086与物理地址"><a class="markdownIt-Anchor" href="#8086与物理地址"></a> 8086与物理地址</h3><p>学会计算实际的物理地址是汇编中的基础操作。在8086中，物理地址=段地址*16+偏移地址。</p><p>我们以段地址寄存器DS和偏移寄存器DI举例。</p><p>计算时用DS*16+DI，在十六进制下即将DS中的四位十六进制数左移一位与DI中的地址相加得到实际地址。</p><p>由于段地址*16必然是16的倍数，所以一个段的起始地址也一定是16的倍数；同时，偏移地址为16位，16位地址的寻址能力为64kb，即一个段的最大长度为64kb。</p><blockquote><p>2<sup>10</sup> = 1024</p><p>FFFFH = 1111 1111 1111 1111 = 2<sup>16</sup> = 2<sup>6</sup> * 1024 = 64kb</p></blockquote><h2 id="寄存器"><a class="markdownIt-Anchor" href="#寄存器"></a> 寄存器</h2><p>介绍了CPU中各个寄存器的作用，基础且重要，不过也很简单。</p><h3 id="ax寄存器accumulator"><a class="markdownIt-Anchor" href="#ax寄存器accumulator"></a> AX寄存器·Accumulator</h3><p>AX是四大通用寄存器中的一员（AX、BX、CX、DX）</p><p>此外，AX也被称为累加器，在许多运算过程中都用于存储和操作数据。</p><p>除了常规的加减法外，在使用<code>mul</code>指令执行乘法操作时：</p><ul><li>被乘数为8位，放置在AL中；调用<code>mul 乘数</code>，最终结果存储在AX内。</li><li>被乘数为16位，放置在AX中；调用<code>mul 乘数</code>，最终结果低位储存在AX内，高位储存在DX内。</li></ul><p>使用<code>div</code>指令执行除法操作时：</p><ul><li>除数为8位，则被除数16位默认在AX中；调用<code>div 除数</code>，最后AH存储余数，AL存储商。</li><li>除数为16位，则被除数32位默认高位在DX，低位在AX；<code>div 除数</code>，最后DX存储余数，AX存储商。</li></ul><h3 id="bx寄存器base"><a class="markdownIt-Anchor" href="#bx寄存器base"></a> BX寄存器·Base</h3><p>BX也是通用寄存器。</p><p>BX也被称为基址寄存器，可以用来进行内存寻址。比如8086允许DS:[BX]的寻址调用，而DS:[AX]的使用是非法的。</p><p>同样可以进行内存寻址的还有SI、DI、BP寄存器。</p><h3 id="cx寄存器count"><a class="markdownIt-Anchor" href="#cx寄存器count"></a> CX寄存器·Count</h3><p>CX寄存器也是一个通用寄存器。</p><p>CX又被称为计数寄存器，最重要的用途就是用来循环计数。当调用<code>loop 标号</code>指令时，会执行以下操作：</p><ol><li><p>CX = CX - 1</p></li><li><p>CX==0 ? 执行下一条指令 : jmp 标号</p><p>即检查CX的值是否为0，如果为0则退出循环，否则跳转回标号继续循环。</p></li></ol><p>值得注意的是如果CX已经等于0，再去进行<code>loop</code>调用，那么CX会先递减并发生下溢舍去符号位变为<code>FFFFh</code>，然后跳出循环检测为假陷入无限循环。</p><p>此外，再进行字符串处理时，比如调用<code>cmpsb</code>，<code>movsb</code>等指令时，CX也用来处理要储存的字符串的长度。<code>rep</code>会根据CX的值来决定循环次数。</p><h3 id="dx寄存器data"><a class="markdownIt-Anchor" href="#dx寄存器data"></a> DX寄存器·Data</h3><p>DX也是通用寄存器。</p><p>同时，DX也被称为数据寄存器。在前文的乘除法操作中，DX常和AX一起使用来存储数据。</p><p>此外，在进行IO端口映射时，DX也用于做端口地址寄存器。调用<code>in</code>和<code>out</code>指令端口映射时，用DX储存要访问端口的地址。</p><p>在某些时刻DX还能做数据传输操作的来源或者地址，比如调用<code>int 21h</code>中断例程时，常用DX存储要打印或者输入的字符串内存地址。</p><h3 id="si寄存器source-index"><a class="markdownIt-Anchor" href="#si寄存器source-index"></a> SI寄存器·Source Index</h3><p>SI寄存器，常被称为源索引寄存器。在8086中主要用于字符串操作和间接寻址。</p><ol><li><strong>字符串操作</strong>：在执行字符串指令时，SI寄存器通常用作源字符串的偏移量。例如，在执行<code>MOVSB</code>（移动字符串字节）或<code>STOSB</code>（存储字符串字节）等指令时，ES:SI寄存器指向源字符串的当前位置，而DS:DI则指向要转移的目标位置。</li><li><strong>间接寻址</strong>：SI寄存器和BX一样，可以用于间接寻址模式。其中它作为基地址寄存器，与偏移量结合来形成完整的内存地址。</li><li><strong>数据传输</strong>：在数据传输操作中，SI寄存器可以作为源地址寄存器，用于从内存中读取数据。</li></ol><p>注意：SI寄存器无法分成两个8位寄存器来使用</p><h3 id="di寄存器destination-index"><a class="markdownIt-Anchor" href="#di寄存器destination-index"></a> DI寄存器·Destination Index</h3><p>DI寄存器，通常被称为目的索引寄存器。它与SI寄存器类似，主要用于字符串操作和间接寻址。</p><ol><li><strong>字符串操作</strong>：在执行字符串指令时，DI寄存器通常用作目的字符串的偏移量。在执行<code>MOVSB</code>等指令时，DS:DI指向要转移的目标位置。</li><li><strong>间接寻址</strong>：DI寄存器可以用于间接寻址模式，其中它作为基地址寄存器，与偏移量结合来形成完整的内存地址。</li><li><strong>数据传输</strong>：在数据传输操作中，DI寄存器可以作为目的地址寄存器，用于将数据写入内存。</li></ol><p>注意：DI寄存器也无法分成两个8位寄存器来使用</p><h3 id="栈寄存器"><a class="markdownIt-Anchor" href="#栈寄存器"></a> 栈寄存器</h3><p>和栈相关的寄存器有：SP寄存器·Stack Point、BP寄存器·Base Point、SS寄存器·Stack Segment。</p><p>SP寄存器代表堆栈指针，用于指向当前堆栈的顶部；SS寄存器是堆栈段寄存器，用来存储当前堆栈使用的段地址；BP是基址指针，用来指向当前堆栈帧的基地址，可以配合SS寄存器进行寄存器相对寻址。</p><p>栈是汇编语言中管理数据的一个重要方法。8086CPU不能直接和内存交换数据，必须要把内存读入寄存器，再送入CPU进行处理。如果我们编写了复杂的程序，寄存器可能会不够用。这时最好的办法就是把寄存器的数据推入栈中保存，执行完对应的过程后再弹出。</p><p>和栈相关的寄存器有SS、SP、BP。我们只讨论SS和SP，SS:SP始终指向栈顶元素。一般用<code>push</code>和<code>pop</code>来管理栈。</p><p>当执行<code>push ax</code>时，进行操作：</p><ol><li>SP = SP - 2</li><li>将ax的数据送入SS:SP所指的内存单元</li></ol><p>同理执行<code>pop ax</code>时，进行操作：</p><ol><li>将SS:SP所指的内存单元送入ax处</li><li>SP = SP + 2</li></ol><p>一个常见的考点是，给定栈的范围和SS的值，求SP的值。这里要注意的一点是，SP应该指向栈空间最高地址单元的下一格，具体原因如下图。</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/%E6%B1%87%E7%BC%96%C2%B7%E6%A0%88%E7%9A%84%E7%A4%BA%E6%84%8F%E5%9B%BE.drawio.png" alt="汇编·栈的示意图.drawio" /></p><p>给定栈空间10000H~1000FH作为栈，SS=1000H，则SP应为：000FH + 1 = 0010H。</p><p>注意，图中AX数据为2266H，AH=22H，AL=66H；故高位内存单元1000FH存放高位字节22H，低位内存单元存放低位字节66H。</p><h3 id="段寄存器"><a class="markdownIt-Anchor" href="#段寄存器"></a> 段寄存器</h3><p>段寄存器有DS数据段寄存器·Data Segment、ES附加段寄存器·Extra Segment、CS代码段寄存器·Code Segment和SS堆栈段寄存器·Stack Segment。其中SS寄存器前文已经介绍过。</p><p>一般来说，DS用于指定当前的数据段基址。所有的内存操作，均默认以DS寄存器内的数据作为段偏移地址计算内存地址。ES寄存器最初设计用于提供额外的内存寻址能力，但在现代x86架构中，它的用途已经减少。但是在诸如<code>cmpsb</code>等指令的调用中，还是需要指定ES的值配合SI目的偏移寄存器来使用。</p><p>CS常和IP指令指针寄存器·Instruction Point搭配使用。CS和IP是8086CPU中最关键的两个寄存器。在任意时刻，8086CPU将CS:IP指向的内容当做指令执行。</p><p>8086CPU的工作流程可以概括如下：</p><ol><li>从 CS:IP 指向的内存单元读取指令，读取的指令进入指令缓冲器</li><li>IP=IP+所读取指令的长度，从而指向下一条指令</li><li>执行指令。转到步骤(1)，重复这个过程。</li></ol><p>注意IP的执行顺序是：先读取指令 -&gt; 缓存指令 -&gt; IP下移至下一条指令 -&gt; 执行指令。尤其是在使用了<code>jmp</code>等跳转指令时小心，此时IP在执行跳转标号处的指令时会连续移动三次（读入<code>jmp</code>后指向下一条指令、跳转到标号指令、读入标高处指令并指向下一条指令）。</p><h3 id="psw寄存器program-status-word"><a class="markdownIt-Anchor" href="#psw寄存器program-status-word"></a> PSW寄存器·Program Status Word</h3><p>PSW寄存器即程序状态字寄存器，在8086中，即我们所学的Flag标志寄存器。它的特定位数有对应的用途。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240611205022872.png" alt="image-20240611205022872" style="zoom:80%;" /><p>flag 的 1、3、5、12、13、14、15 位在 8086CPU 中没有使用，不具有任何含义。而0、2、4、6、7、8、9、10、11 位都具有特殊的含义。</p><p>我们简单介绍CF、PF、ZF、SF、SF、OF、DF等标志位的作用。</p><table><thead><tr><th>标志寄存器</th><th>作用</th></tr></thead><tbody><tr><td>CF（Carry Flag，进位标志）</td><td>用于表示上一次算术运算是否产生了进位或借位。在加法运算中，如果结果超出了寄存器的大小，CF会被设置；在减法运算中，如果结果小于0，CF也会被设置。<strong>CF通常用于无符号数运算</strong></td></tr><tr><td>PF（Parity Flag，奇偶校验标志）</td><td>用于表示上一次操作结果的最低有效字节的奇偶性。如果结果的二进制表示中有偶数个1，则PF被设置为1，表示偶校验；如果有奇数个1，则PF被清除，表示奇校验。</td></tr><tr><td>ZF（Zero Flag，零标志）</td><td>如果上一次操作的结果为零，则ZF被设置。这个标志位常用于条件跳转指令，以检查操作是否没有产生任何影响。</td></tr><tr><td>SF（Sign Flag，符号标志）</td><td>用于表示上一次操作结果的符号。在有符号整数运算中，如果结果为负数，则SF被设置；如果结果为正数或零，则SF被清除。</td></tr><tr><td>OF（Overflow Flag，溢出标志）</td><td>用于表示上一次算术运算是否产生了溢出。在有符号整数运算中，如果结果超出了寄存器能够表示的最大或最小值，OF会被设置。<strong>OF专门用于有符号数运算</strong></td></tr><tr><td>DF（Direction Flag，方向标志）</td><td>用于控制字符串操作指令的方向。当DF被设置时，字符串操作会向内存的低地址方向进行；当DF被清除时，操作会向高地址方向进行。</td></tr><tr><td>AF（Auxiliary Carry Flag，辅助进位标志）</td><td>用于表示BCD（二进制编码的十进制）算术运算中的辅助进位。在BCD加法运算中，如果从低4位到高4位产生了进位，则AF会被设置。</td></tr><tr><td>IF（Interrupt Enable Flag，中断使能标志）</td><td>控制CPU是否应该响应外部和内部中断请求。如果IF被设置，CPU将允许中断；如果被清除，则CPU将忽略中断请求。</td></tr><tr><td>*TF（Trap Flag，陷阱标志）</td><td>当TF标志被设置时，CPU进入单步执行模式。在这种模式下，每执行一条指令后，CPU都会触发一个单步异常（单步陷阱），这通常用于调试目的。<strong>不常考察</strong>。</td></tr></tbody></table><p>相应的，也有许多配套的指令和标志寄存器相配合。</p><p>比如<code>adc</code>指令和<code>sbb</code>指令，和CF标志寄存器相关，分别对应实现8086CPU的借位加和借位减。内容比较冗杂，目前暂且先不介绍。</p><p><code>cmp</code>指令也很常用，和ZF标志寄存器相关。<code>cmp ax,bx</code>相当于对两个寄存器的值执行一次不改变寄存器的减法操作，用ZF记录结果的值是否为0。常常和<code>jz</code>条件转移指令连用。关于条件转移指令，可以参照下文[条件转移指令的介绍](# 条件转移指令)</p><p>DF寄存器常和串传送指令相关，用<code>cld</code>将DF置0，<code>sld</code>将DF置1。串传送十分重要，常被用来实现新断点例程的安装，参考如下代码段：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">assume cs:codesg</span><br><span class="line"></span><br><span class="line">codesg segment</span><br><span class="line">    start:  mov ax,cs</span><br><span class="line">            mov ds,ax</span><br><span class="line">            mov si,offset do0</span><br><span class="line"></span><br><span class="line">            mov ax,0</span><br><span class="line">            mov es,ax</span><br><span class="line">            mov di,200h</span><br><span class="line"></span><br><span class="line">            mov cx,offset do1-offset do0</span><br><span class="line">            cld</span><br><span class="line">            rep movsb ;等价于</span><br><span class="line">              ;s:movsb</span><br><span class="line">              ;  loop s</span><br><span class="line"></span><br><span class="line">            mov ax,0</span><br><span class="line">            mov es,ax</span><br><span class="line">            mov word ptr es:[0*4],200h</span><br><span class="line">            mov word ptr es:[0*4+2],0</span><br><span class="line"></span><br><span class="line">            mov ax,4c00h</span><br><span class="line">            int 21h</span><br><span class="line">    </span><br><span class="line">    do0:    jmp short do0start</span><br><span class="line">            db &quot;divide overflow!&quot;</span><br><span class="line"></span><br><span class="line">    do0start:</span><br><span class="line">            mov ax,cs</span><br><span class="line">            mov ds,ax</span><br><span class="line">            mov si,202h</span><br><span class="line"></span><br><span class="line">            mov ax,0b800h</span><br><span class="line">            mov es,ax</span><br><span class="line">            mov di,12*160+33*2;显示位置</span><br><span class="line"></span><br><span class="line">            mov cx,16;字符串长度</span><br><span class="line">    s:      mov al,[si]</span><br><span class="line">            mov es:[di],al</span><br><span class="line">            mov byte ptr es:[di+1],0c0h;显示属性,红底白字</span><br><span class="line">            inc si</span><br><span class="line">            add di,2</span><br><span class="line">            loop s</span><br><span class="line"></span><br><span class="line">            mov ax,4c00h</span><br><span class="line">            int 21h</span><br><span class="line">    do1:    nop</span><br><span class="line"></span><br><span class="line">codesg ends</span><br><span class="line">end start</span><br></pre></td></tr></table></figure><p>最后，就是<code>pushf</code>与<code>popf</code>。这两条指令分别代表将标志寄存器的值入栈和从栈中弹出数据送入标志寄存器内。</p><h2 id="内存地址定位与寻址方式"><a class="markdownIt-Anchor" href="#内存地址定位与寻址方式"></a> 内存地址定位与寻址方式</h2><p>各种寄存器的知识已经介绍完毕，接下来我们就可以来谈谈8086CPU几种不同的寻址方式。</p><p>下图总结的十分全面：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/6c45b64b47604c3ca24174cf53f983ab.png" alt="在这里插入图片描述" style="zoom: 80%;" /><p>寻址方式一共有五种：直接寻址（立即数）、间接寻址（单寄存器）、相对寻址（单寄存器加立即数）、基址变址寻址（寄存器加寄存器）、相对基址变址寻址（寄存器加寄存器加立即数）。</p><p>能参与寻址的段寄存器有ds、ss、es；能参与寻址的偏移寄存器有bx、si、di（都默认ds）、bp（默认ss）。</p><p>对于8086CPU的指令，可以处理两种尺寸的数据——Byte和Word。为了让机器知道进行字操作还是字节操作，我们需要用操作符<code>X ptr</code>来指明长度。<code>X</code>可以是word或者byte。例子如下：</p><ul><li><p><code>mov word ptr ds:[0],1</code></p></li><li><p><code>inc byte ptr [bx]</code></p></li><li><p><code>div word ptr [bx+8]</code></p><p>ax = (dx * 10000h +ax) / (ds * 16 + bx +8)的商</p><p>dx = (dx * 10000h +ax) / (ds * 16 + bx +8)的余数</p></li><li><p><code>div byte ptr [bx+8]</code></p><p>al = ax / (ds * 16 + bx +8)的商</p><p>ah = ax / (ds * 16 + bx +8)的余数</p></li></ul><h2 id="深入转移指令"><a class="markdownIt-Anchor" href="#深入转移指令"></a> 深入转移指令</h2><p>看到这里，基本的内存访问方法已经差不多搞清楚，接下来就该上点强度了。在高级语言编程时，函数是至关重要的一环。它允许用户开辟一块新的代码段，封装一个功能方便用户调用，大大提高了代码的可读性和封装性。在汇编中，函数过程的调用对应的是转移指令，即<strong>可以修改IP，或同时修改CS和IP的指令</strong>。</p><p>在8086CPU中，转移指令分为以下几类：</p><ul><li>无条件转移指令（<code>jmp</code>）</li><li>条件转移指令（<code>jz</code>、<code>jne</code>等）</li><li>循环指令（<code>loop</code>）</li><li>过程（<code>call</code>、<code>ret</code>等）</li><li>中断（<code>int</code>、<code>iret</code>等）</li></ul><p>接下来我们来逐一介绍这些转移指令的用法。</p><h3 id="修改范围"><a class="markdownIt-Anchor" href="#修改范围"></a> 修改范围</h3><p>在进入具体的指令介绍前，我们先了解指令转移行为的类别，这个规律对大部分转移指令都适用：</p><ul><li>只修改IP，称为段内转移，如：<code>jmp ax</code></li><li>同时修改CS和IP，称为段间转移,如：<code>jmp 1000:0</code></li></ul><p>段内转移又分为：短转移和近转移。</p><p>短转移的IP修改范围为-128~127（IP+8位位移），近转移的修改范围为-32768~32767（IP+16位位移）。短跳转通常用于小范围内的循环或条件语句，近跳转则用于更复杂的流程控制，如跳转到程序的其他部分。</p><h3 id="jmp指令"><a class="markdownIt-Anchor" href="#jmp指令"></a> jmp指令</h3><p><code>jmp</code>是最长使用的无条件跳转指令，有以下几种用法：</p><ul><li><code>jmp short 标号</code>执行段内短跳转。</li><li><code>jmp near ptr 标号</code>执行段内近跳转，是默认的使用方式，等价于<code>jmp 标号</code>。</li><li><code>jmp far ptr 标号</code>执行段间转移，也称远转移。该指令用标号的段地址和偏移地址修改CS:IP。</li><li><code>jmp 16位reg</code>等价于段内近跳转。</li><li><code>jmp word ptr 内存单元地址</code>等价于执行段内短跳转。</li><li><code>jmp dword ptr 内存单元地址</code>执行段间转移，高地址的字储存转移的目的段地址修改CS，低地址的字储存转移的目的偏移地址修改IP。即CS = 内存单元地址 + 2，IP = 内存单元地址</li></ul><h3 id="条件转移指令"><a class="markdownIt-Anchor" href="#条件转移指令"></a> 条件转移指令</h3><p>条件转移指令常常以字母J开头，比如<code>jcxz</code>，<code>jz</code>等。我们对这些繁琐而简短的指令做一个汇总方便记忆</p><p><code>jcxz</code>（jump if cx zero）指令是有条件转移指令，所有的有条件转移指令都是短转移，在对应的机器码中包含的都是标号的位移而非其目的地址。</p><p><code>jcxz 标号</code>将检测cx是否为0，如果不为0则跳转至目标标号执行。等同于：<code>if cx==0 &#123;jmp short 标号&#125;</code>。</p><p>可以用<code>jcxz</code>代替<code>loop</code>实现循环：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dec cx</span><br><span class="line">jcxz 标号</span><br></pre></td></tr></table></figure><p>除<code>jcxz</code>外，下面的指令都是标志寄存器相关的转移指令。</p><table><thead><tr><th>指令</th><th>含义</th><th>检测的相关标志位</th></tr></thead><tbody><tr><td>je/jz</td><td>等于(0)则转移</td><td>zf=1</td></tr><tr><td>jne</td><td>不等于则转移</td><td>zf=0</td></tr><tr><td>jb</td><td>低于则转移</td><td>cf=1</td></tr><tr><td>jnb</td><td>不低于则转移</td><td>cf=0</td></tr><tr><td>ja</td><td>高于则转移</td><td>cf=0且zf=0</td></tr><tr><td>jna</td><td>不高于则转移</td><td>cf=1且zf=1</td></tr><tr><td>jle</td><td>小于等于则转移</td><td>sf=zf</td></tr></tbody></table><p>更多的条件转移指令塞到本章有些过于繁琐，所以我只节选了教材上提到过的条件转移指令，应付考试应该绰绰有余了，其他的资料就留待日后扩展吧。</p><h3 id="loop指令"><a class="markdownIt-Anchor" href="#loop指令"></a> loop指令</h3><p><code>loop</code>是循环指令，所有的循环指令都是短转移。</p><p>调用<code>loop 标号</code>指令时，会执行以下操作：</p><ol><li><p>CX = CX - 1</p></li><li><p>CX==0 ? 执行下一条指令 : jmp 标号</p><p>即检查CX的值是否为0，如果为0则退出循环，否则跳转回标号继续循环。</p></li></ol><p>更具体的介绍可以参照cx寄存器的资料。</p><h3 id="call与ret"><a class="markdownIt-Anchor" href="#call与ret"></a> call与ret</h3><p><code>call</code>和<code>ret</code>可以视为函数的调用与返回指令。一般的流程是先调用<code>call</code>，CPU将当前的（此时IP已经指向<code>call</code>的下一条指令）IP或者CS与IP入栈，然后跳转到目的地址执行，最后再通过<code>ret</code>或者<code>retf</code>返回原来的地址。</p><p><code>call</code>指令和<code>jmp</code>类似，本质上就是先入栈再跳转，所以用法也类似：</p><ul><li><p><code>call 标号</code>等价于：</p><p><code>push IP</code></p><p><code>jmp near ptr 标号</code></p></li><li><p><code>call far ptr 标号</code>等价于：</p><p><code>push CS</code></p><p><code>push IP</code></p><p><code>jmp far ptr 标号</code></p></li><li><p><code>call 16位reg</code>等价于：</p><p><code>push IP</code></p><p><code>jmp 16位reg</code></p></li><li><p><code>call word ptr 内存单元地址</code>等价于：</p><p><code>push IP</code></p><p><code>jmp word ptr 内存单元地址</code></p></li><li><p><code>call dword ptr 内存单元地址</code>等价于：</p><p><code>push CS</code></p><p><code>push IP</code></p><p><code>jmp dword ptr 内存单元地址</code></p></li></ul><p><code>ret</code>指令有许多变种，依次归纳如下：</p><ul><li><p><code>ret</code>指令实现近转移，等价于：</p><p><code>pop IP</code></p></li><li><p><code>retf</code>指令实现远转移，等价于：</p><p><code>pop IP</code></p><p><code>pop CS</code></p></li><li><p><code>iret</code>指令实现远转移，用于处理中断程序的返回，等价于：</p><p><code>pop IP</code></p><p><code>pop CS</code></p><p><code>popf</code></p></li></ul><h2 id="中断"><a class="markdownIt-Anchor" href="#中断"></a> 中断</h2><p>中断是8086CPU的一种能力，这让它能够在执行完当前的指令后，检测到CPU外部发送过来的特殊信息（如断电、键盘输入等），立即去执行其他的指令，而不去接着执行下一条指令。中断分为内中断和外中断两种，重点是内中断；而外中断因为涉及到过多的硬件知识所以简单介绍，只讨论键盘外设的输入及端口。</p><h3 id="内中断"><a class="markdownIt-Anchor" href="#内中断"></a> 内中断</h3><p>一般来说，8086CPU有如下四种中断：</p><ol><li>除法错误，比如<code>div 0</code>，本质上是调用了<code>int 0</code>号中断</li><li>单步执行，在debug模式下</li><li>执行<code>into</code>指令</li><li>执行<code>int</code>指令</li></ol><p>我们着重介绍第四种情况。</p><h4 id="中断的过程"><a class="markdownIt-Anchor" href="#中断的过程"></a> 中断的过程</h4><p><code>int</code>指令是如何执行中断程序的呢？</p><p>我们前文提到，<code>int</code>指令也是一种转移指令，那么也就意味着，在执行完对应的中断程序后，CPU还需要跳转回原来的指令继续执行（当然也可能直接终止程序了）。此时的做法和<code>call</code>类似，在跳转至中断程序前，需要先把此时的CS:IP入栈，然后再进行跳转。</p><p>储存好CS:IP后，CPU用8位的中断类型码跳转至中断向量表，找到中断程序的入口地址，再跳转至真正的中断程序执行。中断类型码，即<code>int 类型码</code>，我们常说的0号中断就是类型码为0。因为中断类型码只有8位，这就意味着中断向量表只能储存256个中断程序。而这其中大部分的中断类型码其实都没有使用，这就给我们拓展CPU的功能留下了空间。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240612112356153.png" alt="image-20240612112356153" style="zoom:80%;" /><p>在8086CPU中，中断向量表储存在内存地址0处。从内存0000:0000到0000:03FF共1024个字节中都用来存放中断向量表。在中断向量表中，一个表项存放一个中断向量，也就是中断程序的入口地址。一共占两个字，高地址字存放入口地址的段地址，低地址字存放偏移地址。</p><blockquote><p>加深记忆</p><p>1024Byte = 512Word = 256 入口地址 = 256/2<sup>8</sup>个例程 = 8位类型码</p></blockquote><p>对中断程序入口地址的考察也是一个常考点，例题如下：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240612113309849.png" alt="image-20240612113309849" style="zoom: 50%;" /><p>更简洁的描述中断过程如下：</p><ol><li>取得中断类型码N</li><li><code>pushf</code></li><li>TF=0，IF=0（将在下一章讨论）</li><li><code>push CS</code></li><li><code>push IP</code></li><li>IP=4N，CS=4N+2</li></ol><p>更具体的中断例程的调用不用记忆，比如BIOS和DOS提供的中断程序调用，题目一般会直接给出资料。</p><p>下面再给出BIOS提供中断例程的资料拓展，可能会作为材料选择题考察。</p><blockquote><p>在系统板的 ROM 中存放着一套程序，称为 BIOS(基本输入输出系统)，BIOS 中主要包含以下几部分内容。</p><ol><li>硬件系统的检测和初始化程序</li><li>外部中断和内部中断的中断例程</li><li>用于对硬件设备进行 I/O 操作的中断例程</li><li>其他和硬件系统相关的中断例程</li></ol><p>CPU在启动时，会先安装BIOS提供的中断例程，再转去启动DOS，具体步骤如下：</p><ol><li>开机后，CPU 一加电，初始化(CS)=0FFFFH，(IP)=0，自动从 FFFF:0 单元开始执行程序。FFFF:0 处有一条转跳指令，CPU 执行该指令后，转去执行 BIOS 中的硬件系统检测和初始化程序。</li><li>初始化程序将建立 BIOS 所支持的中断向量，即将 BIOS 提供的中断例程的入口地址登记在中断向量表中。注意，对于 BIOS 所提供的中断例程，只需将入口地址登记在中断向量表中即可，因为它们是固化到 ROM 中的程序，一直在内存中存在。</li><li>硬件系统检测和初始化完成后，调用int 19h 进行操作系统的引导。从此将计算机交由操作系统控制。</li><li>DOS 启动后，除完成其他工作外，还将它所提供的中断例程装入内存，并建立相应的中断向量。</li></ol></blockquote><h3 id="外中断"><a class="markdownIt-Anchor" href="#外中断"></a> 外中断</h3><p>外中断即是由外部设备输入CPU产生的中断信息，我们先简单的介绍一下端口的概念，介绍CPU与外设的基本通信方式，再讨论外中断。</p><h4 id="端口"><a class="markdownIt-Anchor" href="#端口"></a> 端口</h4><p>CPU可以直接读写以下3个地方的数据：</p><ol><li>CPU内部的寄存器</li><li>内存单元</li><li>端口</li></ol><p>端口实际上是一组接口芯片，它们既可以控制接口卡进行工作，还可以利用芯片自带的可供CPU读写的寄存器储存CPU发来的信息。从CPU的角度来讲，它都把这些寄存器当做端口进行统一编址，从而建立一个统一的端口地址空间，每一个端口空间在地址空间中都有一个地址，这样CPU就可以通过访问地址的方式访问端口从而和外设建立起通信。</p><p>因为端口所在的芯片和CPU通过总线相连，所以端口地址和内存地址一样，通过地址总线来传送。最多可以定位64kb个不同的端口，即端口的范围为0~65535。</p><p>在汇编中，则是通过<code>in</code>和<code>out</code>指令来调用端口。用法如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;对0~255以内的端口进行读写时</span><br><span class="line">in al,20h  ;从20h端口读入一个字节</span><br><span class="line">out 20h,al ;从20h端口写入一个字节</span><br><span class="line">;对256~65535的端口进行读写时</span><br><span class="line">mov dx,3f8h;将端口号送入dx</span><br><span class="line">in al,dx   ;从3f8h端口读入一个字节</span><br><span class="line">out dx,al  ;从3f8h端口写入一个字节</span><br></pre></td></tr></table></figure><p>注意，在<code>in</code>和<code>out</code>指令中，只能用ax或al来存放从端口中读入的数据或者发送到端口的数据。访问8位端口时用al，16位端口用ax。</p><h4 id="外中断响应信息"><a class="markdownIt-Anchor" href="#外中断响应信息"></a> 外中断响应信息</h4><p>介绍完端口通信的内容，我们就要引入对于外中断来说一个重要的概念：可屏蔽中断与不可屏蔽中断。</p><h5 id="可屏蔽中断"><a class="markdownIt-Anchor" href="#可屏蔽中断"></a> 可屏蔽中断</h5><p>可屏蔽中断是 CPU 可以不响应的外中断。CPU 是否响应可屏蔽中断，要看标志寄存器的IF位的设置。当 CPU 检测到可屏蔽中断信息时，如果 IF=1，则 CPU 在执行完当前指令后响应中断，引发中断过程；如果IF=0，则不响应可屏蔽中断。</p><p>过程如下：</p><ol><li>取中断类型码n</li><li><code>pushf</code>，IF=0，TF=0</li><li><code>push CS</code>，<code>push IP</code></li><li>IP = 4 * n，CS = 4 * n + 2</li></ol><p>可屏蔽中断通常使用<code>sti</code>和<code>cli</code>指令来处理。</p><ul><li><code>sti</code>，设置标志寄存器IF=1，此时可以响应可屏蔽外中断</li><li><code>cli</code>，设置标志寄存器IF=0，此时禁止响应所有的可屏蔽中断</li></ul><p>可屏蔽中断所引发的中断过程，除在第1步的实现上有所不同外，基本上和内中断的中断过程相同。因为可屏蔽中断信息来自于 CPU 外部，中断类型码是通过数据总线送入CPU 的；而内中断的中断类型码是在 CPU 内部产生的。</p><p>现在，我们可以解释中断过程中将IF置为0的原因了。将IF置0的原因就是，在进入中断处理程序后，禁止其他的可屏蔽中断。</p><p>常见的考点是，在考察安装新的键盘<code>int 9h</code>中断时，在处理地址时要先用<code>cli</code>关闭相应可屏蔽中断，在地址更改完毕后再用<code>sti</code>恢复响应。这是为了防止在设置<code>int 9h</code>中断例程地址时发生键盘中断，导致CPU转去一个错误的地址执行。</p><h5 id="不可屏蔽中断"><a class="markdownIt-Anchor" href="#不可屏蔽中断"></a> 不可屏蔽中断</h5><p>不可屏蔽中断是 CPU 必须响应的外中断。当 CPU 检测到不可屏蔽中断信息时，则在执行完当前指令后，立即响应，引发中断过程。比如电脑掉电就是一个不可屏蔽中断。</p><p>对于 8086CPU，不可屏蔽中断的中断类型码固定为 2，所以中断过程中，不需要取中断类型码。则不可屏蔽中断的中断过程为：</p><ol><li><code>pushf</code>，IF=0，TF=0</li><li><code>push CS</code>，<code>push IP</code></li><li>IP = 4 * 2 = 8，CS = 4 * 2 + 2 = 0AH</li></ol><p>我们主要讨论可屏蔽中断，不可屏蔽中断仅做了解就好。</p><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><p>因为是理论课总结，考虑到有同学没有选修实验课，所以这里减少了有关实验部分的知识点。</p><p>关于直接定址表和使用BIOS进行键盘输入与磁盘读写的内容，虽然在实验部分比较重要，但是在理论上考察却很容易理解或者不会考察，所以这里没有总结。</p><p>那么，本总结就到此为止啦，祝大家汇编考试分数++</p><ul><li>将小写字母的ASCII码减去20H可以得到对应的大写字母ASCII码，在处理大小写转换时很常用。</li></ul><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/106476729_p0.jpg" alt="106476729_p0" /></p>]]></content>
    
    
    <summary type="html">为备考而制作的知识点汇总，方便考生快速而准确的浏览到汇编语言中的重点！</summary>
    
    
    
    <category term="课堂随笔" scheme="http://example.com/categories/%E8%AF%BE%E5%A0%82%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="汇编语言" scheme="http://example.com/tags/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
    
    <category term="8086" scheme="http://example.com/tags/8086/"/>
    
    <category term="期末考试" scheme="http://example.com/tags/%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>算法笔记之遍历搜索</title>
    <link href="http://example.com/posts/39d66e106197/"/>
    <id>http://example.com/posts/39d66e106197/</id>
    <published>2024-06-09T11:47:39.000Z</published>
    <updated>2024-06-09T11:47:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要总结一下笔者学习的两种算法：回溯法和分支限界法。这两种算法其实在OI界中很少用到，因为简单粗暴，本质上就是暴力+剪枝。两者都是暴力搜索的一种方法，只不过分别对应二叉树遍历中的DFS和BFS思想。为什么会联系到二叉树呢？<strong>因为一个可以用回溯法或分支限界法解决的问题，实际上就是一个决策树的遍历过程。</strong></p><p>那么我们逐一详细介绍一下两种算法。</p><h1 id="回溯法"><a class="markdownIt-Anchor" href="#回溯法"></a> 回溯法</h1><p>前文提到，解决回溯问题，实际上就是一个<strong>决策树</strong>的遍历过程。</p><blockquote><p>Q：什么是决策树？</p><p>A：决策树（Decision Tree）是一种常用的数据结构，也是一种常见的机器学习模型。在这个上下文中，我们可以将决策树理解为一个图，其中每个节点代表一个决策，每个边代表基于该决策的结果。根节点（root）代表初始状态，叶节点（leaf）代表决策结果。</p><p>在回溯法中，决策树被用来枚举所有可能的解决方案。每个节点代表一个部分解决方案，每个边代表一个选择，从根节点到叶节点的路径代表一个完整的解决方案。回溯法通过深度优先搜索（DFS）策略，进行决策树的遍历，寻找所有可能的解决方案。</p><p>例如，假设我们正在解决一个简单的迷宫问题。我们可以将每个位置视为一个决策（向上、向下、向左或向右移动），并将整个迷宫视为一个决策树。然后，我们可以使用回溯法来遍历这个决策树，找到从入口到出口的路径。</p></blockquote><p>那么我们只需要搞懂三个问题，就能把握住问题的核心：</p><ol><li>路径：就是已经做出的选择</li><li>选择列表：就是你在当前节点可以做出的选择</li><li>结束条件：就是你到达决策树底层，无法再继续做选择的条件。（也可以是一些额外的约束条件，用于剪枝减少选择提高算法效率）</li></ol><p>代码方面，回溯问题的伪代码框架大致如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result = []</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">backtrack</span>(<span class="params">路径, 选择列表</span>):</span><br><span class="line">    <span class="keyword">if</span> 满足结束条件:</span><br><span class="line">        result.add(路径)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> 选择 <span class="keyword">in</span> 选择列表:</span><br><span class="line">    <span class="comment"># 做选择</span></span><br><span class="line">    将该选择从选择列表移除</span><br><span class="line">    路径.add(选择)</span><br><span class="line">    backtrack(路径, 选择列表)</span><br><span class="line">    <span class="comment"># 撤销选择</span></span><br><span class="line">    路径.remove(选择)</span><br><span class="line">    将该选择再加入选择列表</span><br></pre></td></tr></table></figure><p>回溯算法代码的核心，就是一个for循环中的递归。<strong>首先检查结束条件，决定是否退出；如果没有退出，就在递归调用之前，「做选择」；在递归调用之后「撤销选择」</strong>。就是这么简单。</p><p>接下来用两个问题来理解回溯法：全排列和N皇后问题。</p><h2 id="全排列"><a class="markdownIt-Anchor" href="#全排列"></a> 全排列</h2><blockquote><p><a href="https://leetcode.cn/problems/permutations/description/">46. 全排列 - 力扣（LeetCode）</a></p><p>给定一个不含重复数字的数组 <code>nums</code> ，返回其 <em>所有可能的全排列</em> 。你可以 <strong>按任意顺序</strong> 返回答案。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [1,2,3]</span><br><span class="line">输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</span><br></pre></td></tr></table></figure></blockquote><p>我们抛开算法来看，自己想想怎么对三个数进行全排列：首先固定1不变，排列2,3和3,2；然后固定2为第一个元素，排列1,3和3,1；最后固定3为第一个元素，排列1,2和2,1。</p><p>这种穷举的思想，就是一个决策树的过程。</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/v2-9732f159a7aab4bcb8f335feb9af086f_r.jpg" alt="img" /></p><p>你可以把<em>选择列表</em>与<em>属性</em>视为节点的两个属性，每个节点都储存着你做出这个选择时的情况。定义的<code>backtrack</code>函数更像是一个指针，在决策树上用<code>DFS</code>的遍历方式游走，同时要不断的正确维护每个节点的属性。当我们走到决策树的底层时，我们走过的<code>路径</code>就是一个全排列。</p><h3 id="为什么要撤销选择"><a class="markdownIt-Anchor" href="#为什么要撤销选择"></a> 为什么要撤销选择？</h3><p>正如我们前文提到的，要在决策树游走，需要我们正确的维护每一个决策节点的属性。</p><p>每当我们做出一个决策，我们就做出了一个选择：也就是改变了<strong>路径</strong>。那么，当我们走到这个选择的决策树底层，回到该节点时，需要恢复原路径信息，这样我们才能在不受干扰的条件下做出另一个选择。</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/v2-5db74cc959cbe4ad136f41e638653e33_b.jpg" alt="img" /></p><p>那我们可以不撤销选择吗？<strong>也可以。</strong></p><p>我们之所以要撤销选择，是因为我们更改了节点的信息。但如果我们每次做选择时都生成一个节点的副本，在这上面进行的改变不会影响到原有节点，此时就不需要进行选择撤回操作。但是这么做需要给遍历到的每个节点都创建一个副本，带来的空间开销很大，不利于函数的性能。</p><p>那么用回溯法解决问题的思路就很显而易见了：首先我们做出选择，然后进入到下一层决策树继续选择；如果track列表中出现了重复的数字，说明该数字已经被选择过，丢弃该选择；如果最后路径列表的长度等于全排列的长度，说明排列已完成，返回路径结束递归。</p><p>代码如下：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 全排列</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">permute</span><span class="params">(nums []<span class="type">int</span>)</span></span> [][]<span class="type">int</span> &#123;</span><br><span class="line">res := <span class="built_in">make</span>([][]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">track := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">var</span> backtrack <span class="function"><span class="keyword">func</span><span class="params">(nums []<span class="type">int</span>, track []<span class="type">int</span>)</span></span></span><br><span class="line">backtrack = <span class="function"><span class="keyword">func</span><span class="params">(nums []<span class="type">int</span>, track []<span class="type">int</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">//结束条件 路径和初始的选择列表长度相同，说明已经全部排列完成</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(track) == <span class="built_in">len</span>(nums) &#123;</span><br><span class="line">res = <span class="built_in">append</span>(res, <span class="built_in">append</span>([]<span class="type">int</span>&#123;&#125;, track...))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(nums); i++ &#123;</span><br><span class="line"><span class="comment">//排除不合法的选择</span></span><br><span class="line"><span class="keyword">if</span> contains(track, nums[i]) &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//做选择</span></span><br><span class="line">track = <span class="built_in">append</span>(track, nums[i])</span><br><span class="line"><span class="comment">//进入下一层决策树</span></span><br><span class="line">backtrack(nums, track)</span><br><span class="line"><span class="comment">//取消选择</span></span><br><span class="line">track = track[:<span class="built_in">len</span>(track)<span class="number">-1</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">backtrack(nums, track)</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">contains</span><span class="params">(slice []<span class="type">int</span>, item <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">    <span class="comment">//检查切片中是否包含指定的元素</span></span><br><span class="line"><span class="keyword">for</span> _, a := <span class="keyword">range</span> slice &#123;</span><br><span class="line"><span class="keyword">if</span> a == item &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>必须说明的是，不管怎么优化，都符合<a href="https://www.zhihu.com/search?q=%E5%9B%9E%E6%BA%AF%E6%A1%86%E6%9E%B6&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A%2293530380%22%7D">回溯框架</a>，而且时间复杂度都不可能低于 O(N!)，因为穷举整棵决策树是无法避免的。<strong>这也是回溯算法的一个特点，不像动态规划存在重叠子问题可以优化，回溯算法就是纯暴力穷举，复杂度一般都很高</strong>。</p><h2 id="n皇后"><a class="markdownIt-Anchor" href="#n皇后"></a> N皇后</h2><blockquote><p><a href="https://leetcode.cn/problems/n-queens/description/">51. N 皇后 - 力扣（LeetCode）</a></p><p>按照国际象棋的规则，皇后可以攻击与之处在同一行或同一列或同一斜线上的棋子。</p><p><strong>n 皇后问题</strong> 研究的是如何将 <code>n</code> 个皇后放置在 <code>n×n</code> 的棋盘上，并且使皇后彼此之间不能相互攻击。</p><p>给你一个整数 <code>n</code> ，返回所有不同的 <strong>n 皇后问题</strong> 的解决方案。</p><p>每一种解法包含一个不同的 <strong>n 皇后问题</strong> 的棋子放置方案，该方案中 <code>'Q'</code> 和 <code>'.'</code> 分别代表了皇后和空位。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：n = 4</span><br><span class="line">输出：[[&quot;.Q..&quot;,&quot;...Q&quot;,&quot;Q...&quot;,&quot;..Q.&quot;],[&quot;..Q.&quot;,&quot;Q...&quot;,&quot;...Q&quot;,&quot;.Q..&quot;]]</span><br></pre></td></tr></table></figure></blockquote><p>这个问题本质上跟全排列问题差不多，决策树的每一层表示棋盘上的每一行；每个节点可以做出的选择是，在该行的任意一列放置一个皇后。</p><p>套用框架可得代码如下：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solveNQueens</span><span class="params">(n <span class="type">int</span>)</span></span> [][]<span class="type">string</span> &#123;</span><br><span class="line"><span class="keyword">var</span> res [][]<span class="type">string</span></span><br><span class="line"><span class="keyword">var</span> board [][]<span class="type">byte</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">board = <span class="built_in">append</span>(board, <span class="built_in">make</span>([]<span class="type">byte</span>, n))</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; n; j++ &#123;</span><br><span class="line">board[i][j] = <span class="string">&#x27;.&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="comment">//初始化棋盘为全&#x27;.&#x27;，即空</span></span><br><span class="line"><span class="keyword">var</span> backtrack <span class="function"><span class="keyword">func</span><span class="params">(row <span class="type">int</span>)</span></span> </span><br><span class="line">backtrack = <span class="function"><span class="keyword">func</span><span class="params">(row <span class="type">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> row == n &#123;<span class="comment">//结束条件</span></span><br><span class="line"><span class="keyword">var</span> tmp []<span class="type">string</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">tmp = <span class="built_in">append</span>(tmp, <span class="type">string</span>(board[i]))</span><br><span class="line">&#125;</span><br><span class="line">res = <span class="built_in">append</span>(res, tmp)<span class="comment">//找到一个解，将解加入结果集</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> col := <span class="number">0</span>; col &lt; n; col++ &#123;</span><br><span class="line"><span class="keyword">if</span> !isValid(board, row, col) &#123;<span class="comment">//剪枝</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">board[row][col] = <span class="string">&#x27;Q&#x27;</span><span class="comment">//进行选择</span></span><br><span class="line">backtrack(row + <span class="number">1</span>)<span class="comment">//递归</span></span><br><span class="line">board[row][col] = <span class="string">&#x27;.&#x27;</span><span class="comment">//撤销选择</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">backtrack(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isValid</span><span class="params">(board [][]<span class="type">byte</span>, row, col <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">n := <span class="built_in">len</span>(board)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line"><span class="keyword">if</span> board[i][col] == <span class="string">&#x27;Q&#x27;</span> &#123;<span class="comment">//如果同一列有皇后</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, j := row<span class="number">-1</span>, col<span class="number">-1</span>; i &gt;= <span class="number">0</span> &amp;&amp; j &gt;= <span class="number">0</span>; i, j = i<span class="number">-1</span>, j<span class="number">-1</span> &#123;</span><br><span class="line"><span class="keyword">if</span> board[i][j] == <span class="string">&#x27;Q&#x27;</span> &#123;<span class="comment">//如果左上角有皇后</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, j := row<span class="number">-1</span>, col+<span class="number">1</span>; i &gt;= <span class="number">0</span> &amp;&amp; j &lt; n; i, j = i<span class="number">-1</span>, j+<span class="number">1</span> &#123;</span><br><span class="line"><span class="keyword">if</span> board[i][j] == <span class="string">&#x27;Q&#x27;</span> &#123;<span class="comment">//如果右上角有皇后</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>函数 <code>backtrack</code> 依然像个在决策树上游走的指针，通过 <code>row</code> 和 <code>col</code> 就可以表示函数遍历到的位置，通过 <code>isValid</code> 函数可以将不符合条件的情况剪枝。</p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>回溯算法就是个多叉树的遍历问题，关键就是在前序遍历和后序遍历的位置做一些操作。<strong>写 <code>backtrack</code> 函数时，需要维护走过的「路径」和当前可以做的「选择列表」，当触发「结束条件」时，将「路径」记入结果集</strong>。</p><blockquote><p>其实想想看，回溯算法和动态规划是不是有点像呢？我们在<a href="https://www.zhihu.com/search?q=%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A%2293530380%22%7D">动态规划</a>系列文章中多次强调，动态规划的三个需要明确的点就是「状态」「选择」和「base case」，是不是就对应着走过的「路径」，当前的「选择列表」和「结束条件」？</p><p>某种程度上说，动态规划的暴力求解阶段就是回溯算法。只是有的问题具有重叠子问题性质，可以用 dp table 或者备忘录优化，将<a href="https://www.zhihu.com/search?q=%E9%80%92%E5%BD%92%E6%A0%91&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A%2293530380%22%7D">递归树</a>大幅剪枝，这就变成了动态规划。而今天的两个问题，都没有重叠子问题，也就是<a href="https://www.zhihu.com/search?q=%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A%2293530380%22%7D">回溯算法</a>问题了，复杂度非常高是不可避免的。</p></blockquote><h2 id="拓展部分"><a class="markdownIt-Anchor" href="#拓展部分"></a> 拓展部分</h2><p>以下内容来源于课件，偏理论，猜测整理自《算法导论》。</p><p>主要介绍解空间树的子集树和排列树的概念。</p><blockquote><p><strong>回溯法是一个既带有系统性又带有跳跃性的搜索算法；</strong></p><p>它在<strong>包含问题的所有解的解空间树</strong>中，按照深度优先的策略，从根结点出发搜索解空间树。—— 系统性</p><p>算法搜索至解空间树的任一结点时，判断该结点为根的子树是否包含问题的解，如果肯定不包含，则跳过以该结点为根的子树的搜索，逐层向其祖先结点回溯。否则，进入该子树，继续深度优先的策略进行搜索。——跳跃性</p><p>这种以深度优先的方式系统地搜索问题的解的算法称为回溯法，<br />它适用于解一些组合数较大的问题。许多复杂的、规模较大的问题都可以使用回溯法，有“通用解题方法”的美称。</p></blockquote><p>其实我觉得就是一种更加科学、附带剪枝的暴力搜索法。</p><p>要了解子集树和排列树，我们先对问题的解空间做一个定义。</p><blockquote><p>问题的解向量：回溯法希望一个问题的解能够表示成一个n元式</p><p>(x1, x2, …, xn) 的形式。</p><p>显约束：对分量xi的取值限定。</p><p>隐约束：为满足问题的解而对不同分量之间施加的约束。</p><p>解空间：对于问题的一个实例，解向量满足显式约束条件的所有多元组， 构成了该实例的一个解空间。</p></blockquote><p>注意：同一个问题可以有多种表示，有些表示方法更简单，所需表示的状态空间更小（存储量少，搜索方法简单）。</p><p>关于搜索空间主要有三种表示方法：</p><ul><li>表序表示：搜索对象通过线性表数据结构来表示</li><li>显示图表示：搜索对象在搜索开始前就通过图（树）的数据结构来表示</li><li>隐式图表示：除了初始节点，其他的节点在搜索过程中全部动态生成。因为搜索空间可能很大，难以全部储存。</li></ul><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240606162410585.png" alt="image-20240606162410585" /></p><p>对解空间的遍历方法可以参照二叉树的遍历方法，即前中后序遍历。一般我们使用中序遍历，因为这样就可以很方便的在搜索完左子树后撤销选择再进入右子树。</p><p>有了以上概念，我们就可以根据解空间树对回溯法的操作进行更加详细的定义：</p><ol><li>首先针对问题定义问题的解空间</li><li>接着确定易于搜索的解空间结构（子集树还是排列树）</li><li>以深度优先搜索的方式遍历解空间树，并在搜索过程中用剪枝函数避免无效搜索。<ul><li>常常用剪枝函数在扩展节点减去不满足约束的子树</li><li>减去得不到最优解的子树</li></ul></li></ol><p>两类常见的解空间树定义如下：</p><blockquote><p>子集树:当所给的问题是从几个元素的集合S中找出满足某种性质的子集时，相应的解空间树称为子集树。子集树通常有2<sup>n</sup>个叶子结点，其总结点个数为2<sup>n+1</sup>-1，遍历子集树时间为Ω(2<sup>n</sup>)。如0-1背包问题</p><p>排列树：当所给问题是确定n个元素满足某种性质的排列时，相应的解空间树称为排列树。排列树通常有n!个叶子结点，因此，遍历排列树需要Ω(n!)的计算时间。如TSP问题 (Traveling Salesman Problem，推销员问题) ，叶结点数为n!，遍历时间为Ω(n!)。</p></blockquote><h3 id="子集树"><a class="markdownIt-Anchor" href="#子集树"></a> 子集树</h3><p>假设现在有一列数a[0],a[1], …a[n-1]，如果一个问题的解的长度不是固定的，并且解和元素顺序无关，即可以从中选择0个或多个，那么解空间的个数将是指数级别的，为2^n,可以用下面的子集树来表示所有的解(假设这里n=4)</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240606213615107.png" alt="image-20240606213615107" /></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">void backtrack(int t)&#123; // 表示访问到第t层，t从0开始</span><br><span class="line">if (t == n) // 如上图（PIC、子集树）n=4时就可以输出结果</span><br><span class="line">output(x);</span><br><span class="line">else</span><br><span class="line">for (int i = 0; i&lt;=l; i++)&#123; </span><br><span class="line">//表示选或者不选a[t]，l代表选项的范围，可能是0到某个上限</span><br><span class="line">x[t] = i;</span><br><span class="line">if (constraint(t) &amp;&amp; bound(t))</span><br><span class="line">backtrack(t + 1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="排列树"><a class="markdownIt-Anchor" href="#排列树"></a> 排列树</h3><p>如果解空间是由n个元素的排列形成，即n个元素的每一个排列都是解空间中的一个元素，那么，最后解空间的组织形式是排列树。</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240606213643074.png" alt="image-20240606213643074" /></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">void backtrack(int t)&#123; //t代表当前层数，从0开始，n代表总层数</span><br><span class="line">if (t == n)  // t==n时表示已经生成了一组全排列，输出结果</span><br><span class="line">output(x); // x是储存当前排列结果的数组</span><br><span class="line">else</span><br><span class="line">for (int i = t; i&lt;=n; i++)&#123; </span><br><span class="line">swap(x[t],x[i]);</span><br><span class="line">if (constraint(t) &amp;&amp; bound(t))</span><br><span class="line">&#123;</span><br><span class="line">backtrack(t + 1);</span><br><span class="line">swap(x[t],x[i]); // 每次递归后恢复原状</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//这里的n表示层数！</span><br></pre></td></tr></table></figure><h3 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h3><p>下面给出用回溯法求解01背包问题的代码，出自我的课程实验报告：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//回溯法解决01背包问题</span></span><br><span class="line"><span class="comment">//结束条件：背包装满或者所有物品都放入背包</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Item</span>&#123;</span><br><span class="line">    <span class="type">int</span> weight;</span><br><span class="line">    <span class="type">int</span> value;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtrack</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> weight,<span class="type">int</span> value,<span class="type">const</span> vector&lt;Item&gt;&amp; items,<span class="type">int</span> capacity,<span class="type">int</span>&amp; maxValue)</span></span>&#123;</span><br><span class="line">    <span class="comment">//结束条件</span></span><br><span class="line">    <span class="keyword">if</span>(weight==capacity||i==items.<span class="built_in">size</span>())&#123;</span><br><span class="line">        maxValue=<span class="built_in">max</span>(value,maxValue);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不选择物品</span></span><br><span class="line">    <span class="built_in">backtrack</span>(i+<span class="number">1</span>,weight,value,items,capacity,maxValue);</span><br><span class="line">    <span class="comment">//选择物品</span></span><br><span class="line">    <span class="keyword">if</span>(weight+items[i].weight&lt;=capacity)&#123;</span><br><span class="line">        <span class="built_in">backtrack</span>(i+<span class="number">1</span>,weight+items[i].weight,value+items[i].value,items,capacity,maxValue);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> capacity,count,maxValue;</span><br><span class="line">    vector&lt;Item&gt;Items;</span><br><span class="line">    maxValue=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//第一行输入背包总容量和物品数量</span></span><br><span class="line">    cin&gt;&gt;capacity&gt;&gt;count;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; count; ++i) &#123;</span><br><span class="line">        <span class="keyword">struct</span> <span class="title class_">Item</span> Item;</span><br><span class="line">        cin&gt;&gt;Item.weight&gt;&gt;Item.value;</span><br><span class="line">        Items.<span class="built_in">emplace_back</span>(Item);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">backtrack</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,Items,capacity,maxValue);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;The max value is &quot;</span>&lt;&lt;maxValue&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看出设计理念参照的是解空间树的子集树，因为01背包问题是一个组合问题，与顺序无关，所以不需要撤销选择而直接遍历所有的解就行了。</p><h1 id="分支限界法"><a class="markdownIt-Anchor" href="#分支限界法"></a> 分支限界法</h1><p>回溯算法的思想其实和深度优先搜索也就是<code>DFS</code>有共通之处，一个要走到决策树底层才退出，一个是根据深度遍历，都是“打破南墙才回头”。这无疑是一种经典的暴力搜索的方式，但是这种方式具有盲目性，接下来我们来介绍基于<code>BFS</code>宽度优先搜索的分支限界法。</p><blockquote><p>分支限界法常以广度优先或以最小耗费(最大效益)优先的方式搜索问题的解空间树。</p><p>i) 对已处理的各结点根据<strong>限界函数</strong>估算目标函数的可能取值，</p><p>ii) 从中选出目标函数取得极大(极小) 值的结点优先进行广度优先搜索,</p><p>iii) 不断地调整搜索方向，尽快找到解，裁剪那些不能得到最优解的子树以提高搜索效率。</p></blockquote><p>其中的限界函数是针对具体问题的目标函数，比如对于01背包问题，可以预设限界函数为背包剩余空间的平均价值。</p><h2 id="求解步骤"><a class="markdownIt-Anchor" href="#求解步骤"></a> 求解步骤</h2><ol><li>定义解空间/对解编码</li><li>确定解空间的树结构</li><li>按照BFS的方式对解空间树进行遍历：<ol><li>每个活节点只有一次方式变为扩展节点</li><li>由扩展节点生成<strong>一步可达</strong>的新节点，即宽度搜索</li><li>在新节点中，删除不可能导出最优解的节点，这点可以利用限界函数辅助判断</li><li>将剩余的节点加入活动表（队列）中</li><li>从活动表中选择节点再进行扩展（分支）</li><li>直到活动表（队列）为空</li></ol></li></ol><p>在选择队列时有两种选择，对应两种分支限界法：</p><ol><li>队列式FIFO分支限界法：节点进入与取出顺序与普通队列相同</li><li>优先队列（代价最小或者效益最大）分支限界法：每个节点都可以借助限界函数来预估一个价值，以此决定节点处理的优先级，一般要用到堆来实现优先队列。</li></ol><h2 id="例题-2"><a class="markdownIt-Anchor" href="#例题-2"></a> 例题</h2><p>这里给出对01背包应用分支限界法的解法，包括FIFO式和优先队列式。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//分支限界法 FIFO普通队列管理 解决01背包问题</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Node <span class="keyword">struct</span> &#123;</span><br><span class="line">level    <span class="type">int</span>     <span class="comment">// 表示当前决策层的层数</span></span><br><span class="line">weight   <span class="type">float64</span> <span class="comment">// 表示目前为止所选择物品的重量总和</span></span><br><span class="line">value    <span class="type">float64</span> <span class="comment">// 表示目前为止所选择物品的价值总和</span></span><br><span class="line">bound    <span class="type">float64</span> <span class="comment">// 表示此节点的价值上界</span></span><br><span class="line">included <span class="type">bool</span>    <span class="comment">// 表示该节点所对应的对象是否被放到背包中</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bound</span><span class="params">(node Node, n <span class="type">int</span>, W <span class="type">float64</span>, weights []<span class="type">float64</span>, values []<span class="type">float64</span>)</span></span> <span class="type">float64</span> &#123; <span class="comment">// 计算节点的价值上界</span></span><br><span class="line"><span class="keyword">if</span> node.weight &gt;= W &#123; <span class="comment">// 如果当前节点的重量已经超过了背包的容量，则无需继续探索，直接剪枝</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">bound := node.value      <span class="comment">// 计算当前节点的价值上界</span></span><br><span class="line">j := node.level + <span class="number">1</span>      <span class="comment">// 初始化下一个物品的索引</span></span><br><span class="line">totWeight := node.weight <span class="comment">// 计算当前节点的重量总和</span></span><br><span class="line"><span class="keyword">for</span> ; j &lt; n; j++ &#123;       <span class="comment">// 遍历剩余物品</span></span><br><span class="line"><span class="keyword">if</span> totWeight+weights[j] &lt;= W &#123; <span class="comment">// 如果当前节点的重量加上下一个物品的重量小于等于背包的容量</span></span><br><span class="line">bound += values[j]      <span class="comment">// 则加上下一个物品的价值</span></span><br><span class="line">totWeight += weights[j] <span class="comment">// 并更新当前节点的重量总和</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">// 如果当前节点的重量加上下一个物品的重量大于背包的容量</span></span><br><span class="line"><span class="keyword">break</span> <span class="comment">// 则停止遍历</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> j &lt; n &#123;</span><br><span class="line">bound += (W - totWeight) * (values[j] / weights[j]) <span class="comment">// 计算剩余物品的价值上界</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bound</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">knapsack01</span><span class="params">(n <span class="type">int</span>, W <span class="type">float64</span>, weights []<span class="type">float64</span>, values []<span class="type">float64</span>)</span></span> <span class="type">float64</span> &#123;</span><br><span class="line"><span class="keyword">var</span> maxValue <span class="type">float64</span></span><br><span class="line"><span class="keyword">var</span> queue []Node</span><br><span class="line"><span class="keyword">var</span> initNode Node</span><br><span class="line">initNode.level = <span class="number">-1</span></span><br><span class="line">initNode.weight = <span class="number">0</span></span><br><span class="line">initNode.value = <span class="number">0</span></span><br><span class="line">queue = <span class="built_in">append</span>(queue, initNode) <span class="comment">// 加入初始节点到队列中</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">len</span>(queue) &gt; <span class="number">0</span> &#123;</span><br><span class="line">node := queue[<span class="number">0</span>]</span><br><span class="line">queue = queue[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> node.level == <span class="number">-1</span> &#123;</span><br><span class="line">node.bound = bound(node, n, W, weights, values) <span class="comment">// 计算初始节点的价值上界</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> node.bound &gt; maxValue &#123; <span class="comment">// 如果当前节点的价值上界大于最大值</span></span><br><span class="line">leftNode := Node&#123; <span class="comment">// 左节点代表选择当前物品</span></span><br><span class="line">level:  node.level + <span class="number">1</span>,</span><br><span class="line">weight: node.weight + weights[node.level+<span class="number">1</span>], <span class="comment">// 加上当前物品的重量</span></span><br><span class="line">value:  node.value + values[node.level+<span class="number">1</span>]&#125;</span><br><span class="line">leftNode.bound = bound(leftNode, n, W, weights, values)</span><br><span class="line"><span class="keyword">if</span> leftNode.weight &lt;= W &amp;&amp; leftNode.value &gt; maxValue &#123;</span><br><span class="line">maxValue = leftNode.value</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> leftNode.bound &gt; maxValue &#123; <span class="comment">// 如果左节点的价值上界大于最大值</span></span><br><span class="line">queue = <span class="built_in">append</span>(queue, leftNode) <span class="comment">// 加入左节点到队列中</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rightNode := Node&#123; <span class="comment">// 右节点代表不选择当前物品</span></span><br><span class="line">level:  node.level + <span class="number">1</span>,</span><br><span class="line">weight: node.weight,</span><br><span class="line">value:  node.value&#125;</span><br><span class="line">rightNode.bound = bound(rightNode, n, W, weights, values) <span class="comment">// 计算右节点的价值上界</span></span><br><span class="line"><span class="keyword">if</span> rightNode.bound &gt; maxValue &#123;                           <span class="comment">// 如果右节点的价值上界大于最大值，事实上永远都可以进入右节点</span></span><br><span class="line">queue = <span class="built_in">append</span>(queue, rightNode) <span class="comment">// 加入右节点到队列中</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> maxValue</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//输入物品数量</span></span><br><span class="line"><span class="keyword">var</span> n <span class="type">int</span></span><br><span class="line">fmt.Scan(&amp;n)</span><br><span class="line"><span class="comment">//输入背包容量</span></span><br><span class="line"><span class="keyword">var</span> W <span class="type">int</span></span><br><span class="line">fmt.Scan(&amp;W)</span><br><span class="line"><span class="comment">//输入物品重量</span></span><br><span class="line"><span class="keyword">var</span> weights = <span class="built_in">make</span>([]<span class="type">float64</span>, n)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">fmt.Scan(&amp;weights[i])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输入物品价值</span></span><br><span class="line"><span class="keyword">var</span> values = <span class="built_in">make</span>([]<span class="type">float64</span>, n)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">fmt.Scan(&amp;values[i])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">result := knapsack01(n, <span class="type">float64</span>(W), weights, values)</span><br><span class="line">fmt.Println(<span class="string">&quot;Maximum value that can be obtained is:&quot;</span>, result)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//分支限界法 优先队列管理 解决01背包问题</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;container/heap&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Node <span class="keyword">struct</span> &#123;</span><br><span class="line">level    <span class="type">int</span>     <span class="comment">// 表示当前决策层的层数</span></span><br><span class="line">weight   <span class="type">float64</span> <span class="comment">// 表示目前为止所选择物品的重量总和</span></span><br><span class="line">value    <span class="type">float64</span> <span class="comment">// 表示目前为止所选择物品的价值总和</span></span><br><span class="line">bound    <span class="type">float64</span> <span class="comment">// 表示此节点的价值上界</span></span><br><span class="line">included <span class="type">bool</span>    <span class="comment">// 表示该节点所对应的对象是否被放到背包中</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// PriorityQueue 优先队列实现最大堆功能</span></span><br><span class="line"><span class="keyword">type</span> PriorityQueue []Node</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(pq PriorityQueue)</span></span> Len() <span class="type">int</span> &#123; <span class="keyword">return</span> <span class="built_in">len</span>(pq) &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(pq PriorityQueue)</span></span> Less(i, j <span class="type">int</span>) <span class="type">bool</span> &#123;</span><br><span class="line"><span class="keyword">return</span> pq[i].bound &gt; pq[j].bound</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(pq PriorityQueue)</span></span> Swap(i, j <span class="type">int</span>) &#123;</span><br><span class="line">pq[i], pq[j] = pq[j], pq[i]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(pq *PriorityQueue)</span></span> Push(x <span class="keyword">interface</span>&#123;&#125;) &#123;</span><br><span class="line">item := x.(Node)</span><br><span class="line">*pq = <span class="built_in">append</span>(*pq, item)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(pq *PriorityQueue)</span></span> Pop() <span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">old := *pq</span><br><span class="line">n := <span class="built_in">len</span>(old)</span><br><span class="line">item := old[n<span class="number">-1</span>]</span><br><span class="line">*pq = old[<span class="number">0</span> : n<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">return</span> item</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bound</span><span class="params">(node Node, n <span class="type">int</span>, W <span class="type">float64</span>, weights []<span class="type">float64</span>, values []<span class="type">float64</span>)</span></span> <span class="type">float64</span> &#123; <span class="comment">// 计算节点的价值上界</span></span><br><span class="line"><span class="keyword">if</span> node.weight &gt;= W &#123; <span class="comment">// 如果当前节点的重量已经超过了背包的容量，则无需继续探索，直接剪枝</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">bound := node.value      <span class="comment">// 计算当前节点的价值上界</span></span><br><span class="line">j := node.level + <span class="number">1</span>      <span class="comment">// 初始化下一个物品的索引</span></span><br><span class="line">totWeight := node.weight <span class="comment">// 计算当前节点的重量总和</span></span><br><span class="line"><span class="keyword">for</span> ; j &lt; n; j++ &#123;       <span class="comment">// 遍历剩余物品</span></span><br><span class="line"><span class="keyword">if</span> totWeight+weights[j] &lt;= W &#123; <span class="comment">// 如果当前节点的重量加上下一个物品的重量小于等于背包的容量</span></span><br><span class="line">bound += values[j]      <span class="comment">// 则加上下一个物品的价值</span></span><br><span class="line">totWeight += weights[j] <span class="comment">// 并更新当前节点的重量总和</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">// 如果当前节点的重量加上下一个物品的重量大于背包的容量</span></span><br><span class="line"><span class="keyword">break</span> <span class="comment">// 则停止遍历</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> j &lt; n &#123;</span><br><span class="line">bound += (W - totWeight) * (values[j] / weights[j]) <span class="comment">// 计算剩余物品的价值上界</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bound</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">knapsack01</span><span class="params">(n <span class="type">int</span>, W <span class="type">float64</span>, weights []<span class="type">float64</span>, values []<span class="type">float64</span>)</span></span> <span class="type">float64</span> &#123;</span><br><span class="line"><span class="keyword">var</span> maxValue <span class="type">float64</span></span><br><span class="line"><span class="keyword">var</span> queue = <span class="built_in">make</span>(PriorityQueue, <span class="number">0</span>)</span><br><span class="line">heap.Init(&amp;queue)</span><br><span class="line"><span class="keyword">var</span> initNode Node</span><br><span class="line">initNode.level = <span class="number">-1</span></span><br><span class="line">initNode.weight = <span class="number">0</span></span><br><span class="line">initNode.value = <span class="number">0</span></span><br><span class="line">queue.Push(initNode)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> queue.Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line">node := heap.Pop(&amp;queue).(Node)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> node.level == <span class="number">-1</span> &#123;</span><br><span class="line">node.bound = bound(node, n, W, weights, values) <span class="comment">// 计算初始节点的价值上界</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> node.bound &gt; maxValue &#123; <span class="comment">// 如果当前节点的价值上界大于最大值</span></span><br><span class="line">leftNode := Node&#123; <span class="comment">// 左节点代表选择当前物品</span></span><br><span class="line">level:  node.level + <span class="number">1</span>,</span><br><span class="line">weight: node.weight + weights[node.level+<span class="number">1</span>], <span class="comment">// 加上当前物品的重量</span></span><br><span class="line">value:  node.value + values[node.level+<span class="number">1</span>]&#125;</span><br><span class="line">leftNode.bound = bound(leftNode, n, W, weights, values)</span><br><span class="line"><span class="keyword">if</span> leftNode.weight &lt;= W &amp;&amp; leftNode.value &gt; maxValue &#123;</span><br><span class="line">maxValue = leftNode.value</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> leftNode.bound &gt; maxValue &#123; <span class="comment">// 如果左节点的价值上界大于最大值</span></span><br><span class="line">heap.Push(&amp;queue, leftNode) <span class="comment">// 加入左节点到队列中</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rightNode := Node&#123; <span class="comment">// 右节点代表不选择当前物品</span></span><br><span class="line">level:  node.level + <span class="number">1</span>,</span><br><span class="line">weight: node.weight,</span><br><span class="line">value:  node.value&#125;</span><br><span class="line">rightNode.bound = bound(rightNode, n, W, weights, values) <span class="comment">// 计算右节点的价值上界</span></span><br><span class="line"><span class="keyword">if</span> rightNode.bound &gt; maxValue &#123;                           <span class="comment">// 如果右节点的价值上界大于最大值，事实上永远都可以进入右节点</span></span><br><span class="line">heap.Push(&amp;queue, rightNode) <span class="comment">// 加入右节点到队列中</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> maxValue</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//输入物品数量</span></span><br><span class="line"><span class="keyword">var</span> n <span class="type">int</span></span><br><span class="line">fmt.Scan(&amp;n)</span><br><span class="line"><span class="comment">//输入背包容量</span></span><br><span class="line"><span class="keyword">var</span> W <span class="type">int</span></span><br><span class="line">fmt.Scan(&amp;W)</span><br><span class="line"><span class="comment">//输入物品重量</span></span><br><span class="line"><span class="keyword">var</span> weights = <span class="built_in">make</span>([]<span class="type">float64</span>, n)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">fmt.Scan(&amp;weights[i])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输入物品价值</span></span><br><span class="line"><span class="keyword">var</span> values = <span class="built_in">make</span>([]<span class="type">float64</span>, n)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">fmt.Scan(&amp;values[i])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">result := knapsack01(n, <span class="type">float64</span>(W), weights, values)</span><br><span class="line">fmt.Println(<span class="string">&quot;Maximum value that can be obtained is:&quot;</span>, result)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不同于回溯法，我们在分支限界法一般都需要显示的指定树的数据结构，因为涉及到树的层次遍历（宽度优先搜索）。</p><p>这里的重点是限界函数的应用，值得仔细揣摩。</p><h1 id="参考文章"><a class="markdownIt-Anchor" href="#参考文章"></a> 参考文章</h1><p><a href="https://zhuanlan.zhihu.com/p/93530380">回溯算法套路详解 - 知乎 (zhihu.com)</a></p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/IMG_20240609_195030.jpg" alt="IMG_20240609_195030" /></p>]]></content>
    
    
    <summary type="html">简单的回顾了回溯法和分支限界法两种技巧性的搜索方法。</summary>
    
    
    
    <category term="算法笔记" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="回溯法" scheme="http://example.com/tags/%E5%9B%9E%E6%BA%AF%E6%B3%95/"/>
    
    <category term="分支限界法" scheme="http://example.com/tags/%E5%88%86%E6%94%AF%E9%99%90%E7%95%8C%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>浅谈非对称加密</title>
    <link href="http://example.com/posts/da529aaa87b3/"/>
    <id>http://example.com/posts/da529aaa87b3/</id>
    <published>2024-06-05T11:59:40.000Z</published>
    <updated>2024-06-05T11:59:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="浅谈非对称加密"><a class="markdownIt-Anchor" href="#浅谈非对称加密"></a> 浅谈非对称加密</h1><p>课程作业要求，简单的归纳关于Diffie-Hellman密钥交换技术、RSA加密以及椭圆曲线的一些基本知识点。</p><h2 id="对称加密与非对称加密"><a class="markdownIt-Anchor" href="#对称加密与非对称加密"></a> 对称加密与非对称加密</h2><p>密码学发展至今是有一个过程的，从最基本的隐写术开始，到古典密码，再到近现代密码。在过去人们主要研究的是对称加密，即在密码算法足够强大的基础上，通过对密钥的保密实现加密交流。比如DES、AES等密码都属于对称密码。</p><p>对称密码有如下特点：</p><p>优点：加解密处理速度快、保密度高。</p><p>缺点：</p><ul><li>如何安全的传输密钥到收信方是一个问题。</li><li>多人通信时密钥组合的数量会出现爆炸性膨胀。</li><li>双方必须统一密钥，如果收信人与发信人素不相识，就无法向对方发送加密信息</li><li>存在数字签名困难问题，即消息可能被伪造</li></ul><p>于是我们引入了非对称加密，非对称加密给密码学注入了新的活力，开辟出了一片富有探索价值的新区域。非对称加密即发信方与收信方不共享同一密钥，而是分别保存各自的私钥，用对方的公钥进行通信。</p><p>非对称加密有如下特点：</p><p>优点：</p><ul><li>网络中的每一个用户只需要保存自己的私钥，密钥少，便于管理</li><li>密钥分配简单，不需要秘密的通道和复杂的协议来传送密钥</li><li>可以实现数字签名</li></ul><p>缺点：加密、解密的速度相对较慢，同等安全强度下所要求的密钥位数多一些</p><p>一般来说，我们在密钥分发时采取非对称加密交换密钥，建立起加密通信通道后就采用对称加密进行通信。这样既解决了对称加密密钥分发的问题，又解决了非对称加密速度慢的问题。</p><p>非对称加密和对称加密的区别整理如下表：</p><table><thead><tr><th>分类</th><th>对称密码体制</th><th>非对称密码体制</th></tr></thead><tbody><tr><td>运行条件</td><td>加密和解密使用同一个密钥和同一个算法；发送方和接受方必须共享密钥和算法</td><td>用同一个算法进行加解密，但是密钥有一对，其中一个用于加密，一个用于解密；发送方和接受方每个使用一对相互匹配而彼此互异的密钥中的一个。</td></tr><tr><td>安全条件</td><td>密钥必须保密；仅根据密文解密明文是不可能或不现实的；已知算法和密文无法确定密钥</td><td>密钥对中的私钥必须保密；仅根据密文解密明文是不可能或不现实的；已知算法、密文和公钥无法确定私钥</td></tr><tr><td>保密方式</td><td>基于发送方和接受方共享的密钥</td><td>基于接收方个人的私钥</td></tr><tr><td>基本变换</td><td>面向符号（字符或位）的代替或换位</td><td>面向数字的数学函数变换</td></tr><tr><td>适用范围</td><td>消息的保密</td><td>用于短消息的保密（如对称加密中的密钥交换），或认证、数字签名等</td></tr></tbody></table><h2 id="diffie-hellman密钥交换"><a class="markdownIt-Anchor" href="#diffie-hellman密钥交换"></a> Diffie-Hellman密钥交换</h2><table><thead><tr><th></th><th>Alice</th><th></th><th></th><th>Bob</th><th></th></tr></thead><tbody><tr><td></td><td>秘密信息</td><td>公开信息</td><td></td><td>公开信息</td><td>秘密信息</td></tr><tr><td>A和B首先约定两个公开的整数p和a</td><td></td><td>p, a</td><td></td><td>p, a</td><td></td></tr><tr><td>A、B各自随机产生两个数X<sub>A</sub>、X<sub>B</sub>，作为自己的私钥</td><td>X<sub>A</sub></td><td></td><td></td><td></td><td>X<sub>B</sub></td></tr><tr><td>A、B各自计算自己的公钥Y<sub>A</sub>、Y<sub>B</sub></td><td>计算</td><td>Y<sub>A</sub></td><td></td><td>Y<sub>B</sub></td><td>计算</td></tr><tr><td></td><td>Y<sub>A</sub>=a^X<sub>A</sub> mod p</td><td></td><td></td><td></td><td>Y<sub>B</sub>=a^X<sub>B</sub> mod p</td></tr><tr><td>交换公钥Y<sub>A</sub>、Y<sub>B</sub></td><td></td><td>Y<sub>B</sub></td><td></td><td>Y<sub>A</sub></td><td></td></tr><tr><td>计算出加密用的密钥K</td><td>计算</td><td></td><td></td><td></td><td>计算</td></tr><tr><td></td><td>K=(Y<sub>B</sub>)^X<sub>A</sub> mod p</td><td></td><td></td><td></td><td>K=(Y<sub>A</sub>)^X<sub>B</sub>mod p</td></tr></tbody></table><p>也即：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>=</mo><msup><mrow><mo fence="true">(</mo><msub><mi>Y</mi><mi mathvariant="normal">B</mi></msub><mo fence="true">)</mo></mrow><msub><mi>X</mi><mi mathvariant="normal">A</mi></msub></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo>=</mo><msup><mrow><mo fence="true">(</mo><msup><mi>a</mi><msub><mi>X</mi><mi mathvariant="normal">B</mi></msub></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo fence="true">)</mo></mrow><msub><mi>X</mi><mi mathvariant="normal">A</mi></msub></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo>=</mo><msup><mrow><mo fence="true">(</mo><msup><mi>a</mi><msub><mi>X</mi><mi mathvariant="normal">B</mi></msub></msup><mo fence="true">)</mo></mrow><msub><mi>X</mi><mi mathvariant="normal">A</mi></msub></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo>=</mo><msup><mrow><mo fence="true">(</mo><msup><mi>a</mi><msub><mi>X</mi><mi mathvariant="normal">A</mi></msub></msup><mo fence="true">)</mo></mrow><msub><mi>X</mi><mi mathvariant="normal">B</mi></msub></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo>=</mo><msup><mrow><mo fence="true">(</mo><msub><mi>Y</mi><mi mathvariant="normal">A</mi></msub><mo fence="true">)</mo></mrow><msub><mi>X</mi><mi mathvariant="normal">B</mi></msub></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">K=\left(Y_{\mathrm{B}}\right)^{X_{\mathrm{A}}} \bmod p=\left(a^{X_{\mathrm{B}}} \bmod p\right)^{X_{\mathrm{A}}} \bmod p=\left(a^{X_{\mathrm{B}}}\right)^{X_{\mathrm{A}}} \bmod p=\left(a^{X_{\mathrm{A}}}\right)^{X_{\mathrm{B}}} \bmod p=\left(Y_{\mathrm{A}}\right)^{X_{\mathrm{B}}} \bmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.231231em;vertical-align:-0.25em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">B</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07847em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">A</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4312409999999998em;vertical-align:-0.35001em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07847em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">B</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0812309999999998em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07847em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">A</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4312409999999998em;vertical-align:-0.35001em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07847em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">B</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0812309999999998em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07847em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">A</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4312409999999998em;vertical-align:-0.35001em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07847em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">A</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0812309999999998em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07847em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">B</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.231231em;vertical-align:-0.25em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">A</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07847em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">B</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span></p><p>用此算法可以安全的交换通信密钥，但是有可能遭受中间人攻击篡改Bob发送的信息。</p><h3 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h3><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240605203507296.png" alt="image-20240605203507296" /></p><h2 id="rsa加密"><a class="markdownIt-Anchor" href="#rsa加密"></a> RSA加密</h2><h3 id="密钥生成"><a class="markdownIt-Anchor" href="#密钥生成"></a> 密钥生成</h3><ol><li>首先选择互异的大素数p,q，计算n=p*q，由欧拉定理计算大素数乘积的欧拉数φ(n)=(p-1)(q-1)。</li><li>选择整数e使得gcd(φ(n),e)=1，其中1&lt;e&lt;φ(n)。</li><li>计算d=e<sup>-1</sup>mod φ(n)。</li><li>此时公钥KU={e,n}</li><li>私钥={d,φ(n)}</li></ol><h3 id="算法描述"><a class="markdownIt-Anchor" href="#算法描述"></a> 算法描述</h3><ol><li><p>加密(用<em>e</em>, <em>n</em>)：对明文进行分组，使得每个分组对应的十进制数小于𝑛。对每个明文分组𝑚做加密运算：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>≡</mo><msup><mi>m</mi><mi>e</mi></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">c \equiv m^{e} \bmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></p></li><li><p>解密(用d，n)</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>≡</mo><msup><mi>c</mi><mi>d</mi></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">m \equiv c^{d} \bmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></p></li></ol><h3 id="证明"><a class="markdownIt-Anchor" href="#证明"></a> 证明</h3><p>我们仅验证gcd(a,n)=1的情况</p><p>对于加解密过程，我们尝试证明<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>m</mi><mi>e</mi></msup><mo>≡</mo><msup><mi>c</mi><mrow><mi>e</mi><mi>d</mi></mrow></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">m^{e} \equiv c^{ed} \bmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>是否能推出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>m</mi><mi>e</mi></msup><mo>≡</mo><mi>c</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">m^{e} \equiv c \bmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></p><p>因为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>e</mi><mo>≡</mo><mn>1</mn><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">de \equiv 1 \bmod φ(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>e</mi><mo>≡</mo><mi>k</mi><mo separator="true">⋅</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">de \equiv k·φ(n)+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>故有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>c</mi><mrow><mi>e</mi><mi>d</mi></mrow></msup><mo>=</mo><msup><mi>c</mi><mrow><mi>k</mi><mo separator="true">⋅</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow></msup><mo>=</mo><msup><mi>c</mi><mrow><mi>k</mi><mo separator="true">⋅</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">⋅</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">c^{ed}=c^{k·φ(n)+1}=c^{k·φ(n)}·c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mpunct mtight">⋅</span><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mpunct mtight">⋅</span><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span></span></span></span></p><blockquote><p>欧拉定理：若n,a为正整数，且n,a互质，则:a^φ(n)≡1 (mod n)其中φ(n)是欧拉函数</p></blockquote><p>由欧拉定理，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>c</mi><mrow><mi>k</mi><mo separator="true">⋅</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup><mo>≡</mo><mn>1</mn><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">c^{k·φ(n)} \equiv 1 \bmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mpunct mtight">⋅</span><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>，故有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>c</mi><mrow><mi>k</mi><mo separator="true">⋅</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow></msup><mo>≡</mo><mi>c</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">c^{k·φ(n)+1} \equiv c \bmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mpunct mtight">⋅</span><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></p><p>也就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>c</mi><mrow><mi>e</mi><mi>d</mi></mrow></msup><mo>≡</mo><mi>c</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">c^{ed} \equiv c \bmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></p><p>即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>m</mi><mi>e</mi></msup><mo>≡</mo><mi>c</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">m^{e} \equiv c \bmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></p><p>得证</p><h3 id="特点"><a class="markdownIt-Anchor" href="#特点"></a> 特点</h3><p>密码分析者攻击RSA体制的关键点在于如何分解<em>n</em>。若分解成功使<em>n</em>=<em>pq</em>，则可以算出𝜑(<em>n</em>)＝(<em>p</em>-1)(<em>q</em>-1)，然后由公开的<em>e</em>，解出秘密的<em>d</em> 。</p><p>若使RSA安全，<em>p</em>与<em>q</em>必为足够大的素数，使分析者没有办法在有效时间内将<em>n</em>分解出来。建议选择<em>p</em>和<em>q</em>至少是1024比特的素数，模<em>n</em>的长度至少是2048比特。</p><h3 id="例题-2"><a class="markdownIt-Anchor" href="#例题-2"></a> 例题</h3><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240605205243297.png" alt="image-20240605205243297" /></p><h2 id="椭圆曲线密码体制ecc"><a class="markdownIt-Anchor" href="#椭圆曲线密码体制ecc"></a> 椭圆曲线密码体制ECC</h2><p>这是目前已知公钥密码体制中每位提供加密强度最高的一种体制</p><h3 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h3><p>椭圆曲线是一个具有两个变元<em>x</em>和<em>y</em>的三次方程，它是满足：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mn>2</mn></msup><mo>+</mo><mi>a</mi><mi>x</mi><mi>y</mi><mo>+</mo><mi>b</mi><mi>y</mi><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>c</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>d</mi><mi>x</mi><mo>+</mo><mi>e</mi></mrow><annotation encoding="application/x-tex">y^2+axy+by=x^3+cx^2+dx+e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">c</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span></span></span></span></p><p>的所有点的集合，外加一个无穷远点O</p><p><strong>实数域</strong>上的椭圆曲线是对于固定的<em>a</em>、<em>b</em>值，满足形如方程：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">y^2=x^3+ax+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span></p><p>的所有点(<em>x</em>, <em>y</em>)的集合，外加一个无穷远点<em>O</em>。其中<em>a**、**b</em>是实数，满足4a<sup>2</sup>+27b<sup>3</sup>≠0。<em>x</em>和<em>y</em>在实数域上取值。</p><h4 id="有限域gfp上的椭圆曲线"><a class="markdownIt-Anchor" href="#有限域gfp上的椭圆曲线"></a> 有限域GF(<em>p</em>)上的椭圆曲线</h4><p><strong>有限域GF(p)上</strong>的椭圆曲线是对于固定的<em>a</em>、<em>b</em>值，满足形如方程：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mn>2</mn></msup><mo>≡</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y^2\equiv x^3+ax+b (\bmod p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></p><p>的所有点(<em>x</em>, <em>y</em>)的集合，外加一个无穷远点<em>O</em></p><p>其中a、b、x和y均在有限域GF(<em>p</em>)即{0,1,…,<em>p</em>-1}上取值，且满足4a<sup>2</sup>+27b<sup>3</sup>≠0，p是大素数。</p><p>接下来我们讨论有限域GF(<em>p</em>)上的椭圆曲线。</p><ul><li><p>该曲线由<em>p</em>、<em>a</em>和<em>b</em>完全决定，故一般可记为E<sub>p</sub>(a,b)</p></li><li><p>该椭圆曲线只有有限个点数<em>N</em>（称为椭圆曲线的阶，包括无穷远点）。它与安全性相关，<em>N</em>越大安全性越高</p></li><li><p>粗略估计时，<em>N</em>近似等于<em>p</em>；更精确的范围由Hasse定理确定</p></li></ul><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240605210619155.png" alt="image-20240605210619155" style="zoom:67%;" /><h5 id="计算"><a class="markdownIt-Anchor" href="#计算"></a> 计算</h5><p>GF(23)上的一个椭圆曲线：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mn>2</mn></msup><mo>≡</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo stretchy="false">(</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>23</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y^2\equiv x^3+x(\bmod 23)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord">2</span><span class="mord">3</span><span class="mclose">)</span></span></span></span>​，该椭圆曲线方程在GF(23)上的解为：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240605210458949.png" alt="image-20240605210458949" style="zoom:50%;" /><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240605210520001.png" alt="image-20240605210520001" style="zoom: 67%;" /><p>对E<sub>p</sub>(a,b)的计算过程如下：</p><ol><li>对每一𝑥（0 ≤ 𝑥 &lt; 𝑝且𝑥为整数），计算<em>x</em>3+<em>ax</em>+<em>b</em> (mod <em>p</em>)</li><li>决定（1） 中求得的值在模p下是否有平方根，如果没有，则曲线上没有与这一𝑥相对应的点。如果有，则求出两个平方根（<em>y</em>=0时只有一个平方根）</li></ol><p>决定是否有平方根涉及到<strong>平方剩余</strong>定理。</p><blockquote><p>平方剩余</p><p>定理：设p是素数，a是一正整数，a是p的平方剩余的充要条件是：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo>≡</mo><mn>1</mn><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">a^{(p-1)/2}\equiv 1 \bmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span></p><p>a是p的非平方剩余的充要条件是：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo>≡</mo><mo>−</mo><mn>1</mn><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">a^{(p-1)/2}\equiv -1 \bmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span></p><p>例：p=23，a=5， 𝑎(𝑝−1)/2 ≡ 5^11 mod 23 = −1</p><p>所以，5不是模23的平方剩余。</p></blockquote><h4 id="有限域gf2m上的椭圆曲线"><a class="markdownIt-Anchor" href="#有限域gf2m上的椭圆曲线"></a> 有限域GF(2<sup>m</sup>)上的椭圆曲线</h4><p>是对于固定的<em>a</em>、<em>b</em>值，满足形如方程：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mi>y</mi><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">y^2+xy=x^3+ax^2+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span></p><p>的所有点(<em>x</em>, <em>y</em>)的集合，外加一个无穷远点<em>O</em>。其中a、b、x和y均在有限域GF(2<sup>m</sup>)上取值</p><ul><li>这类椭圆曲线通常也可用𝐸<sub>2^𝑚</sub>(a,b)来表示。</li><li>该椭圆曲线只有有限个点，域GF(2<sup>m</sup>)上的元素是m位的二进制串</li></ul><h5 id="计算-2"><a class="markdownIt-Anchor" href="#计算-2"></a> 计算</h5><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240606084648275.png" alt="image-20240606084648275" style="zoom: 50%;" /><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240606084652100.png" alt="image-20240606084652100" style="zoom:50%;" /><h3 id="运算规则"><a class="markdownIt-Anchor" href="#运算规则"></a> 运算规则</h3><ul><li>加法规则1：O+O=O</li><li>加法规则2：对于曲线上的所有点P满足P+O=P</li><li>加法规则3：对于每一个点P有一个特殊点Q满足：P+Q=O，称这个特殊点为-P。如果P=(x, y)，则-P=(x, -y)<ul><li>GF(2<sup>m</sup>)域加法规则3：如果P=(x, y)，则-P=(x, x+y)</li></ul></li><li>加法规则4：加法交换律P+Q=Q+P</li><li>加法规则5：加法结合律P+(Q+R)=(P+Q)+R</li></ul><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240606083935459.png" alt="image-20240606083935459" style="zoom:50%;" /><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240606083953668.png" alt="image-20240606083953668" style="zoom:50%;" /><p>以上加法规则在复数、实数、有理数和有限域GF(<em>p</em>)上均有效。对于有限域GF(<em>p</em>)的情形，上述加法规则得到的应是mod <em>p</em>的结果。</p><p>对于GF(2<sup>m</sup>)域的椭圆曲线，有规则6’，7’：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240606084329142.png" alt="image-20240606084329142" style="zoom:50%;" /><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240606084344567.png" alt="image-20240606084344567" style="zoom:50%;" /><h3 id="加密"><a class="markdownIt-Anchor" href="#加密"></a> 加密</h3><p>椭圆曲线密码体制的依据就是利用定义在椭圆曲线点群上的离散对数问题的难解性。</p><p>椭圆曲线𝐸上的交换群上考虑方程𝑃 = 𝑑𝐺，其中𝑃, 𝐺 ∈ 𝐸，𝑑为整数，则由𝑑和𝐺易求𝑃，但由𝑃、𝐺求 𝑑是计算上不可行的</p><p>ECELG——椭圆曲线ElGamal密码体制</p><ol><li><p>系统建立</p><p>选择一个有限域GF(<em>p</em>)，和定义在GF(<em>p</em>)上的一条椭圆曲线E<sub>p</sub>(a,b)，和E<sub>p</sub>(a,b)上的一个阶为大素数n的点G（称为基点）。椭圆曲线E<sub>p</sub>(a,b)、基点G和阶n作为系统公开参数</p></li><li><p>生成密钥</p><p>用户A通过如下计算产生自己的公私钥对<br />（1）在区间[1,n-1]中随机选取一个整数d<sub>A</sub>作为私钥<br />（2）计算P<sub>A</sub>=d<sub>A</sub>×G<br />则用户A的公钥为P<sub>A</sub> ，私钥为d<sub>A</sub></p></li><li><p>加密</p><p>当用户B要将消息m保密发送给用户A时，用户B进行如下操作：</p><ol><li>通过某种方式将明文消息m通过编码映射到曲线E<sub>p</sub>(a,b)上的点P<sub>m</sub></li><li>在区间[1,n-1]中随机选取一个整数d<sub>B</sub>作为私钥</li><li>计算P<sub>B</sub>=d<sub>B</sub>×G，并向用户A发送密文(P<sub>B</sub>, P<sub>m</sub> + d<sub>B</sub>× P<sub>A</sub>)</li></ol></li><li><p>解密</p><p>用户A收到密文进行解密，过程如下：<br />(P<sub>m</sub> + d<sub>B</sub>× P<sub>A</sub>) - d<sub>A</sub>× P<sub>B</sub></p></li></ol><p>验证：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><msub><mi>P</mi><mi>m</mi></msub><mo>+</mo><msub><mi>d</mi><mi mathvariant="normal">B</mi></msub><mo>×</mo><msub><mi>P</mi><mi mathvariant="normal">A</mi></msub><mo fence="true">)</mo></mrow><mo>−</mo><msub><mi>d</mi><mi mathvariant="normal">A</mi></msub><mo>×</mo><msub><mi>P</mi><mi mathvariant="normal">B</mi></msub><mo>=</mo><msub><mi>P</mi><mi>m</mi></msub><mo>+</mo><msub><mi>d</mi><mi mathvariant="normal">B</mi></msub><mo>×</mo><msub><mi>d</mi><mi mathvariant="normal">A</mi></msub><mo>×</mo><mi>G</mi><mo>−</mo><msub><mi>d</mi><mi mathvariant="normal">A</mi></msub><mo>×</mo><msub><mi>d</mi><mi mathvariant="normal">B</mi></msub><mo>×</mo><mi>G</mi><mo>=</mo><msub><mi>P</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">\left(P_{m}+d_{\mathrm{B}} \times P_{\mathrm{A}}\right)-d_{\mathrm{A}} \times P_{\mathrm{B}}=P_{m}+d_{\mathrm{B}} \times d_{\mathrm{A}} \times G-d_{\mathrm{A}} \times d_{\mathrm{B}} \times G=P_{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">B</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">A</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">A</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">B</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">B</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">A</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">A</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">B</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>关于明文到椭圆曲线上的嵌入：</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240605213121828.png" alt="image-20240605213121828" style="zoom:50%;" /><h3 id="例题-3"><a class="markdownIt-Anchor" href="#例题-3"></a> 例题</h3><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/image-20240606084509649.png" alt="image-20240606084509649" style="zoom:80%;" /><h2 id="常见加密算法及其数学基础"><a class="markdownIt-Anchor" href="#常见加密算法及其数学基础"></a> 常见加密算法及其数学基础</h2><table><thead><tr><th>加密算法</th><th>类型</th><th>数学基础</th><th>描述</th></tr></thead><tbody><tr><td><strong>AES</strong></td><td>对称加密</td><td>有限域上的代数操作</td><td>使用字节替代、行移位、列混淆和轮密钥加的多轮变换。</td></tr><tr><td><strong>DES</strong></td><td>对称加密</td><td>Feistel 网络和置换操作</td><td>基于 Feistel 结构，通过多轮置换和替换操作来加密数据。</td></tr><tr><td><strong>RSA</strong></td><td>非对称加密</td><td>大整数的质因数分解</td><td>基于两个大质数的乘积构成的模数和一个公开的指数。</td></tr><tr><td><strong>ECC</strong></td><td>非对称加密</td><td>椭圆曲线上的离散对数问题</td><td>使用椭圆曲线上的点和曲线方程来生成公钥和私钥。</td></tr><tr><td><strong>DSA</strong></td><td>非对称加密</td><td>离散对数问题</td><td>使用一组公开参数和一个私钥来生成和验证签名。</td></tr><tr><td><strong>ElGamal</strong></td><td>非对称加密</td><td>离散对数问题</td><td>基于离散对数问题，通过使用一个随机数和一个公钥来加密消息。</td></tr><tr><td><strong>SHA-256</strong></td><td>哈希函数</td><td>位操作和逻辑运算</td><td>通过多个复杂的位操作、替换和压缩函数生成固定长度的散列值。</td></tr><tr><td><strong>MD5</strong></td><td>哈希函数</td><td>位操作和逻辑运算</td><td>使用多个固定的位操作和压缩函数生成固定长度的散列值。</td></tr><tr><td><strong>Diffie-Hellman</strong></td><td>密钥交换</td><td>离散对数问题</td><td>基于离散对数问题，允许两个通信方生成共享的秘密密钥。</td></tr><tr><td><strong>zk-SNARKs</strong></td><td>零知识证明</td><td>多项式承诺和同态加密</td><td>允许一个方证明其拥有某个秘密信息而不透露该信息本身。</td></tr></tbody></table><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/116586172_p0.jpg" alt="116586172_p0" /></p>]]></content>
    
    
    <summary type="html">简单的归纳关于Diffie-Hellman密钥交换技术、RSA加密以及椭圆曲线的一些基本知识点。</summary>
    
    
    
    <category term="课堂随笔" scheme="http://example.com/categories/%E8%AF%BE%E5%A0%82%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="数论" scheme="http://example.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="密码学" scheme="http://example.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    <category term="Diffie-Hellman" scheme="http://example.com/tags/Diffie-Hellman/"/>
    
    <category term="RSA" scheme="http://example.com/tags/RSA/"/>
    
    <category term="椭圆曲线" scheme="http://example.com/tags/%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>5月总结·2024</title>
    <link href="http://example.com/posts/3a0e8080d50f/"/>
    <id>http://example.com/posts/3a0e8080d50f/</id>
    <published>2024-06-01T05:35:56.000Z</published>
    <updated>2024-06-01T05:35:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="5月总结2024"><a class="markdownIt-Anchor" href="#5月总结2024"></a> 5月总结·2024</h1><p>5月也算是过去了，这绝对是我大学以来最忙碌的一个月份。</p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/cc7914d2e08d6d1311b9952c5d026ba.jpg" alt="cc7914d2e08d6d1311b9952c5d026ba" style="zoom: 33%;" /><p>看看这令人发指的日程表，除了开头的五一假期外所有周末全部阵亡；；</p><p>那么，就来回顾一下我在五月份都做了些什么吧。</p><h2 id="比赛篇"><a class="markdownIt-Anchor" href="#比赛篇"></a> 比赛篇</h2><h3 id="广东省信息安全省赛"><a class="markdownIt-Anchor" href="#广东省信息安全省赛"></a> 广东省信息安全省赛</h3><p>小打了一手省赛。命题机制十分抽象，分为知识赛和常规CTF两个阶段，根本不知道意义何在。知识赛的目的我怀疑就是给拿来py的，虽然电脑都有录屏，但是手机可以查啊……于是在第一个周六的晚上水过了知识赛后，第一个周日开始打CTF。</p><p>CTF也是非同凡响，一上来就给了所有人一个下马威：比赛平台因为访问量太大直接崩溃了一个半小时，可能省赛的服务器是用土豆搭的。于是乎比赛录屏就录下了我们打了一个小时力扣、知乎、甚至第五人格。最后开放试题后题目质量也是不负众望延续了抽象本色。我是做Web的，只拿下了一道文件包含。第二道题是关于phar压缩包反序列化的，找修改压缩包的脚本花费了大量时间差临门一脚就能出来了。剩下的三道题目全是零解，但是在比赛即将结束的前5分钟提交数却猛然上升最后达到了差不多一百余位……很难不怀疑比赛主办方是否在py题目。</p><p>据说逆向也是相当抽象，听打逆向的队友说题目反编译后直接把一个谜题打印出来要你去解，与其说叫Re更不如说是Misc，气的队友破口大骂了一个下午。</p><p>总之最后的结果也是喜闻乐见，大家都没有进决赛：）。</p><h3 id="全国大学生信息安全竞赛-ciscn-2024"><a class="markdownIt-Anchor" href="#全国大学生信息安全竞赛-ciscn-2024"></a> 全国大学生信息安全竞赛 CISCN 2024</h3><p>第二个周末，小试了一手国赛，同样不能理解国赛的赛制，但好歹还是常规的CTF。这次是凭实力零解了，想来也在意料之中，平时本来也没有着重训练这方面，事后看完WP我也不认为我能够写出来那几道题，果然CTF这个方向还是不适合我吧。因为进入校队晚了一年已经成了替补位，得不到校队的资源倾斜和培养，基本上就是自生自灭的态度了。既然如此，也没必要在这一个方向死磕。果然我还是更适合传统的开发工作吧。</p><p>最后再吐槽一下Web的签到题，最讨厌这种几行php代码然后过滤一大堆指令的题目，有一种把手脚砍断去参加游泳比赛的美感。我个性又不叫不信邪，就是喜欢死磕，不过可惜到最后也没有做出来个所以然。这题大概有五六百个解吧，py肯定是有的，不过我也没做出来，就这样吧。</p><h3 id="广东省计算机程序设计大赛粤港澳赛区"><a class="markdownIt-Anchor" href="#广东省计算机程序设计大赛粤港澳赛区"></a> 广东省计算机程序设计大赛·粤港澳赛区</h3><p>准备了大概小一个月，我的主要工作就是完成了深度伪造检测攻击中的Auto Encoder部分和一些Flask的前端框架编写。我对人工智能这块实在是没有多少涉猎，但是抱着论文啃一啃也能搞点东西出来。毕竟这东西如果不涉及底层，只是使用的话上手门槛很低。</p><p>最后在第三个周末去广州外语外贸大学答辩。发现自己可能并不很适合去答辩，念着念着嗓子就容易哑，和这周一汇报毛概调研一样的状况。可能，是高中时期因为一些事情没保养好嗓子的缘故吧，只要长时间大声说话嗓子就会宕机（所以也很害怕去KTV）。念PPT的过程很煎熬，一方面是因为嗓子，一方面是因为队长没有对做PPT的同学交代好时间导致他做了20分钟的量，而我得在5分钟内读完。真的很考验语速和归纳能力。</p><p>不过所幸努力并没有白费，最后也是拿下了省一等奖。虽然说含金量并不大，因为我们这个赛道没有985下场（当时本来想报主赛道结果因为学校的种种逆天操作导致错过了作品提交时间），光从学校来看能扳扳手腕的也就只有深大了，所以拿下一等奖也并不意外。在这之后，同一个项目也入选了国家级大创，并且队长也同意把这个项目的软著一作给我。想必之后还有忙不完的事情吧。</p><h3 id="吴渔夫选拔赛"><a class="markdownIt-Anchor" href="#吴渔夫选拔赛"></a> 吴渔夫选拔赛</h3><p>同样的项目参加了学校组织的吴渔夫比赛，顺利拿下了二等奖和国家级大创入围资格。</p><h3 id="数学建模校赛"><a class="markdownIt-Anchor" href="#数学建模校赛"></a> 数学建模校赛</h3><p>一个学校组织的数学建模比赛，用来筛选参加今年数学建模国赛的。自从上次美赛后本来打算一辈子不碰数模的，但是架不住朋友的邀约还是选择了尝试一下，这次我就负责论文撰写（或许还有一部分的编程），建模部分交给了两位信计专业的队友，果然专业的事还得专业的人来做。</p><p>开讨论间讨论了一下四个选题，过程都十分坎坷。从个人角度来讲我对这次数模比赛本身也不报多大希望。</p><h2 id="书籍篇"><a class="markdownIt-Anchor" href="#书籍篇"></a> 书籍篇</h2><h3 id="go语言圣经"><a class="markdownIt-Anchor" href="#go语言圣经"></a> Go语言圣经</h3><p>说实话我的进度太慢了，这个月也就才阅读了一半，尤其是在阅读接口部分时卡住了。我没有系统的学过OOP，在C语言中不存在接口的概念，Python里也没有深入学习到抽象基类，因此第一次就是在Go中理解接口对我来说异常困难。不过在查阅过一些资料后，现在也能勉强理解。</p><p>哪怕按每天十页的进度来说，这本书也该在一个月内就啃完了。很显然我多数时间并没有完成预期目标，这点对我来说还是挺有挫败感的。我计划尽量在六月份把书的主体部分看完，至于一些细节的编程技巧可以再等到期末考试完后慢慢反刍。现在除了阅读书籍外，我也在尝试每天做几道LeetCode来加深对Go的理解，并且正准备用Go开发一个项目玩玩。</p><h3 id="罪与罚"><a class="markdownIt-Anchor" href="#罪与罚"></a> *罪与罚</h3><p>看了一半多，进度不大。目前还不想花太多篇幅写观后感，只要知道我还在看就行。吐槽一句我果然还不是很适应陀翁的书，这种大部头名著看起来其实挺耗精力的，在毛概读了没多会就头晕目眩直想睡觉了。</p><p>忙里偷闲赶紧看完，想去看《霍乱时期的爱情》了。</p><h3 id="結婚しても恋してる"><a class="markdownIt-Anchor" href="#結婚しても恋してる"></a> *結婚しても恋してる</h3><p>思来想去还是放日文好点吧。一本温馨幸福的书，就像一小块蓝莓口味的水果糖，用大概两个晚上的时间就读完了。</p><p>人呐，果然还是应该热忱的面对生活。</p><h2 id="项目篇"><a class="markdownIt-Anchor" href="#项目篇"></a> 项目篇</h2><h3 id="一个基于go的redis客户端"><a class="markdownIt-Anchor" href="#一个基于go的redis客户端"></a> 一个基于Go的Redis客户端</h3><p>正好舍友用Rust重写了一个Redis服务端，他也有兴趣指导我做一个Redis的客户端，于是乎就这么顺理成章的上马了。目前还只是在项目需求阶段，具体的知识还得自己去学。不说数据库和尚未学完的Go了，什么RESP3协议、TLS协议、RDB数据持久化、连接池、pipline、Lua都是些没接触过的新东西，我估计也要等到暑假才会正式开始启动吧。</p><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><h3 id="关于读研"><a class="markdownIt-Anchor" href="#关于读研"></a> 关于读研</h3><p>这个月一直在纠结焦虑是读研还是直接就业。去年的绩点并不理想，先暂且不考虑保研。比起刷题看课卷数学，我更愿意学习一些工程知识。但是考虑到将来的职业规划，我又在担心本科学历是否会成为我之后的掣肘。</p><p>所以我去找了一位老师攀谈。老师很年轻，可以说是年少有为，25岁回国就来学校上班了，少走了很多弯路，也很愿意去指导学生。他的意见其实比较谨慎，还是说要根据个人情况决定。不过他也给出了考研的蓝图，大概明年二月份就可以开始准备了。十个月的时间准备考研足矣，如果十个月的时间考不上研究生，那么他认为不如再考虑考虑自己是否适合读研这条路。也就是说，我还有半年的“缓刑”。毕竟大三上还在上操作系统呢，这也意味着我还可以再多钻研半年技术。</p><h2 id="随便写点"><a class="markdownIt-Anchor" href="#随便写点"></a> 随便写点</h2><p>五月份的总结到此结束。在写完的那一刻，我才对那个已经逝去的五月有了一点大概的印象。明明忙碌的三十天才刚过去，现在却只剩下了寥寥一两千字，有一种荒诞的不真实感。</p><p>其实仔细对比一下前面的总结，我在五月份的工作量反而减少了。一方面是由于学期进入到后期课业压力日益增大，另一方面，尽管我不想承认，我也有相当一部分时间在“说漂亮话”吧。明明雄心壮志的定下了明天的规划，第二天的工作却直到中午才姗姗来迟。我看似在忙碌的时间很多，实际上做成的事情却很少。也许，我打下这些字的初衷之一，也只不过是为了欺骗自己，今天也很努力了，然后如释重负地坐回椅子上开始兴致勃勃地刷视频。</p><p>我知道这是我的个人总结，想必也不会有多少人来看，愿意听我发牢骚的人想必也是在实际生活中愿意关注我的人，和他们开诚布公的聊聊自己我觉得没什么大问题。所以属于我的缺点，我也会尽可能的罗列出来，然后在新的一个月里，努力的debug，始终让自己处于一个相对稳定的状态。</p><p>最近我也开始听一些古典音乐。一开始还是在B站上听A叔改编的一些动漫钢琴曲，后来刷到了郎朗弹《钟》的视频，看完后这首曲子在脑子里回响了一天。于是就开始有意识的去找一些入门的古典音乐听听。比如莫扎特的土耳其进行曲、肖邦的夜曲、勃拉姆斯和舒伯特的摇篮曲、贝多芬的月光、致爱丽丝，还有卡门序曲、匈牙利舞曲第五首这些“烂大街”的曲子，我都挺喜欢的。</p><p>是听坦白来说我做不到像专业的人那样去欣赏，我只是单纯的觉得有些音乐很好听。当然，也有一些想要向阳春白雪靠拢的附庸风雅的念头。我一直致力于提高自己，如何让自己走得更远。但是实际上要做到这件事是很困难的一件事，所以很容易喊着喊着就沦落成了一句口号，除了满足自己的虚荣心和填平自己摆烂的愧疚感外毫无作用。就像那些谁也听不懂的古典音乐，对我来说除了好听一无是处。</p><p>但是音乐只要用心聆听下去，总会有产生共鸣的那一天。踏踏实实，脚踏实地的去学习和挑战自己，人也一定会有所成长，或者说除了持之以恒的、问心无愧的实干，别无他法。更何况，我也没有退路可言。我相信，即使是现在这个一无所长的我，将来也会有一天，能够听一场正式的音乐会吧。</p><p>好了，不管怎么说，今天是儿童节。</p><p>先祝我儿童节快乐吧：）。</p><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/8981cb99c62b4476c46ad281521a5e11.jpeg" alt="8981cb99c62b4476c46ad281521a5e11" /></p>]]></content>
    
    
    <summary type="html">5月份的个人总结</summary>
    
    
    
    <category term="月度总结" scheme="http://example.com/categories/%E6%9C%88%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Go修炼手册——方法</title>
    <link href="http://example.com/posts/87481f6e6c8c/"/>
    <id>http://example.com/posts/87481f6e6c8c/</id>
    <published>2024-05-26T11:32:09.000Z</published>
    <updated>2024-05-26T11:32:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h2><p>方法是面向对象编程（OOP）的重要一环。从我们的理解来讲，一个对象其实也就是一个简单的值或者一个变量，在这个对象中会包含一些方法，而一个方法则是一个和特殊类型关联的函数。一个面向对象的程序会用方法来表达其属性和对应的操作，这样使用这个对象的用户就不需要直接去操作对象，而是借助方法来做这些事情。</p><p>本章会介绍OOP编程中的两个关键点：封装和组合。</p><h3 id="方法声明"><a class="markdownIt-Anchor" href="#方法声明"></a> 方法声明</h3><p>在函数声明时，在其名字之前放上一个变量，即是一个方法。这个附加的参数会将该函数附加到这种类型上，即相当于为这种类型定义了一个独占的方法。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// traditional function</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Distance</span><span class="params">(p, q Point)</span></span> <span class="type">float64</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> math.Hypot(q.X-p.X, q.Y-p.Y)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// same thing, but as a method of the Point type</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Point)</span></span> Distance(q Point) <span class="type">float64</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> math.Hypot(q.X-p.X, q.Y-p.Y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Go语言中，我们并不会像其它语言那样用this或者self作为接收器；我们可以任意的选择接收器的名字。</p><p>比如在Python中定义方法的话，首先得声明一个类。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">P</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.x = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">self</span>):</span><br><span class="line">        self.x += <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="基于指针对象的方法"><a class="markdownIt-Anchor" href="#基于指针对象的方法"></a> 基于指针对象的方法</h3><p>当调用一个函数时，会对其每一个参数值进行拷贝，如果一个函数需要更新一个变量，或者函数的其中一个参数实在太大我们希望能够避免进行这种默认的拷贝，这种情况下我们就需要用到指针了。对应到我们这里用来更新接收器的对象的方法，当这个接受者变量本身比较大时，我们就可以用其指针而不是对象来声明方法。</p><p>比如：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Point)</span></span> ScaleBy(factor <span class="type">float64</span>) &#123;</span><br><span class="line"> p.X *= factor</span><br><span class="line"> p.Y *= factor</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在调用这个方法时，可以通过以下的方式：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r := &amp;Point&#123;<span class="number">1</span>,<span class="number">2</span>&#125;</span><br><span class="line">r.ScaleBy(<span class="number">2</span>)</span><br><span class="line">fmt.Println(*r) <span class="comment">// &quot;&#123;2, 4&#125;&quot;</span></span><br><span class="line"><span class="comment">//----</span></span><br><span class="line">p := Point&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line">pptr := &amp;p</span><br><span class="line">pptr.ScaleBy(<span class="number">2</span>)</span><br><span class="line">fmt.Println(p) <span class="comment">// &quot;&#123;2, 4&#125;&quot;</span></span><br><span class="line"><span class="comment">//----</span></span><br><span class="line">p := Point&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line">(&amp;p).ScaleBy(<span class="number">2</span>)</span><br><span class="line">fmt.Println(p) <span class="comment">// &quot;&#123;2, 4&#125;&quot;</span></span><br><span class="line"><span class="comment">//----</span></span><br></pre></td></tr></table></figure><p>后两种方法有些笨拙，但实际上我们可以简化这个步骤。Go语言的编译器会隐式的帮你去转换类型。比如一个类型为Point的p变量，如果方法的接收器要求是一个Point指针，可以用简短写法如下：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">P.ScaleBy(<span class="number">2</span>)</span><br><span class="line"><span class="comment">//等价于(&amp;P).ScaleBy</span></span><br></pre></td></tr></table></figure><p>同样的，对于指针类型的变量调用接收器为类型本身的方法时编译器也会做自动的类型转换。</p><p>只有类型（Point）和指向他们的指针 (*Point) ，才可能是出现在接收器声明里的两种接收器。此外，为了避免歧义，在声明方法时，如果一个类型名本身是一个指针的话，是不允许其出现在接收器中的。</p><p>可以总结为如下两点：</p><blockquote><ol><li><p>不管你的method的receiver是指针类型还是非指针类型，都是可以通过指针/非指针类型进行调用的，编译器会帮你做类型转换。</p></li><li><p>在声明一个method的receiver该是指针还是非指针类型时，你需要考虑两方面的因素，第一方面是这个对象本身是不是特别大，如果声明为非指针变量时，调用会产生一次拷贝；第二方面是如果你用指针类型作为receiver，那么你一定要注意，这种指针类型指向的始终是一块内存地址，就算你对其进行了拷贝。熟悉C或者C++的人这里应该很快能明白。</p></li></ol></blockquote><h3 id="通过嵌入结构体来扩展类型"><a class="markdownIt-Anchor" href="#通过嵌入结构体来扩展类型"></a> 通过嵌入结构体来扩展类型</h3><p>假如我们拥有如下代码：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;image/color&quot;</span></span><br><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span>&#123; X, Y <span class="type">float64</span> &#125;</span><br><span class="line"><span class="keyword">type</span> ColoredPoint <span class="keyword">struct</span> &#123;</span><br><span class="line"> Point</span><br><span class="line">  Color color.RGBA</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这段代码中，我们定义了一个内嵌结构体<code>ColoredPoint</code>，它包含<code>Point</code>类型的一切字段，并且自己又定义了一些额外的成员。</p><p>在<code>ColoredPoint</code>类型中，我们可以直接使用<code>Point</code>类型的方法，而无需指出<code>Point</code>。即使在<code>ColoredPoint</code>没有声明这样的方法。</p><p>用这种方式，内嵌可以使我们定义字段特别多的复杂类型，我们可以将字段先按小类型分组，然后定义小类型的方法，之后再把它们<strong>组合</strong>起来。</p><blockquote><p>读者如果对基于类来实现面向对象的语言比较熟悉的话，可能会倾向于将Point看作一个基类，而ColoredPoint看作其子类或者继承类，或者将ColoredPoint看作&quot;is a&quot; Point类型。但这是错误的理解。请注意上面例子中对Distance方法的调用。Distance有一个参数是Point类型，但q并不是一个Point类，所以尽管q有着Point这个内嵌类型，我们也必须要显式地选择它。</p></blockquote><p>也即你需要在调用<code>Point</code>类的方法前显示的指定<code>Point</code>。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">p.Distance(q) <span class="comment">// error</span></span><br><span class="line">p.Point.Distance(q)<span class="comment">// right</span></span><br></pre></td></tr></table></figure><p>当Point.Distance被第一个包装方法调用时，它的接收器值是p.Point，而不是p。</p><p>在类型中内嵌的匿名字段也可能是一个命名类型的指针，这种情况下字段和方法会被间接地引入到当前的类型中。这种间接关系允许我们共享通用的结构。</p><p>一个struct类型也可能会有多个匿名字段。这样他就获得了匿名字段中定义的所有方法。</p><h3 id="方法值和方法表达式"><a class="markdownIt-Anchor" href="#方法值和方法表达式"></a> 方法值和方法表达式</h3><p>我们经常选择一个方法，并且在同一个表达式里执行，比如常见的p.Distance()形式，实际上将其分成两步来执行也是可能的。</p><blockquote><p>p.Distance叫作“选择器”，选择器会返回一个方法“值”-&gt;一个将方法（Point.Distance）绑定到特定接收器变量的函数。这个函数可以不通过指定其接收器即可被调用；即调用时不需要指定接收器（译注：因为已经在前文中指定过了），只要传入函数的参数即可</p></blockquote><p>也就是可以通过下面这种方法来调用方法，来分离其与变量本身。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">scaleP := p.ScaleBy <span class="comment">// method value</span></span><br><span class="line">scaleP(<span class="number">2</span>) <span class="comment">// p becomes (2, 4)</span></span><br><span class="line"><span class="comment">//等价于下面这种用法</span></span><br><span class="line">res=p.ScaleBy(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>在一个包的API需要一个函数值、且调用方希望操作的是某一个绑定了对象的方法的话，方法“值”会非常实用.</p><p>其实就是把一个方法作为“值”去传递，这与C语言中传递函数指针的概念类似，但Go语言的方法值提供了类型安全和更简洁的语法。</p><h3 id="封装"><a class="markdownIt-Anchor" href="#封装"></a> 封装</h3><p>一个对象的变量或者方法如果对调用方是不可见的话，一般就被定义为“封装”。封装有时候也被叫做信息隐藏，同时也是面向对象编程最关键的一个方面。</p><p>Go语言只有一种控制可见性的手段：大写首字母的标识符会从定义它们的包中被导出，小写字母的则不会。这种限制包内成员的方式同样适用于struct或者一个类型的方法。因而如果我们想要封装一个对象，我们必须将其定义为一个struct</p><p>这种基于名字的手段使得在语言中最小的封装单元是package，而不是像其它语言一样的类型。一个struct类型的字段对同一个包的所有代码都有可见性，无论你的代码是写在一个函数还是一个方法里</p><p>封装提供了三方面的优点。首先，因为调用方不能直接修改对象的变量值，其只需要关注少量的语句并且只要弄懂少量变量的可能的值即可。</p><p>第二，隐藏实现的细节，可以防止调用方依赖那些可能变化的具体实现，这样使设计包的程序员在不破坏对外的api情况下能得到更大的自由</p><p>封装的第三个优点也是最重要的优点，是阻止了外部调用方对对象内部的值任意地进行修改。因为对象内部变量只可以被同一个包内的函数修改，所以包的作者可以让这些函数确保对象内部的一些值的不变性。</p><blockquote><p>只用来访问或修改内部变量的函数被称为setter或者getter，例子如下，比如log包里的Logger类型对应的一些函数。在命名一个getter方法时，我们通常会省略掉前面的Get前缀。这种简洁上的偏好也可以推广到各种类型的前缀比如Fetch，Find或者Lookup。</p></blockquote><p>Go的编码风格不禁止直接导出字段。当然，一旦进行了导出，就没有办法在保证API兼容的情况下去除对其的导出，所以在一开始的选择一定要经过深思熟虑并且要考虑到包内部的一些不变量的保证，未来可能的变化，以及调用方的代码质量是否会因为包的一点修改而变差。</p><p>所以最好还是用setter或者getter等专门的方法去获取变量，方便维护。</p><p>封装并不总是理想的。 虽然封装在有些情况是必要的，但有时候我们也需要暴露一些内部内容，比如：time.Duration将其表现暴露为一个int64数字的纳秒，使得我们可以用一般的数值操作来对时间进行对比，甚至可以定义这种类型的常量</p><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><p>在这章中，我们学到了如何将方法与命名类型进行组合，并且知道了如何调用这些方法。尽管方法对于OOP编程来说至关重要，但他们只是OOP编程里的半边天。为了完成OOP，我们还需要接口。Go里的接口会在下一章中介绍。</p><hr /><p><img src="https://adam8en-blog-image.oss-cn-guangzhou.aliyuncs.com/2c28c545aca49c9b356d3b8ae2f935cf.jpeg" alt="" /></p>]]></content>
    
    
    <summary type="html">介绍了Go语言中方法的特性，OOP编程完成度1/2！</summary>
    
    
    
    <category term="Go!Go!Go!" scheme="http://example.com/categories/Go-Go-Go/"/>
    
    
    <category term="Go" scheme="http://example.com/tags/Go/"/>
    
  </entry>
  
</feed>
